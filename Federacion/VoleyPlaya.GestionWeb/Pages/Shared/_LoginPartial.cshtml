@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var PendingRequests = UserManager.Users.Where(u => !u.EmailConfirmed).Count();
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole(eRoles.Admin.ToString()))
        {
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/RegisterRequests">
                    Gestión de usuarios
                    <span class="badge text-bg-secondary">@PendingRequests</span>
                </a>
            </li>
        }
        <li class="nav-item">
            <a  class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hola @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline text-white" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
                <button  type="submit" class="nav-link btn btn-link text-white">Salir</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Registro</a>
        </li>
        <li class="nav-item">
                <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Entrar</a>
        </li>
    }
</ul>
