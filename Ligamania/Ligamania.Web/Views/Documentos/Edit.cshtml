@model DocumentoVM

@{
    ViewData["Title"] = "Editar";
    var listaSiNo = new SelectList(new List<string> { "SI", "NO" });
}
<div class="card m-3 p-2">
    <div class="row">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            @Html.HiddenFor(model => model.Id)
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="Documento" class="control-label"></label>
                    <input asp-for="Documento" class="form-control" />
                    <span asp-validation-for="Documento" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Descripcion" class="control-label"></label>
                    <input asp-for="Descripcion" class="form-control" />
                    <span asp-validation-for="Descripcion" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Tipo" class="control-label"></label>
                    <input asp-for="Tipo" class="form-control" />
                    <span asp-validation-for="Tipo" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Contenido" class="control-label"></label>
                    <input type="file" id="fUpload" name="files" class="form-control" style="padding:2px" />
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary m-3" />
            </div>
        </form>
    </div>
</div>
<div class="m-3">
    <a asp-action="Index">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}