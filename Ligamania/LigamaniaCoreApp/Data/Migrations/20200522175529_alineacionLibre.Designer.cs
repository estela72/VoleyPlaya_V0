// <auto-generated />
using System;
using LigamaniaCoreApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LigamaniaCoreApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200522175529_alineacionLibre")]
    partial class alineacionLibre
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionCambioDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria_ID")
                        .HasColumnName("Categoria_ID");

                    b.Property<int?>("ClubCambio_ID")
                        .HasColumnName("ClubCambio_ID");

                    b.Property<int>("Club_ID")
                        .HasColumnName("Club_ID");

                    b.Property<int>("Competicion_ID")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Equipo_ID")
                        .HasColumnName("Equipo_ID");

                    b.Property<int?>("JugadorCambio_ID")
                        .HasColumnName("JugadorCambio_ID");

                    b.Property<int>("Jugador_ID")
                        .HasColumnName("Jugador_ID");

                    b.Property<int>("Puesto_ID")
                        .HasColumnName("Puesto_ID");

                    b.Property<int>("Temporada_ID")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_ID");

                    b.HasIndex("ClubCambio_ID");

                    b.HasIndex("Club_ID");

                    b.HasIndex("Competicion_ID");

                    b.HasIndex("Equipo_ID");

                    b.HasIndex("JugadorCambio_ID");

                    b.HasIndex("Jugador_ID");

                    b.HasIndex("Puesto_ID");

                    b.HasIndex("Temporada_ID", "Competicion_ID", "Categoria_ID", "Equipo_ID")
                        .HasName("IX_AlineacionCambio_2");

                    b.HasIndex("Temporada_ID", "Competicion_ID", "Categoria_ID", "Equipo_ID", "Jugador_ID")
                        .IsUnique()
                        .HasName("IX_AlineacionCambio");

                    b.ToTable("Alineacion_Cambio");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria_ID")
                        .HasColumnName("Categoria_ID");

                    b.Property<int>("Club_ID")
                        .HasColumnName("Club_ID");

                    b.Property<int>("Competicion_ID")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Equipo_ID")
                        .HasColumnName("Equipo_ID");

                    b.Property<int>("Jornada_ID")
                        .HasColumnName("Jornada_ID");

                    b.Property<int>("Jugador_ID")
                        .HasColumnName("Jugador_ID");

                    b.Property<int>("Puesto_ID")
                        .HasColumnName("Puesto_ID");

                    b.Property<int>("Temporada_ID")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_ID");

                    b.HasIndex("Club_ID");

                    b.HasIndex("Competicion_ID");

                    b.HasIndex("Equipo_ID")
                        .HasName("IX_Alineacion_2");

                    b.HasIndex("Jornada_ID");

                    b.HasIndex("Jugador_ID");

                    b.HasIndex("Puesto_ID");

                    b.HasIndex("Temporada_ID", "Competicion_ID", "Categoria_ID", "Jornada_ID")
                        .HasName("IX_Alineacion_3");

                    b.HasIndex("Temporada_ID", "Competicion_ID", "Categoria_ID", "Equipo_ID", "Jornada_ID", "Jugador_ID")
                        .IsUnique()
                        .HasName("IX_Alineacion");

                    b.ToTable("Alineacion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionHistoricoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria_ID")
                        .HasColumnName("Categoria_ID");

                    b.Property<int>("Club_ID")
                        .HasColumnName("Club_ID");

                    b.Property<int>("Competicion_ID")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Equipo_ID")
                        .HasColumnName("Equipo_ID");

                    b.Property<int>("Jornada_ID")
                        .HasColumnName("Jornada_ID");

                    b.Property<int>("Jugador_ID")
                        .HasColumnName("Jugador_ID");

                    b.Property<int>("Puesto_ID")
                        .HasColumnName("Puesto_ID");

                    b.Property<int>("Temporada_ID")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_ID");

                    b.HasIndex("Club_ID");

                    b.HasIndex("Competicion_ID");

                    b.HasIndex("Equipo_ID")
                        .HasName("IX_HistoricoAlineacion_2");

                    b.HasIndex("Jornada_ID");

                    b.HasIndex("Jugador_ID");

                    b.HasIndex("Puesto_ID");

                    b.HasIndex("Temporada_ID", "Competicion_ID", "Categoria_ID", "Jornada_ID")
                        .HasName("IX_HistoricoAlineacion_3");

                    b.HasIndex("Temporada_ID", "Competicion_ID", "Categoria_ID", "Equipo_ID", "Jornada_ID", "Jugador_ID")
                        .IsUnique()
                        .HasName("IX_HistoricoAlineacion");

                    b.ToTable("HistoricoAlineacion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionPreviaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria_ID")
                        .HasColumnName("Categoria_ID");

                    b.Property<int>("Club_ID")
                        .HasColumnName("Club_ID");

                    b.Property<int>("Competicion_ID")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Equipo_ID")
                        .HasColumnName("Equipo_ID");

                    b.Property<int>("Jugador_ID")
                        .HasColumnName("Jugador_ID");

                    b.Property<int>("Puesto_ID")
                        .HasColumnName("Puesto_ID");

                    b.Property<int>("Temporada_ID")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_ID");

                    b.HasIndex("Club_ID");

                    b.HasIndex("Competicion_ID");

                    b.HasIndex("Equipo_ID");

                    b.HasIndex("Jugador_ID");

                    b.HasIndex("Puesto_ID");

                    b.HasIndex("Temporada_ID", "Competicion_ID", "Categoria_ID", "Equipo_ID", "Jugador_ID")
                        .IsUnique()
                        .HasName("IX_AlineacionPrevia");

                    b.ToTable("Alineacion_Previa");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CalendarioDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200);

                    b.Property<int>("NumEquipos");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CalendarioDetalleDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calendario_ID")
                        .HasColumnName("Calendario_Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Jornada");

                    b.Property<string>("Local");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Visitante");

                    b.HasKey("Id");

                    b.HasIndex("Calendario_ID");

                    b.ToTable("CalendarioDetalle");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CambiosEquipoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EquipoDestino_ID")
                        .HasColumnName("Equipo_Destino_Id");

                    b.Property<int?>("EquipoOrigen_ID")
                        .HasColumnName("Equipo_Origen_Id");

                    b.Property<int?>("Temporada_ID")
                        .HasColumnName("Temporada_Id");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EquipoDestino_ID");

                    b.HasIndex("EquipoOrigen_ID");

                    b.HasIndex("Temporada_ID");

                    b.ToTable("CambiosEquipo");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activa");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Orden");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("IX_Categoria")
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias");

                    b.Property<bool>("Baja");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Club");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionCategoriaDTO", b =>
                {
                    b.Property<int>("Categoria_Id")
                        .HasColumnName("Categoria_Id");

                    b.Property<int>("Competicion_Id")
                        .HasColumnName("Competicion_Id");

                    b.HasKey("Categoria_Id", "Competicion_Id");

                    b.HasIndex("Competicion_Id");

                    b.ToTable("CompeticionCategoria");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompeticionCopiarAliIni")
                        .HasColumnName("Competicion_CopiarAliIni")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<bool>("CopiarAlineacionInicial")
                        .HasColumnName("Copiar_AlineacionInicial");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("JornadaCuadro");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Orden");

                    b.Property<bool>("RepetirClubAliIni");

                    b.Property<int?>("Tipo");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("IX_Competicion")
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.ToTable("Competicion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ControlUsuarioDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Equipo");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Usuario")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ControlUsuario");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CuadroCopaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaEquipoAId");

                    b.Property<int>("CategoriaEquipoBId");

                    b.Property<int>("CompeticionEquipoAId");

                    b.Property<int>("CompeticionEquipoBId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("NumPartido");

                    b.Property<int>("Orden");

                    b.Property<int>("PuestoPartidoEquipoA");

                    b.Property<int>("PuestoPartidoEquipoB");

                    b.Property<int>("Ronda");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CompeticionEquipoAId", "CategoriaEquipoAId");

                    b.HasIndex("CompeticionEquipoBId", "CategoriaEquipoBId");

                    b.HasIndex("Ronda", "NumPartido")
                        .IsUnique()
                        .HasName("IX_CuadroCopa");

                    b.ToTable("CuadroCopa");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.DocumentsDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("IX_Documents")
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EntrenadorDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Baja");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("EsBot")
                        .HasColumnName("EsBOT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("IX_Entrenador")
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.ToTable("Entrenador");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<bool>("Baja");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Entrenador_Id")
                        .HasColumnName("Entrenador_Id");

                    b.Property<bool>("EsBot")
                        .HasColumnName("EsBOT");

                    b.Property<byte[]>("EscudoImage");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasName("IX_Equipo")
                        .HasFilter("[Nombre] IS NOT NULL");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EstadoCompeticionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EstadoCompeticion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.HistoricoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria_ID")
                        .HasColumnName("Categoria_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Equipo_ID")
                        .HasColumnName("Equipo_ID");

                    b.Property<bool>("Pichichi");

                    b.Property<int>("Puesto");

                    b.Property<int>("Temporada_ID")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_ID");

                    b.HasIndex("Equipo_ID");

                    b.HasIndex("Temporada_ID", "Equipo_ID", "Categoria_ID", "Puesto")
                        .IsUnique()
                        .HasName("IX_Historico");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Baja");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Jugador");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.NoticiaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activa");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("Nivel");

                    b.Property<string>("Texto")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.OperacionCompeticionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("Nombre");

                    b.Property<string>("Operacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OperacionCompeticion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuestoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200);

                    b.Property<int>("Orden");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuntuacionHistoricaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Campeon");

                    b.Property<int?>("Categoria_Id")
                        .HasColumnName("Categoria_Id");

                    b.Property<int?>("Competicion_Id")
                        .HasColumnName("Competicion_Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Pichichi");

                    b.Property<int>("Subcampeon");

                    b.Property<int>("Tercero");

                    b.Property<int>("Todos");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_Id");

                    b.HasIndex("Competicion_Id");

                    b.ToTable("PuntuacionHistorica");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.SettingsDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ClasificacionRotuloCopa")
                        .HasColumnName("Clasificacion_RotuloCopa");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumeroJornadasVolverEliminados");

                    b.Property<string>("TemporadaPremios")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("VerCuadroCopa")
                        .HasColumnName("Ver_CuadroCopa");

                    b.Property<bool?>("VerEquiposPretemporada")
                        .HasColumnName("Ver_EquiposPretemporada");

                    b.Property<bool?>("VerNoticias")
                        .HasColumnName("Ver_Noticias");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaClasificacionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnName("Categoria_ID");

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Diferencia");

                    b.Property<int>("Empatados");

                    b.Property<int>("EquipoId")
                        .HasColumnName("Equipo_ID");

                    b.Property<DateTime>("FechaIns")
                        .HasColumnType("datetime");

                    b.Property<int>("Ganados");

                    b.Property<int>("GolesContra");

                    b.Property<int>("GolesFavor");

                    b.Property<int>("JornadaId")
                        .HasColumnName("Jornada_ID");

                    b.Property<int>("Jugados");

                    b.Property<int>("Perdidos");

                    b.Property<int>("Puesto");

                    b.Property<int>("Puntos");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("JornadaId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("TemporadaClasificacion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaClubJugadorDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<int>("ClubId")
                        .HasColumnName("Club_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<int>("JugadorId")
                        .HasColumnName("Jugador_ID");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("TemporadaId", "ClubId", "JugadorId")
                        .IsUnique()
                        .HasName("IX_TemporadaClubJugador");

                    b.ToTable("TemporadaClubJugador");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnName("Categoria_ID");

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("MarcarPichichi");

                    b.Property<int>("NumeroMaximoJugadorEliminar")
                        .HasColumnName("NumeroMaximoJugador_Eliminar");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("TemporadaId", "CompeticionId", "CategoriaId")
                        .IsUnique()
                        .HasName("IX_TemporadaCompeticionCategoria");

                    b.ToTable("TemporadaCompeticionCategoria");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaReferenciaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Argb");

                    b.Property<int?>("CategoriaId");

                    b.Property<int?>("CompeticionId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<bool>("EsPremio");

                    b.Property<string>("Marca")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<int>("PosicionFinal")
                        .HasColumnName("Posicion_Final");

                    b.Property<int>("PosicionInicial")
                        .HasColumnName("Posicion_Inicial");

                    b.Property<int?>("TemporadaCompeticionCategoriaId");

                    b.Property<int?>("TemporadaDTOId");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("UsarColor");

                    b.Property<bool>("UsarMarca");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("TemporadaCompeticionCategoriaId");

                    b.HasIndex("TemporadaDTOId");

                    b.ToTable("TemporadaCompeticionCategoriaReferencia");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activa");

                    b.Property<int>("CambiosFijos");

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DescripcionEstado")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<int?>("EstadoActualId")
                        .HasColumnName("EstadoActual_Id");

                    b.Property<int?>("OperacionActualId")
                        .HasColumnName("OperacionActual_Id");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("EstadoActualId");

                    b.HasIndex("OperacionActualId");

                    b.HasIndex("TemporadaId", "CompeticionId")
                        .IsUnique()
                        .HasName("IX_TemporadaCompeticion");

                    b.ToTable("TemporadaCompeticion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actual");

                    b.Property<bool>("AlineacionLibre");

                    b.Property<bool>("Carrusel");

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("NumeroJornada")
                        .HasColumnName("Numero_Jornada");

                    b.Property<int>("RondaId");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("RondaId");

                    b.HasIndex("TemporadaId", "CompeticionId", "NumeroJornada")
                        .IsUnique()
                        .HasName("IX_TemporadaCompeticionJornada");

                    b.ToTable("TemporadaCompeticionJornada");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionOperacionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EstadoCompeticionId")
                        .HasColumnName("EstadoCompeticion_Id");

                    b.Property<int?>("EstadoSiguienteId")
                        .HasColumnName("EstadoSiguiente_Id");

                    b.Property<int>("OperacionCompeticionId")
                        .HasColumnName("OperacionCompeticion_Id");

                    b.Property<int?>("OperacionSiguienteId")
                        .HasColumnName("OperacionSiguiente_Id");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("EstadoCompeticionId");

                    b.HasIndex("EstadoSiguienteId");

                    b.HasIndex("OperacionCompeticionId");

                    b.HasIndex("OperacionSiguienteId");

                    b.ToTable("TemporadaCompeticionOperacion");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaContabilidadDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Concepto");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Equipo");

                    b.Property<bool>("Gasto");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("TemporadaId");

                    b.ToTable("TemporadaContabilidad");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCuadroDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Criterio")
                        .HasMaxLength(256);

                    b.Property<int>("EquipoACategoriaId")
                        .HasColumnName("EquipoA_Categoria_ID");

                    b.Property<int>("EquipoACompeticionId")
                        .HasColumnName("EquipoA_Competicion_ID");

                    b.Property<int>("EquipoAPuesto")
                        .HasColumnName("EquipoA_Puesto");

                    b.Property<int>("EquipoBCategoriaId")
                        .HasColumnName("EquipoB_Categoria_ID");

                    b.Property<int>("EquipoBCompeticionId")
                        .HasColumnName("EquipoB_Competicion_ID");

                    b.Property<int>("EquipoBPuesto")
                        .HasColumnName("EquipoB_Puesto");

                    b.Property<string>("NombreEquipoA")
                        .HasColumnName("Nombre_EquipoA")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("NombreEquipoB")
                        .HasColumnName("Nombre_EquipoB")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("NombreGanador")
                        .HasColumnName("Nombre_Ganador")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<int?>("NumeroPartido")
                        .HasColumnName("Numero_Partido");

                    b.Property<int>("Orden");

                    b.Property<int>("Ronda");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("EquipoACategoriaId");

                    b.HasIndex("EquipoACompeticionId");

                    b.HasIndex("EquipoBCategoriaId");

                    b.HasIndex("EquipoBCompeticionId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("TemporadaCuadro");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actual");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Estado");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Temporada");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaEquipoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlineacionLibre");

                    b.Property<bool>("Baja");

                    b.Property<int>("CategoriaId")
                        .HasColumnName("Categoria_ID");

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_ID");

                    b.Property<bool>("ConfirmadaTemporada");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Diferencia");

                    b.Property<int>("EquipoId")
                        .HasColumnName("Equipo_ID");

                    b.Property<int>("GolesContra");

                    b.Property<int>("GolesFavor");

                    b.Property<bool>("PagadaTemporada");

                    b.Property<int>("PartidosEmpatados");

                    b.Property<int>("PartidosGanados");

                    b.Property<int>("PartidosJugados");

                    b.Property<int>("PartidosPerdidos");

                    b.Property<int>("Puntos");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("TemporadaId", "CompeticionId", "CategoriaId", "EquipoId")
                        .IsUnique()
                        .HasName("IX_TemporadaEquipo");

                    b.ToTable("TemporadaEquipo");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaJornadaJugadorDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Eliminado");

                    b.Property<int>("GolesContra");

                    b.Property<int>("GolesFavor");

                    b.Property<int>("JornadaId")
                        .HasColumnName("Jornada_ID");

                    b.Property<int>("JugadorId")
                        .HasColumnName("Jugador_ID");

                    b.Property<int?>("MinutosJugados");

                    b.Property<bool>("PreEliminado");

                    b.Property<int?>("TarjetasAmarillas");

                    b.Property<int?>("TarjetasRojas");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("JornadaId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("TemporadaId", "JornadaId", "JugadorId")
                        .IsUnique()
                        .HasName("IX_TemporadaJornadaJugador");

                    b.ToTable("TemporadaJornadaJugador");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaJugadorDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<int?>("ClubId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Eliminado");

                    b.Property<int>("Jugador_ID")
                        .HasColumnName("Jugador_ID");

                    b.Property<int?>("LastJornadaEliminacionId");

                    b.Property<bool>("PreEliminado");

                    b.Property<int?>("PuestoId");

                    b.Property<int>("Temporada_ID")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("VecesEliminado");

                    b.Property<int>("VecesPreEliminado");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("Jugador_ID");

                    b.HasIndex("LastJornadaEliminacionId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("Temporada_ID", "Jugador_ID")
                        .IsUnique()
                        .HasName("IX_TemporadaJugador");

                    b.ToTable("TemporadaJugador");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaJugadorObsolete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Eliminado");

                    b.Property<int>("Jugador_ID")
                        .HasColumnName("Jugador_ID");

                    b.Property<bool>("PreEliminado");

                    b.Property<int>("Temporada_ID")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("VecesEliminado");

                    b.Property<int>("VecesPreEliminado");

                    b.HasKey("Id");

                    b.HasIndex("Jugador_ID");

                    b.HasIndex("Temporada_ID", "Jugador_ID")
                        .IsUnique()
                        .HasName("IX_TemporadaJugador");

                    b.ToTable("oldTemporadaJugador");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPartidoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnName("Categoria_ID");

                    b.Property<int>("CompeticionId")
                        .HasColumnName("Competicion_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EquipoAId")
                        .HasColumnName("Equipo_A_Id");

                    b.Property<int?>("EquipoBId")
                        .HasColumnName("Equipo_B_Id");

                    b.Property<int?>("EquipoGanadorId")
                        .HasColumnName("Equipo_Ganador_Id");

                    b.Property<int>("JornadaId")
                        .HasColumnName("Jornada_ID");

                    b.Property<int>("NumeroPartido")
                        .HasColumnName("Numero_Partido");

                    b.Property<int>("ResultadoA")
                        .HasColumnName("Resultado_A");

                    b.Property<int>("ResultadoB")
                        .HasColumnName("Resultado_B");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompeticionId");

                    b.HasIndex("EquipoAId");

                    b.HasIndex("EquipoBId");

                    b.HasIndex("EquipoGanadorId");

                    b.HasIndex("JornadaId");

                    b.HasIndex("TemporadaId", "CompeticionId", "CategoriaId", "JornadaId", "EquipoAId", "EquipoBId")
                        .IsUnique()
                        .HasName("IX_TemporadaPartido_2")
                        .HasFilter("[Equipo_A_Id] IS NOT NULL AND [Equipo_B_Id] IS NOT NULL");

                    b.ToTable("TemporadaPartido");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPremiosDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnName("Categoria_ID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<double>("Porcentaje");

                    b.Property<double>("PorcentajeAjustado");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("TemporadaPremios");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPremiosPuestoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<double>("Porcentaje");

                    b.Property<double>("PorcentajeAjustado");

                    b.Property<int>("PremioCategoriaId")
                        .HasColumnName("PremioCategoria_ID");

                    b.Property<int>("Puesto");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PremioCategoriaId");

                    b.ToTable("TemporadaPremiosPuesto");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPuestoJugadorDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<int>("JugadorId")
                        .HasColumnName("Jugador_ID");

                    b.Property<int>("PuestoId")
                        .HasColumnName("Puesto_ID");

                    b.Property<int>("TemporadaId")
                        .HasColumnName("Temporada_ID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("TemporadaId", "PuestoId", "JugadorId")
                        .IsUnique()
                        .HasName("IX_TemporadaPuestoJugador");

                    b.ToTable("TemporadaPuestoJugador");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaRondaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activa");

                    b.Property<int>("CompeticionID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("GenerarJornadaFinal");

                    b.Property<bool>("JornadaIdaActiva");

                    b.Property<int>("JornadaIdaID");

                    b.Property<int?>("JornadaVueltaID");

                    b.Property<int>("NumRonda");

                    b.Property<bool>("RondaFinal");

                    b.Property<int>("TemporadaID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CompeticionID");

                    b.HasIndex("JornadaIdaID");

                    b.HasIndex("JornadaVueltaID");

                    b.HasIndex("TemporadaID", "CompeticionID", "NumRonda")
                        .IsUnique()
                        .HasName("IX_TemporadaRonda");

                    b.ToTable("TemporadaRonda");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("City");

                    b.Property<string>("CompartirGrupo");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Conocimiento");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsBot");

                    b.Property<bool>("IsEntrenador");

                    b.Property<DateTime>("LastLogin");

                    b.Property<DateTime>("LastLogout");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<int>("LoginCount");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<int>("UserState");

                    b.Property<bool>("Whatsap");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Models.MenuMasterViewModel", b =>
                {
                    b.Property<int>("MenuIdentity")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MenuFileName");

                    b.Property<string>("MenuID");

                    b.Property<string>("MenuName");

                    b.Property<string>("MenuURL");

                    b.Property<int?>("Order");

                    b.Property<string>("Parent_MenuID");

                    b.Property<string>("USE_YN");

                    b.Property<string>("User_Roll");

                    b.HasKey("MenuIdentity");

                    b.ToTable("MenuMaster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionCambioDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("AlineacionCambio")
                        .HasForeignKey("Categoria_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", "ClubCambio")
                        .WithMany("AlineacionCambioClubCambio")
                        .HasForeignKey("ClubCambio_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Club_ClubCambio_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", "Club")
                        .WithMany("AlineacionCambioClub")
                        .HasForeignKey("Club_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Club_Club_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("AlineacionCambio")
                        .HasForeignKey("Competicion_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaEquipoDTO", "Equipo")
                        .WithMany("AlineacionCambio")
                        .HasForeignKey("Equipo_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.TemporadaEquipo_Equipo_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "JugadorCambio")
                        .WithMany("AlineacionCambioJugadorCambio")
                        .HasForeignKey("JugadorCambio_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Jugador_JugadorCambio_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("AlineacionCambioJugador")
                        .HasForeignKey("Jugador_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuestoDTO", "Puesto")
                        .WithMany("AlineacionCambio")
                        .HasForeignKey("Puesto_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Puesto_Puesto_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("AlineacionCambio")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Cambio_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("Alineacion")
                        .HasForeignKey("Categoria_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", "Club")
                        .WithMany("Alineacion")
                        .HasForeignKey("Club_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.Club_Club_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("Alineacion")
                        .HasForeignKey("Competicion_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaEquipoDTO", "Equipo")
                        .WithMany("Alineacion")
                        .HasForeignKey("Equipo_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.TemporadaEquipo_Equipo_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "Jornada")
                        .WithMany("Alineacion")
                        .HasForeignKey("Jornada_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.TemporadaCompeticionJornada_Jornada_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("Alineacion")
                        .HasForeignKey("Jugador_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuestoDTO", "Puesto")
                        .WithMany("Alineacion")
                        .HasForeignKey("Puesto_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.Puesto_Puesto_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("Alineacion")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.Alineacion_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionHistoricoDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Categoria_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", "Club")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Club_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.Club_Club_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Competicion_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaEquipoDTO", "Equipo")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Equipo_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.TemporadaEquipo_Equipo_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "Jornada")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Jornada_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.TemporadaCompeticionJornada_Jornada_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Jugador_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuestoDTO", "Puesto")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Puesto_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.Puesto_Puesto_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("AlineacionHistorica")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.HistoricoAlineacion_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.AlineacionPreviaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("AlineacionPrevia")
                        .HasForeignKey("Categoria_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Previa_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", "Club")
                        .WithMany("AlineacionPrevia")
                        .HasForeignKey("Club_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Previa_dbo.Club_Club_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("AlineacionPrevia")
                        .HasForeignKey("Competicion_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Previa_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaEquipoDTO", "Equipo")
                        .WithMany("AlineacionPrevia")
                        .HasForeignKey("Equipo_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Previa_dbo.TemporadaEquipo_Equipo_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("AlineacionPrevia")
                        .HasForeignKey("Jugador_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Previa_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuestoDTO", "Puesto")
                        .WithMany("AlineacionPrevia")
                        .HasForeignKey("Puesto_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Previa_dbo.Puesto_Puesto_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("AlineacionPrevia")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.Alineacion_Previa_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CalendarioDetalleDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CalendarioDTO", "Calendario")
                        .WithMany("CalendarioDetalle")
                        .HasForeignKey("Calendario_ID")
                        .HasConstraintName("FK_dbo.CalendarioDetalle_dbo.Calendario_Calendario_Id");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CambiosEquipoDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", "EquipoDestino")
                        .WithMany("CambiosEquipoEquipoDestino")
                        .HasForeignKey("EquipoDestino_ID")
                        .HasConstraintName("FK_dbo.CambiosEquipo_dbo.Equipo_Equipo_Destino_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", "EquipoOrigen")
                        .WithMany("CambiosEquipoEquipoOrigen")
                        .HasForeignKey("EquipoOrigen_ID")
                        .HasConstraintName("FK_dbo.CambiosEquipo_dbo.Equipo_Equipo_Origen_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("CambiosEquipo")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.CambiosEquipo_dbo.Temporada_Temporada_Id");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionCategoriaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("CompeticionCategoria")
                        .HasForeignKey("Categoria_Id")
                        .HasConstraintName("FK_dbo.CompeticionCategoria_dbo.Categoria_Categoria_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("CompeticionCategoria")
                        .HasForeignKey("Competicion_Id")
                        .HasConstraintName("FK_dbo.CompeticionCategoria_dbo.Competicion_Competicion_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CuadroCopaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionCategoriaDTO", "CompeticionCategoriaEquipoA")
                        .WithMany("CuadroCopaEquipoA")
                        .HasForeignKey("CompeticionEquipoAId", "CategoriaEquipoAId")
                        .HasConstraintName("FK_dbo.CuadoCopa_dbo.CompeticionCategoriaEquipoAId");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionCategoriaDTO", "CompeticionCategoriaEquipoB")
                        .WithMany("CuadroCopaEquipoB")
                        .HasForeignKey("CompeticionEquipoBId", "CategoriaEquipoBId")
                        .HasConstraintName("FK_dbo.CuadoCopa_dbo.CompeticionCategoriaEquipoBId");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.HistoricoDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaDTO", "TemporadaCompeticionCategoria")
                        .WithMany("Historico")
                        .HasForeignKey("Categoria_ID")
                        .HasConstraintName("FK_dbo.Historico_dbo.TemporadaCompeticionCategoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaEquipoDTO", "TemporadaEquipo")
                        .WithMany("Historico")
                        .HasForeignKey("Equipo_ID")
                        .HasConstraintName("FK_dbo.Historico_dbo.TemporadaEquipo_Equipo_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("Historico")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.Historico_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuntuacionHistoricaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("PuntuacionHistorica")
                        .HasForeignKey("Categoria_Id")
                        .HasConstraintName("FK_dbo.PuntuacionHistorica_dbo.Categoria_Categoria_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("PuntuacionHistorica")
                        .HasForeignKey("Competicion_Id")
                        .HasConstraintName("FK_dbo.PuntuacionHistorica_dbo.Competicion_Competicion_Id");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaClasificacionDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("TemporadaClasificacion")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaClasificacion_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("TemporadaClasificacion")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaClasificacion_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", "Equipo")
                        .WithMany("TemporadaClasificacion")
                        .HasForeignKey("EquipoId")
                        .HasConstraintName("FK_dbo.TemporadaClasificacion_dbo.Equipo_Equipo_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "Jornada")
                        .WithMany("TemporadaClasificacion")
                        .HasForeignKey("JornadaId")
                        .HasConstraintName("FK_dbo.TemporadaClasificacion_dbo.TemporadaCompeticionJornada_Jornada_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaClasificacion")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaClasificacion_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaClubJugadorDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", "Club")
                        .WithMany("TemporadaClubJugador")
                        .HasForeignKey("ClubId")
                        .HasConstraintName("FK_dbo.TemporadaClubJugador_dbo.Club_Club_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("TemporadaClubJugador")
                        .HasForeignKey("JugadorId")
                        .HasConstraintName("FK_dbo.TemporadaClubJugador_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaClubJugador")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaClubJugador_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("TemporadaCompeticionCategoria")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionCategoria_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("TemporadaCompeticionCategoria")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionCategoria_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaCompeticionCategoria")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionCategoria_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaReferenciaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany()
                        .HasForeignKey("CompeticionId");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaDTO", "TemporadaCompeticionCategoria")
                        .WithMany("TemporadaCompeticionCategoriaReferencia")
                        .HasForeignKey("TemporadaCompeticionCategoriaId");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO")
                        .WithMany("TemporadaCompeticionCategoriaReferencia")
                        .HasForeignKey("TemporadaDTOId");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("TemporadaCompeticion")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticion_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EstadoCompeticionDTO", "EstadoActual")
                        .WithMany("TemporadaCompeticion")
                        .HasForeignKey("EstadoActualId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticion_dbo.EstadoCompeticion_EstadoActual_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.OperacionCompeticionDTO", "OperacionActual")
                        .WithMany("TemporadaCompeticion")
                        .HasForeignKey("OperacionActualId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticion_dbo.OperacionCompeticion_OperacionActual_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaCompeticion")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticion_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("TemporadaCompeticionJornada")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionJornada_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaRondaDTO", "Ronda")
                        .WithMany("JornadasFinal")
                        .HasForeignKey("RondaId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionJornadaIda_dbo.TemporadaRonda_RondaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaCompeticionJornada")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionJornada_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionOperacionDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionDTO", "Competicion")
                        .WithMany("TemporadaCompeticionOperacion")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionOperacion_dbo.TemporadaCompeticion_Competicion_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EstadoCompeticionDTO", "EstadoCompeticion")
                        .WithMany("TemporadaCompeticionOperacionEstadoCompeticion")
                        .HasForeignKey("EstadoCompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionOperacion_dbo.EstadoCompeticion_EstadoCompeticion_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EstadoCompeticionDTO", "EstadoSiguiente")
                        .WithMany("TemporadaCompeticionOperacionEstadoSiguiente")
                        .HasForeignKey("EstadoSiguienteId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionOperacion_dbo.EstadoCompeticion_EstadoSiguiente_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.OperacionCompeticionDTO", "OperacionCompeticion")
                        .WithMany("TemporadaCompeticionOperacionOperacionCompeticion")
                        .HasForeignKey("OperacionCompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionOperacion_dbo.OperacionCompeticion_OperacionCompeticion_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.OperacionCompeticionDTO", "OperacionSiguiente")
                        .WithMany("TemporadaCompeticionOperacionOperacionSiguiente")
                        .HasForeignKey("OperacionSiguienteId")
                        .HasConstraintName("FK_dbo.TemporadaCompeticionOperacion_dbo.OperacionCompeticion_OperacionSiguiente_Id");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaContabilidadDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaContabilidad")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaContabilidad_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCuadroDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionDTO", "Competicion")
                        .WithMany("TemporadaCuadroCompeticion")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCuadro_dbo.TemporadaCompeticion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaDTO", "EquipoACategoria")
                        .WithMany("TemporadaCuadroEquipoACategoria")
                        .HasForeignKey("EquipoACategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaCuadro_dbo.TemporadaCompeticionCategoria_EquipoA_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionDTO", "EquipoACompeticion")
                        .WithMany("TemporadaCuadroEquipoACompeticion")
                        .HasForeignKey("EquipoACompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCuadro_dbo.TemporadaCompeticion_EquipoA_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaDTO", "EquipoBCategoria")
                        .WithMany("TemporadaCuadroEquipoBCategoria")
                        .HasForeignKey("EquipoBCategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaCuadro_dbo.TemporadaCompeticionCategoria_EquipoB_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionDTO", "EquipoBCompeticion")
                        .WithMany("TemporadaCuadroEquipoBCompeticion")
                        .HasForeignKey("EquipoBCompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaCuadro_dbo.TemporadaCompeticion_EquipoB_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaCuadro")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaCuadro_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaEquipoDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("TemporadaEquipo")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaEquipo_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("TemporadaEquipo")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaEquipo_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", "Equipo")
                        .WithMany("TemporadaEquipo")
                        .HasForeignKey("EquipoId")
                        .HasConstraintName("FK_dbo.TemporadaEquipo_dbo.Equipo_Equipo_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaEquipo")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaEquipo_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaJornadaJugadorDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "Jornada")
                        .WithMany("TemporadaJornadaJugador")
                        .HasForeignKey("JornadaId")
                        .HasConstraintName("FK_dbo.TemporadaJornadaJugador_dbo.TemporadaCompeticionJornada_Jornada_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("TemporadaJornadaJugador")
                        .HasForeignKey("JugadorId")
                        .HasConstraintName("FK_dbo.TemporadaJornadaJugador_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaJornadaJugador")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaJornadaJugador_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaJugadorDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.ClubDTO", "Club")
                        .WithMany("TemporadaJugador")
                        .HasForeignKey("ClubId")
                        .HasConstraintName("FK_dbo.TemporadaJugador_dbo.Club_Club_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("TemporadaJugador")
                        .HasForeignKey("Jugador_ID")
                        .HasConstraintName("FK_dbo.TemporadaJugador_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "LastJornadaEliminacion")
                        .WithMany("TemporadaJugador")
                        .HasForeignKey("LastJornadaEliminacionId")
                        .HasConstraintName("FK_dbo.TemporadaJugador_dbo.TemporadaCompeticionJornada_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuestoDTO", "Puesto")
                        .WithMany("TemporadaJugador")
                        .HasForeignKey("PuestoId")
                        .HasConstraintName("FK_dbo.TemporadaJugador_dbo.Puesto_Puesto_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaJugador")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.TemporadaJugador_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaJugadorObsolete", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("TemporadaJugador_obsolete")
                        .HasForeignKey("Jugador_ID")
                        .HasConstraintName("FK_dbo.TemporadaJugador_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaJugador_obsolete")
                        .HasForeignKey("Temporada_ID")
                        .HasConstraintName("FK_dbo.TemporadaJugador_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPartidoDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CategoriaDTO", "Categoria")
                        .WithMany("TemporadaPartido")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaPartido_dbo.Categoria_Categoria_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("TemporadaPartido")
                        .HasForeignKey("CompeticionId")
                        .HasConstraintName("FK_dbo.TemporadaPartido_dbo.Competicion_Competicion_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", "EquipoA")
                        .WithMany("TemporadaPartidoEquipoA")
                        .HasForeignKey("EquipoAId")
                        .HasConstraintName("FK_dbo.TemporadaPartido_dbo.Equipo_Equipo_A_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", "EquipoB")
                        .WithMany("TemporadaPartidoEquipoB")
                        .HasForeignKey("EquipoBId")
                        .HasConstraintName("FK_dbo.TemporadaPartido_dbo.Equipo_Equipo_B_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.EquipoDTO", "EquipoGanador")
                        .WithMany("TemporadaPartidoEquipoGanador")
                        .HasForeignKey("EquipoGanadorId")
                        .HasConstraintName("FK_dbo.TemporadaPartido_dbo.Equipo_Equipo_Ganador_Id");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "Jornada")
                        .WithMany("TemporadaPartido")
                        .HasForeignKey("JornadaId")
                        .HasConstraintName("FK_dbo.TemporadaPartido_dbo.TemporadaCompeticionJornada_Jornada_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaPartido")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaPartido_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPremiosDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionCategoriaDTO", "Categoria")
                        .WithMany("TemporadaPremios")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaPremios_dbo.TemporadaCompeticionCategoria_Categoria_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPremiosPuestoDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPremiosDTO", "PremioCategoria")
                        .WithMany("TemporadaPremiosPuesto")
                        .HasForeignKey("PremioCategoriaId")
                        .HasConstraintName("FK_dbo.TemporadaPremiosPuesto_dbo.TemporadaPremios_PremioCategoria_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaPuestoJugadorDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.JugadorDTO", "Jugador")
                        .WithMany("TemporadaPuestoJugador")
                        .HasForeignKey("JugadorId")
                        .HasConstraintName("FK_dbo.TemporadaPuestoJugador_dbo.Jugador_Jugador_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.PuestoDTO", "Puesto")
                        .WithMany("TemporadaPuestoJugador")
                        .HasForeignKey("PuestoId")
                        .HasConstraintName("FK_dbo.TemporadaPuestoJugador_dbo.Puesto_Puesto_ID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("TemporadaPuestoJugador")
                        .HasForeignKey("TemporadaId")
                        .HasConstraintName("FK_dbo.TemporadaPuestoJugador_dbo.Temporada_Temporada_ID");
                });

            modelBuilder.Entity("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaRondaDTO", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.CompeticionDTO", "Competicion")
                        .WithMany("Rondas")
                        .HasForeignKey("CompeticionID")
                        .HasConstraintName("FK_dbo.TemporadaRonda_dbo.Competicion_CompeticionID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "JornadaIda")
                        .WithMany()
                        .HasForeignKey("JornadaIdaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaCompeticionJornadaDTO", "JornadaVuelta")
                        .WithMany()
                        .HasForeignKey("JornadaVueltaID");

                    b.HasOne("LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model.TemporadaDTO", "Temporada")
                        .WithMany("Rondas")
                        .HasForeignKey("TemporadaID")
                        .HasConstraintName("FK_dbo.TemporadaRonda_dbo.Temporada_TemporadaID");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LigamaniaCoreApp.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LigamaniaCoreApp.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
