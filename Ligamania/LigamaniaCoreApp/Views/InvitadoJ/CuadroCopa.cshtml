@using Newtonsoft.Json
@using LigamaniaCoreApp.Models.ManagerViewModels
@model IEnumerable<TemporadaRondaPartidos>
@{
    Layout = "_LayoutSimple";
    var cuadro = Model.Where(r => r.Ronda >= 3).OrderBy(r => r.Ronda).ToArray();
    var cuadroPartidosOrdenados = cuadro.ToList().Select(p => new
    {
        Ronda = p.Ronda,
        JornadaIda = p.JornadaIda,
        FechaIda = p.FechaIda,
        JornadaVuelta = p.JornadaVuelta,
        FechaVuelta = p.FechaVuelta,
        RondaFinal = p.RondaFinal,
        JornadasFinales = p.JornadasFinales,
        FechasFinales = p.FechasFinales,
        Partidos = p.Partidos.OrderBy(pa => pa.NumeroPartido).ToList()
    }).ToList();
}
<div>
    <a class="nav-link" asp-area="" asp-controller="InvitadoJ" asp-action="ClasificacionLigaCopa" title="Ver Clasificacion">Ver clasificación de Liga para establecer el Cuadro</a>
</div>
<div>
    <a class="nav-link" asp-area="" asp-controller="InvitadoJ" asp-action="CuadroCopaPrevia" asp-route-verPrevia="yes" title="Ver Rondas Previas">Rondas Previas</a>
</div>
<div class="panel-body" style="padding-top:10px">
    <canvas id="canvasRonda" width="2340" height="1100" style="border:1px solid #ccc"></canvas>
</div>

<script type="text/javascript">
    var data = @Html.Raw(JsonConvert.SerializeObject(cuadroPartidosOrdenados));

    var maxRonda = 5;
    var rondaFinal = data[4];

     // Get canvas
    var canvas = document.getElementById("canvasRonda");
    var ctx = document.getElementById("canvasRonda").getContext("2d");

    var colorCanvas = "#FFFFE0";

    var colorRonda1 = "#D3D3D3";
    var colorRonda2 = "#DCDCDC";

    var anchoCanvas = 2340;
    var altoCanvas = 1100;

    var anchoRonda = 260;

    var anchoEquipo = anchoRonda - 115;
    var altoEquipo = 30;
    var difEquipos = altoEquipo;
    var altoPartido = (altoEquipo * 2) + difEquipos;

    var difPartidos = altoEquipo;

    var numPar16avos = 16;
    var numPar8avos = 8;
    var numPar4tos = 4;
    var numParSemis = 2;
    var numParFinal = 1;

    var rowSup = 45;
    var colLeft = 0;

    // ***** PINTADO DE LINKS *****
    // Links
    var Links = new Array(); // Links information
    var hoverLink = ""; // Href of the link which cursor points at

    ctx.beginPath();

    var numPartidos = -1;
    var rondaColLeft = -1;
    var rondaColRight = -1;
    var colorRonda = colorRonda1;
    var titleRonda = "";
    var rowInicioRonda = 0;
    var numDifEquipos = 1;

    // no se pinta la ronda FINAL 
    for (var ronda = 0; ronda < maxRonda-1; ronda++) {
        rondaColLeft = colLeft + (ronda*anchoRonda);
        rondaColRight = anchoCanvas - ((ronda + 1) * anchoRonda);
        if (ronda == 0) {
            numPartidos = numPar16avos;
        }
        else if (ronda == 1) {
            colorRonda = colorRonda2;
        }
        else if (ronda == 2) {
            colorRonda = colorRonda1;
        }
        else if (ronda == 3) {
            colorRonda = colorRonda2;
        }
        else if (ronda == 4) {
            colorRonda = colorRonda1;
        }
        pintaBaseRonda(rondaColLeft, rondaColRight, anchoRonda, altoCanvas, colorRonda);
    }

    pintaRondaFinal(rondaFinal, colLeft, 4, anchoRonda);


    //for (var ronda = 0; ronda < 2; ronda++) {
    for (var ronda = 0; ronda < maxRonda-1; ronda++) {
        rondaColLeft = colLeft + (ronda*anchoRonda);
        rondaColRight = anchoCanvas - ((ronda + 1) * anchoRonda);
        if (ronda == 0) {
            numPartidos = numPar16avos;
            titleRonda = "16avos";
            rowInicioRonda = 0;
            numDifEquipos = 1;
        }
        else if (ronda == 1) {
            numPartidos = numPar8avos;
            colorRonda = colorRonda2;
            titleRonda = "Octavos";
            rowInicioRonda = altoEquipo;
            numDifEquipos = 3;
        }
        else if (ronda == 2) {
            numPartidos = numPar4tos;
            colorRonda = colorRonda1;
            titleRonda = "Cuartos";
            rowInicioRonda = altoEquipo * 3;
            numDifEquipos = 7;
        }
        else if (ronda == 3) {
            numPartidos = numParSemis;
            colorRonda = colorRonda2;
            titleRonda = "Semifinales";
            rowInicioRonda = altoEquipo * 7;
            numDifEquipos = 15;
        }
        else if (ronda == 4) {
            numPartidos = numParFinal;
            colorRonda = colorRonda1;
            titleRonda = "Final";
        }
        titleFechaIda = "Ida: " + data[ronda].JornadaIda + " (" + convertDate(data[ronda].FechaIda) + ")";
        titleFechaVuelta = "Vuelta: " + data[ronda].JornadaVuelta + " (" + convertDate(data[ronda].FechaVuelta) + ")";
        var partidos = data[ronda].Partidos;
        pintaRonda(partidos, colorRonda, rondaColLeft, rondaColRight, anchoRonda, altoCanvas, numPartidos, titleRonda, titleFechaIda, titleFechaVuelta,rowInicioRonda,numDifEquipos);
    }

    ctx.style = "#FF0000";
    ctx.moveTo(0, 90);
    ctx.lineTo(anchoCanvas, 90);


    ctx.stroke();

    function convertDate(inputFormat) {
        function pad(s) { return (s < 10) ? '0' + s : s; }
        var d = new Date(inputFormat)
        return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/')
    }
    function pintaBaseRonda(rondaColLeft, rondaColRight, anchoRonda, altoCanvas, colorRonda) {
        ctx.fillStyle = colorRonda;
        // Parte izquierda
        ctx.fillRect(rondaColLeft, 0, anchoRonda, altoCanvas);
        // Parte derecha
        if (rondaColRight != 0) {
            ctx.fillRect(rondaColRight, 0, anchoRonda, altoCanvas);
        }
    }
    function pintaRonda(partidos, colorRonda, rondaColLeft, rondaColRight, anchoRonda, altoCanvas, numPartidos, titleRonda, titleFechaIda, titleFechaVuelta,rowInicioRonda,numDifEquipos) {
        var colTitleLeft = rondaColLeft + (anchoRonda / 4) ;
        var colTitleRight = rondaColRight + (anchoRonda / 4);
        var rowTitle = 25;

        ctx.font = "24px Arial";
        ctx.fillStyle = "#FF0000";
        ctx.fillText(titleRonda, colTitleLeft, rowTitle);
        ctx.fillText(titleRonda, colTitleRight, rowTitle);

        ctx.font = "16px Arial";
        ctx.fillStyle = "#000000";
        ctx.fillText(titleFechaIda, rondaColLeft + 35, rowTitle + 25);
        ctx.fillText(titleFechaVuelta, rondaColLeft + 25, rowTitle + 50);

        ctx.fillText(titleFechaIda, rondaColRight + 35, rowTitle + 25);
        ctx.fillText(titleFechaVuelta, rondaColRight + 25, rowTitle + 50);

        var rowPartido = rowTitle + 75 + rowInicioRonda;

        //difEquipos = (ronda * (ronda + 1) + 1) * altoEquipo;
        difEquipos = numDifEquipos * altoEquipo;

        altoPartido = (altoEquipo * 2) + difEquipos;
        difPartidos = difEquipos;

        // partidos Izquierda
        //for (var i = 0; i < 2; i++) {
        for (var i = 0; i < numPartidos / 2; i++) {
            pintaPartido(partidos[i], rondaColLeft, rowPartido, altoEquipo, anchoEquipo,"left");
            rowPartido = rowPartido + altoPartido + difPartidos;
        }

        // partidos Derecha
        var rowPartido = rowTitle + 75 + rowInicioRonda;
        for (var i = numPartidos / 2; i < numPartidos; i++) {
            pintaPartido(partidos[i], rondaColRight, rowPartido, altoEquipo, anchoEquipo,"right");
            rowPartido = rowPartido + altoPartido + difPartidos;
        }
    }
    function pintaPartido(partido, colPartido, rowPartido, altoEquipo, anchoEquipo, leftRight) {
        var equipoA = partido.EquipoA;
        var equipoB = partido.EquipoB;
        var pintaEquipoA = true;
        var pintaEquipoB = true;
        var equipoAcontainsGanador = equipoA.includes("Ganador");
        var equipoBcontainsGanador = equipoB.includes("Ganador");
        if (ronda != 0 && equipoAcontainsGanador) { pintaEquipoA = false;}
        if (ronda != 0 && equipoBcontainsGanador) { pintaEquipoB = false;}

        // pintar equipos
        var rowEquipoA = rowPartido;
        if (pintaEquipoA) {
            pintaEquipo(partido.EquipoA, rowEquipoA, colPartido, anchoEquipo, altoEquipo, leftRight);
        }
        else {
            if (leftRight == "left") {
                ctx.moveTo(colPartido, rowEquipoA + (altoEquipo / 2));
                ctx.lineTo(colPartido + anchoEquipo, rowEquipoA + (altoEquipo / 2));
            }
            else {
                ctx.moveTo(colPartido+35, rowEquipoA + (altoEquipo / 2));
                ctx.lineTo(colPartido+35 + anchoEquipo, rowEquipoA + (altoEquipo / 2));
            }
        }

        var rowEquipoB = rowEquipoA + altoEquipo + difEquipos;
        if (pintaEquipoB) {
            pintaEquipo(partido.EquipoB, rowEquipoB, colPartido, anchoEquipo, altoEquipo, leftRight);
        }
        else {
            if (leftRight == "left") {
                ctx.moveTo(colPartido, rowEquipoB + (altoEquipo / 2));
                ctx.lineTo(colPartido + anchoEquipo, rowEquipoB + (altoEquipo / 2));
            }
            else {
                ctx.moveTo(colPartido+35, rowEquipoB + (altoEquipo / 2));
                ctx.lineTo(colPartido+35 + anchoEquipo, rowEquipoB + (altoEquipo / 2));
            }
        }

        // pintar resultado del partido (Ida/Vuelta/Global)
        var colResultado = colPartido + anchoEquipo;
        var anchoResultado = 25;
        if (partido.PartidoIda != null && partido.PartidoVuelta != null) {
            pintaResultado(partido.PartidoIda, partido.PartidoVuelta, rowEquipoA, rowEquipoB, colResultado, anchoResultado, altoEquipo, leftRight);
        }
        else {
            pintaResultadoEquipo("-", "-", rowEquipoA, colResultado, anchoResultado, altoEquipo, leftRight);
            pintaResultadoEquipo("-", "-", rowEquipoB, colResultado, anchoResultado, altoEquipo, leftRight);
        }

        // pinta líneas para unir con siguiente ronda
        var wLinea = 10;
        var distancia = (rowEquipoB + (altoEquipo / 2)) - (rowEquipoA + (altoEquipo / 2));
        var centro = (rowEquipoA + (altoEquipo / 2)) + (distancia/ 2);
        if (leftRight == "left") {
            var colLinea = colResultado + (anchoResultado * 3);

            ctx.moveTo(colLinea, rowEquipoA + (altoEquipo / 2));
            ctx.lineTo(colLinea + wLinea, rowEquipoA + (altoEquipo / 2));

            ctx.moveTo(colLinea, rowEquipoB + (altoEquipo / 2));
            ctx.lineTo(colLinea + wLinea, rowEquipoB + (altoEquipo / 2));

            ctx.moveTo(colLinea + wLinea, rowEquipoA + (altoEquipo / 2));
            ctx.lineTo(colLinea + wLinea, rowEquipoB + (altoEquipo / 2));


            ctx.moveTo(colLinea + wLinea, centro);
            ctx.lineTo(colLinea + (wLinea * 4), centro);
        }
        else {
            var colLinea = (colPartido + 115 - 80); 
            ctx.moveTo(colLinea, rowEquipoA + (altoEquipo / 2));
            ctx.lineTo(colLinea - wLinea, rowEquipoA + (altoEquipo / 2));

            ctx.moveTo(colLinea, rowEquipoB + (altoEquipo / 2));
            ctx.lineTo(colLinea - wLinea, rowEquipoB + (altoEquipo / 2));

            ctx.moveTo(colLinea - wLinea, rowEquipoA + (altoEquipo / 2));
            ctx.lineTo(colLinea - wLinea, rowEquipoB + (altoEquipo / 2));

            if (ronda == 3) { centro = centro + altoEquipo;}
            ctx.moveTo(colLinea - wLinea, centro);
            ctx.lineTo(colLinea - (wLinea * 4), centro);
        }
        // pinta criterio ganador del partido
        criterio = partido.Criterio;
        if (partido.Criterio == "undefined") { criterio = null;}
        if (criterio != null) {
            ctx.fillStyle = "#FF0000";
            var col = colLinea + wLinea + 60;
            var row = centro+25;
            if (leftRight == "right") {
                col = colLinea - wLinea - anchoRonda + 60;
                if (ronda == 3) { col = col + 60;}
            }
            //ctx.fillText("[" + partido.Criterio + "]", col, row);
            var linkText = "[" + partido.Criterio + "]";
            var href = "/InvitadoJ/CriterioGanador?idPartido=" + partido.Id;
            drawLink(col,row,href,linkText,Links);
            ctx.fillStyle = "#000000";
        }
    }
    function pintaEquipo(equipo, row, col, w, h, leftRight) {
        //ctx.rect(col+5, row, w, h);
        var colText = col + 5;
        if (leftRight == "right") { colText = col + (115-80);}
        ctx.fillText(equipo, colText, row + 22);
    }
    function pintaResultado(partidoIda, partidoVuelta, rowEquipoA, rowEquipoB, colResI, wRes, h, leftRight) {
        pintaResultadoEquipo(partidoIda.ResultadoA, partidoVuelta.ResultadoB, rowEquipoA, colResI, wRes, h, leftRight);
        pintaResultadoEquipo(partidoIda.ResultadoB, partidoVuelta.ResultadoA, rowEquipoB, colResI, wRes, h, leftRight);
    }
    function pintaResultadoEquipo(resultadoIda, resultadoVuelta, row, colResI, wRes, h, leftRight) {
        if (leftRight == "right") {
            colResI = colResI + 36;
        }
        ctx.rect(colResI, row, wRes, h);
        ctx.fillText(resultadoIda, colResI + 5, row + 20);
        var colResV = colResI + wRes;
        ctx.rect(colResV, row, wRes, h);
        ctx.fillText(resultadoVuelta, colResV + 5, row + 20);

        var resultadoGlobal = resultadoIda + resultadoVuelta;
        colResV = colResV + wRes;
        ctx.fillStyle = "moccasin";
        ctx.fillRect(colResV, row, wRes, h);
        ctx.fillStyle = "#000000";
        ctx.fillText(resultadoGlobal, colResV + 5, row + 20);     // RESULTADO GLOBAL DEL PARTIDO
    }
    function pintaResultadoFinal(resultadoEquipoA, resultadoEquipoB, row, colResI, wRes, h) {
        ctx.rect(colResI, row, wRes, h);
        ctx.fillText(resultadoEquipoA, colResI + 5, row + 20);

        var colResV = colResI + wRes*2;
        ctx.rect(colResV, row, wRes, h);
        ctx.fillText(resultadoEquipoB, colResV + 5, row + 20);
    }
    function pintaRondaFinal(rondaFinal, colLeft, ronda, anchoRonda) {
        var rondaColLeft = colLeft + (ronda * anchoRonda);
        var numPartidos = 1;
        var colorRonda = "#F0FFFF";
        var titleRonda = "Final";
        var rowInicioRonda = altoEquipo*15;
        var numDifEquipos = 15;

        var titleFechaIda = "Ida: " + rondaFinal.JornadaIda + " (" + convertDate(rondaFinal.FechaIda) + ")";

        pintaBaseRonda(rondaColLeft, 0, anchoRonda, altoCanvas, colorRonda);

        var partidos = rondaFinal.Partidos;
        pintaPartidosRondaFinal(partidos, rondaColLeft, anchoRonda, numPartidos, titleRonda, titleFechaIda, rowInicioRonda, numDifEquipos);
    }
    function pintaPartidosRondaFinal(partidos, rondaColLeft, anchoRonda, numPartidos, titleRonda, titleFechaIda, rowInicioRonda, numDifEquipos) {
        var colTitleLeft = rondaColLeft + (anchoRonda / 3) ;
        var rowTitle = 25;

        ctx.font = "24px Arial";
        ctx.fillStyle = "#FF0000";
        ctx.fillText(titleRonda, colTitleLeft, rowTitle);

        ctx.font = "16px Arial";
        ctx.fillStyle = "#000000";
        ctx.fillText(titleFechaIda, rondaColLeft + 35, rowTitle + 25);

        var rowPartido = rowTitle + 75 + rowInicioRonda;

        difEquipos = numDifEquipos * altoEquipo;
        altoPartido = (altoEquipo * 2) + difEquipos;
        difPartidos = difEquipos;

        ////for (var i = 0; i < 2; i++) {
        //for (var i = 0; i < numPartidos; i++) {
        //    pintaPartidoFinal(partidos[i], rondaColLeft, rowPartido, altoEquipo, anchoEquipo);
        //    rowPartido = rowPartido + altoPartido + difPartidos;
        //}
        pintaPartidosFinal(partidos, rondaColLeft, rowPartido, altoEquipo, anchoEquipo);
    }
    function pintaPartidosFinal(partidos, colPartido, rowPartido, altoEquipo, anchoEquipo) {
        var equipoA = partidos[0].EquipoA;
        var equipoB = partidos[0].EquipoB;
        var pintaEquipoA = true;
        var pintaEquipoB = true;
        var equipoAcontainsGanador = equipoA.includes("Ganador");
        var equipoBcontainsGanador = equipoB.includes("Ganador");
        if (ronda != 0 && equipoAcontainsGanador) { pintaEquipoA = false;}
        if (ronda != 0 && equipoBcontainsGanador) { pintaEquipoB = false;}

        //pintaEquipoA = true;
        //pintaEquipoB = true;


        // pintar equipos
        var rowEquipoA = rowPartido;
        if (pintaEquipoA) {
            pintaEquipo(partidos[0].EquipoA, rowEquipoA, colPartido, anchoEquipo, altoEquipo, "left");
        }
        else {
            ctx.moveTo(colPartido, rowEquipoA + (altoEquipo / 2));
            ctx.lineTo(colPartido + anchoEquipo, rowEquipoA + (altoEquipo / 2));
        }

        var rowEquipoB = rowEquipoA + altoEquipo;
        colPartido = colPartido + anchoEquipo - 35;
        if (pintaEquipoB) {
            pintaEquipo(partidos[0].EquipoB, rowEquipoB, colPartido, anchoEquipo, altoEquipo, "left");
        }
        else {
            ctx.moveTo(colPartido, rowEquipoB + (altoEquipo / 2));
            ctx.lineTo(colPartido + anchoEquipo, rowEquipoB + (altoEquipo / 2));
        }

        // pintar resultado del partido (Ida)
        var colResultado = colPartido-25;
        var anchoResultado = 25;
        var rowResultado = rowEquipoB + altoEquipo*2;
        if (partidos[0].PartidoIda != null) {
            pintaResultadoFinal(partidos[0].PartidoIda.ResultadoA, partidos[0].PartidoIda.ResultadoB, rowResultado, colResultado, anchoResultado, altoEquipo);
        }
        else {
            pintaResultadoFinal("-", "-", rowResultado, colResultado, anchoResultado, altoEquipo);
        }

        // si hay más partidos, pintar los resultados a continuación
        if (partidos.length > 1) {
            for (var i = 1; i < partidos.length; i++) {
                rowResultado = rowResultado + (altoEquipo * 2);
                if (partidos[i].PartidoIda != null) {
                    pintaResultadoFinal(partidos[i].PartidoIda.ResultadoA, partidos[i].PartidoIda.ResultadoB, rowResultado, colResultado, anchoResultado, altoEquipo);
                }
                else {
                    pintaResultadoFinal("-", "-", rowResultado, colResultado, anchoResultado, altoEquipo);
                }
            }
        }
        if (partidos.length > 0) {
            // pinta ganador del partido
            rowGanador = rowResultado + (altoEquipo * 3);
            colResultadoFinal = colResultado - 40;
            if (partidos[0].Ganador != "undefined" && partidos[0].Ganador != null) {
                ctx.font = "bold 20px Arial ";
                ctx.fillStyle = "red";
                ctx.fillText("Ganador: " + partidos[0].Ganador, colResultadoFinal, rowGanador);
            }
            // pinta criterio ganador del partido
            criterio = partidos[0].Criterio;
            if (partidos[0].Criterio == "undefined") { criterio = null; }
            if (criterio != null) {
                rowCriterio = rowGanador + altoEquipo;

                ctx.fillStyle = "#FF0000";
                var linkText = "[" + partidos[0].Criterio + "]";
                var href = "/InvitadoJ/CriterioGanador?idPartido=" + partidos[0].Id;
                drawLink(colResultadoFinal, rowCriterio, href, linkText, Links);
                ctx.fillStyle = "#000000";
            }
        }
    }
    // Draw the link
    function drawLink(x,y,href,title, Links){
        var linkTitle = title,
            linkX = x,
            linkY = y,
            linkWidth = ctx.measureText(linkTitle).width,
            linkHeight = parseInt(ctx.font); // Get lineheight out of fontsize

        var fillStylePrev = ctx.fillStyle;
        ctx.fillStyle = "#0000ff"; // Default blue link color
        //ctx.font = "15px Courier New"; // Monospace font for links
        //ctx.textBaseline = "top"; // Makes left top point a start point for rendering text

        // Draw the link
        ctx.fillText(linkTitle, linkX, linkY);
        ctx.fillStyle = fillStylePrev; // Default blue link color

        //// Underline the link (you can delete this block)
        //ctx.beginPath();
        //ctx.moveTo(linkX, linkY + linkHeight);
        //ctx.lineTo(linkX + linkWidth, linkY + linkHeight);
        //ctx.lineWidth = 1;
        //ctx.strokeStyle = "#0000ff";
        //ctx.stroke();

        // Add mouse listeners
        canvas.addEventListener("mousemove", on_mousemove, false);
        canvas.addEventListener("click", on_click, false);

        // Add link params to array
        Links.push(x + ";" + y + ";" + linkWidth + ";" + linkHeight + ";" + href);
    }

    // Link hover
    function on_mousemove (ev) {
        var x, y;

        // Get the mouse position relative to the canvas element
        if (ev.layerX || ev.layerX == 0) { // For Firefox
            x = ev.layerX;
            y = ev.layerY;
        }

        // Link hover
        for (var i = Links.length - 1; i >= 0; i--) {
            var params = new Array();

            // Get link params back from array
            params = Links[i].split(";");

            var linkX = parseInt(params[0]),
                linkY = parseInt(params[1]),
                linkWidth = parseInt(params[2]),
                linkHeight = parseInt(params[3]),
                linkHref = params[4];

            // Check if cursor is in the link area
            if (x >= linkX && x <= (linkX + linkWidth) && y >= linkY && y <= (linkY + linkHeight)){
                document.body.style.cursor = "pointer";
                hoverLink = linkHref;
                break;
            }
            else {
                document.body.style.cursor = "";
                hoverLink = "";
            }
        };
    }

    // Link click
    function on_click(e) {
        if (hoverLink){
            window.open(hoverLink); // Use this to open in new tab
            //window.location = hoverLink; // Use this to open in current window
        }
    }

</script>