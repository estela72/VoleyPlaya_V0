@using LigamaniaCoreApp.Models.AdminViewModels
@inject LigamaniaCoreApp.Services.ILigamaniaService ligamaniaService

@model IEnumerable<TemporadaJornadaJugadorViewModel>
@{
    var competicionesActivas = await ligamaniaService.GetCompeticionesActivasStr();
    if (Model.Any())
    {
        <h4 class="text-center">Jugadores por Categoría</h4>

            @(Html
                .Grid(Model)
                .Build(columns =>
                {
                    columns.Add(model => model.Jugador).Titled("Jugador");
                    columns.Add(model => model.Golden).Titled("Golden");
                    columns.Add(model => model.SilverA).Titled("Silver A");
                    columns.Add(model => model.SilverB).Titled("Silver B");
                    if (competicionesActivas.Contains("Copa"))
                    {
                        columns.Add(model => model.Copa).Titled("Copa");
                    }
                    if (competicionesActivas.Contains("Supercopa"))
                    {
                        columns.Add(model => model.Supercopa).Titled("Supercopa");
                    }
                    if (competicionesActivas.Contains("Promocion"))
                    {
                        columns.Add(model => model.Promocion).Titled("Promocion");
                    }
                })
                .Empty("No hay jugadores")
                .Id("ajax-grid-jugcateg")
                .Css("grid-jug-eli")
                .WithFooter("_GridJugPorCategoriaFooter")
                .RowAttributed(model => new { @style = model.Eliminado == true ? "background-color:red" : model.Preeliminado ? "background-color:orange" : null})
        //.UsingFooter("_GridJugPorCategoriaFooter")
        )
     }
}