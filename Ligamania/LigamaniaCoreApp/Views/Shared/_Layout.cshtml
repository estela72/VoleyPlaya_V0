@inject LigamaniaCoreApp.Services.MenuMasterService menus
@inject LigamaniaCoreApp.Services.ILigamaniaService ligamaniaService

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Ligamania</title>

    <environment include="Development">
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
        <script src="~/lib/jquery-validation/dist/additional-methods.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

        <link href="~/lib/bootstrap4/css/bootstrap.css" rel="stylesheet" />
        <link href="~/lib/bootstrap4/css/bootstrap-grid.css" rel="stylesheet" />
        <link href="~/lib/bootstrap4/css/bootstrap-reboot.css" rel="stylesheet" />
        <link href="~/lib/jquery-ui/jquery-ui.css" rel="stylesheet" />
        <script src="~/lib/jquery-ui/jquery-ui.js"></script>
        <link href="@Url.Content("~/css/site.css")" rel="stylesheet" type="text/css" id="ligamaniaStyle" />
        @*Uso de iconos fas fa-*** *@
        <script defer src="https://use.fontawesome.com/releases/v5.8.2/js/all.js" integrity="sha384-DJ25uNYET2XCl5ZF++U8eNxPWqcKohUUBUpKGlNLMchM7q4Wjg2CUpjHLaL8yYPH" crossorigin="anonymous"></script>
        @*Uso del mvc-grid*@
        <link href="~/css/MvcGrid/mvc-grid.css" rel="stylesheet" />
    </environment>
    <environment exclude="Development">
        <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js"
                asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
                asp-fallback-test="window.jQuery"
                crossorigin="anonymous"
                integrity="">
        </script>
        <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/4.3.1/css/bootstrap.min.css"
              asp-fallback-href="~/lib/twiter-bootstrap/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute"
              crossorigin="anonymous"
              integrity="" />
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
        <link href="~/lib/bootstrap4/css/bootstrap-grid.css" rel="stylesheet" />
        <link href="~/lib/bootstrap4/css/bootstrap-reboot.css" rel="stylesheet" />

        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
        <script src="~/lib/jquery-validation/dist/additional-methods.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
        <script defer src="https://use.fontawesome.com/releases/v5.8.2/js/all.js" integrity="sha384-DJ25uNYET2XCl5ZF++U8eNxPWqcKohUUBUpKGlNLMchM7q4Wjg2CUpjHLaL8yYPH" crossorigin="anonymous"></script>
        <link href="~/css/MvcGrid/mvc-grid.css" rel="stylesheet" />
        <link href="@Url.Content("~/css/site.css")" rel="stylesheet" type="text/css" id="ligamaniaStyle" />
    </environment>
</head>
<body>
    <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="~/Home/Index">
                            <img src="~/images/ligamania-logo.png" alt="Ligamania" class="img-responsive" />
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="https://www.facebook.com/groups/ligamania/?fref=ts">Facebook</a>
                    </li>
                    @{
                        var UserRoles = "";
                        IEnumerable<MenuMasterViewModel> listaMenus;
                        IEnumerable<MenuMasterViewModel> subMenus;
                        if (User.Identity.IsAuthenticated)
                        {
                            if (@User.IsInRole("Manager"))
                            {
                                UserRoles = "Manager";
                                listaMenus = menus.GetMenuMaster(@UserRoles);
                                @if (listaMenus.Any())
                                {
                                    listaMenus = listaMenus.Where(n => n.Parent_MenuID == "*").ToList();
                                    @foreach (var menuNames in listaMenus)
                                    {
                                        subMenus = menus.GetMenuMaster(@UserRoles).Where(n => n.Parent_MenuID == @menuNames.MenuID).ToList();
                                        var hRef = "~/" + @menuNames.MenuURL + "/" + @menuNames.MenuFileName;
                                        <li class="nav-item dropdown">
                                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                @menuNames.MenuName
                                            </a>
                                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                                @foreach (var subMenu in subMenus)
                                                {
                                                    var hSubRef = "~/" + subMenu.MenuURL;
                                                    <a class="dropdown-item" asp-area="" asp-controller=@subMenu.MenuURL asp-action=@subMenu.MenuFileName>@subMenu.MenuName</a>
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                            }
                            if (@User.IsInRole("Admin"))
                            {
                                UserRoles = "Admin";
                                listaMenus = menus.GetMenuMaster(@UserRoles);
                                @if (listaMenus.Any())
                                {
                                    listaMenus = listaMenus.Where(n => n.Parent_MenuID == "*").ToList();
                                    @foreach (var menuNames in listaMenus)
                                    {
                                        subMenus = menus.GetMenuMaster(@UserRoles).Where(n => n.Parent_MenuID == @menuNames.MenuID).ToList();
                                        var hRef = "~/" + @menuNames.MenuURL + "/" + @menuNames.MenuFileName;
                                        <li class="nav-item dropdown">
                                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                @menuNames.MenuName
                                            </a>
                                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                                @foreach (var subMenu in subMenus)
                                                {
                                                    var hSubRef = "~/" + subMenu.MenuURL;
                                                    <a class="dropdown-item" asp-area="" asp-controller=@subMenu.MenuURL asp-action=@subMenu.MenuFileName>@subMenu.MenuName</a>
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                            }
                            if (@User.IsInRole("Entrenador"))
                            {
                                UserRoles = "Entrenador";
                                listaMenus = menus.GetMenuMaster(@UserRoles).ToList();
                                @if (listaMenus.Any())
                                {
                                    listaMenus = listaMenus.Where(n => n.Parent_MenuID == "*").ToList();
                                    @foreach (var menuNames in listaMenus)
                                    {
                                        subMenus = menus.GetMenuMaster(@UserRoles).Where(n => n.Parent_MenuID == @menuNames.MenuID);
                                        var hRef = "~/" + @menuNames.MenuURL + "/" + @menuNames.MenuFileName;
                                        <li class="nav-item dropdown">
                                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                @menuNames.MenuName
                                            </a>
                                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                                @foreach (var subMenu in subMenus)
                                                {
                                                    var hSubRef = "~/" + subMenu.MenuURL;
                                                    <a class="dropdown-item" asp-area="" asp-controller=@subMenu.MenuURL asp-action=@subMenu.MenuFileName>@subMenu.MenuName</a>
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                            }
                        }
                        UserRoles = "Invitado";
                        listaMenus = menus.GetMenuMaster(@UserRoles);
                        @if (listaMenus.Any())
                        {
                            listaMenus = listaMenus.Where(n => n.Parent_MenuID == "*").ToList();
                            @foreach (var menuNames in listaMenus)
                            {
                                var menuName = menuNames.MenuID;
                                subMenus = menus.GetMenuMaster(@UserRoles).Where(n => n.Parent_MenuID == @menuNames.MenuID).ToList();
                                var hRef = "~/" + @menuNames.MenuURL + "/" + @menuNames.MenuFileName;
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        @menuNames.MenuName
                                    </a>
                                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                        @foreach (var subMenu in subMenus)
                                        {
                                            var hSubRef = "~/" + subMenu.MenuURL;
                                            <a class="dropdown-item" asp-area="" asp-controller=@subMenu.MenuURL asp-action=@subMenu.MenuFileName>@subMenu.MenuName</a>
                                        }
                                        @if (menuName.Equals("ENJUEGO"))
                                        {
                                            <a class="dropdown-item" href="http://actas.rfef.es/actas/RFEF_CmpJornada?cod_primaria=1000144&CodCategoria=100">Actas RFEF</a>
                                        }
                                    </div>
                                </li>
                            }
                        }
                    }
                </ul>
                @await Html.PartialAsync("_LoginPartial")
            </div>
        </div>
    </nav>
    <div class="wrapper">
        <header class="header">
            @{
                string bienvenido = "Bienvenid@ a LIGAMANÍA";
                string entornoTrabajo = "";
                string classEntorno = "";
                <div class="row">
                    <environment names="Development">
                        @{entornoTrabajo = "Entorno de Desarrollo";
                            classEntorno = "text-center entorno-development";
                        }
                    </environment>
                    <environment names="Staging">
                        @{entornoTrabajo = "Entorno de Integración (Pruebas)";
                            classEntorno = "text-center entorno-staging";
                        }
                    </environment>
                </div>
            }
            @if (User.Identity.IsAuthenticated)
            {
                var estados = await ligamaniaService.GetEstadoCompeticiones();
                var lastNew = await ligamaniaService.GetLastNew();
                @if (estados.Any())
                {
                    foreach (var competicion in estados)
                    {
                        <div class="row" style="background-color:darkblue;color:aliceblue">
                            <h2>@competicion.Key - @competicion.Value</h2>
                        </div>
                    }
                }
                <div class="row" style="background-color:darkviolet;color:aliceblue">
                    <h2>@lastNew</h2>
                </div>
            }
        </header>
        <article class="main">
            <div class="main">
                <p class="@classEntorno">@entornoTrabajo</p>
                <h1 class="text-center">@bienvenido</h1>
                <p class="text-center" style="color:red;">
                    <a>Si quieres disfrutar de la Liga de Fútbol de Primera División de una forma original y divertida, prueba con Ligamanía! Escríbenos un mail a <strong>ligamania@gmail.com</strong></a>
                </p>
                <div class="align-content-center">
                    <img src="~/Images/cabecera_ligamania.jpg" title="Ligamanía" alt="Logo" class="img-responsive img-rounded center-block" />
                </div>
            </div>
            @RenderBody()
        </article>
        <aside class="aside aside-1">
            @await Html.PartialAsync("_LigaRegularWidget")
            @*<hr />
            <div class="align-content-center">
                <img src="~/Images/premios1920.jpg" title="Ligamanía" alt="Logo" class="img-responsive img-rounded center-block" />
            </div>*@
            <hr />
            @if (User.Identity.IsAuthenticated)
            {
                <div id="grid-jugeli" class="mvc-grid" data-name="" data-filter-mode="FilterRow" data-source-url="">
                    @Html.AjaxGrid(Url.Action("JugadoresEliminadosGrid", "Home"), new { id = "ajax-grid-jugeli" })
                </div>
                <hr />
                <div id="grid-jugpreeli" class="mvc-grid" data-name="" data-filter-mode="FilterRow" data-source-url="">
                    @Html.AjaxGrid(Url.Action("JugadoresPreEliminadosGrid", "Home"), new { id = "ajax-grid-jugpreeli" })
                </div>
                if (@User.IsInRole("Manager"))
                {
                    <hr />
                    <div id="grid-jugcateg" class="mvc-grid" data-name="" data-filter-mode="FilterRow" data-source-url="">
                        @Html.AjaxGrid(Url.Action("JugadoresPorCategoriaGrid", "Home"), new { id = "ajax-grid-jugcateg" })
                    </div>
                }
            }
        </aside>
        <aside class="aside aside-2">
            @if (User.Identity.IsAuthenticated)
            {
                var settings = await ligamaniaService.GetSettings();
                var notificacion = (settings as LigamaniaCoreApp.Models.GlobalViewModels.SettingsViewModel).NotificacionClasificaciones;
                if (!string.IsNullOrEmpty(notificacion))
                {
                    <div id="notificacion" class="alert alert-primary">@notificacion</div>
                }
                <div id="grid-clasi" class="mvc-grid" data-name="" data-filter-mode="FilterRow" data-source-url="">
                    @Html.AjaxGrid(Url.Action("ClasificacionesGrid", "Home"), new { id = "ajax-grid-clasi" })
                </div>
            }
        </aside>
        <footer class="footer">
            <p>&copy; 2018 - Ligamania</p>
        </footer>
    </div>
    <environment include="Development">
            <script src="~/lib/bootstrap4/js/bootstrap.js"></script>
            <script src="~/js/site.js" asp-append-version="true"></script>
        </environment>
        <environment exclude="Development">
            <script src="https://ajax.aspnetcdn.com/ajax/bootstrap/4.3.1/bootstrap.min.js"
                    asp-fallback-src="~/lib/twiter-bootstrap/js/bootstrap.min.js"
                    asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"
                    crossorigin="anonymous"
                    integrity="">
            </script>
            <script src="~/js/site.min.js" asp-append-version="true"></script>
        </environment>

        <script src="~/js/MvcGrid/mvc-grid.js"></script>
        <script>
            [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
                new MvcGrid(element);
            });
        </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
