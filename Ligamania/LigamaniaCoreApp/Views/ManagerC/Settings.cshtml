@inject LigamaniaCoreApp.Services.ILigamaniaService ligamaniaService
@model LigamaniaCoreApp.Models.GlobalViewModels.SettingsViewModel
@{
    ViewData["Title"] = "Configuración";
    var temporadas = await ligamaniaService.GetAllTemporadas();
    var documentos = await ligamaniaService.GetAllDocumentos();
}

<h2>Configuración de parámetros de Ligamanía</h2>

@using (Html.BeginForm("SettingClasificaciones", "ManagerC", FormMethod.Post))
{
<div style="background-color:antiquewhite;padding:2em">
    <div class="card d-flex mr-3">
        <div class="card-header">
            <h3>Competiciones</h3>
        </div>
        <div class="card-body">
            <div class="form-inline">
                <label asp-for="NumeroJornadasVolverEliminados"></label>
                <input asp-for="NumeroJornadasVolverEliminados" class="form-control" />
                <span asp-validation-for="NumeroJornadasVolverEliminados" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="card d-flex mr-3">
        <div class="card-header">
            <h3>Clasificaciones</h3>
        </div>
        <div class="card-body">
            <!-- Checkboxes -->
            <div class="form-check form-check-inline">
                @Html.CheckBoxFor(m => m.VerRotuloCopa, new { @class = "col-1" })
                <label class="form-check-label">Ver rótulo 'Los emparejamientos de COPA serán fijados tras disputarse la última jornada del año en curso (antes del parón Navideño)'</label>
            </div>

            <div class="form-check form-check-inline">
                @Html.CheckBoxFor(m => m.VerCuadroCopa, new { @class = "col-1" })
                @*<input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="1">*@
                <label class="form-check-label">Habilitar / Deshabilitar 'Ver Cuadro de Copa' en el menú principal</label>
            </div>

            <div class="form-inline">
                <label asp-for="NotificacionClasificaciones"></label>
                <textarea asp-for="NotificacionClasificaciones" class="form-control p-2 m-2"></textarea>
                <span asp-validation-for="NotificacionClasificaciones" class="text-danger"></span>
            </div>

        </div>
    </div>
    <div class="card d-flex mr-3">
        <div class="card-header">
            <h3>Página principal</h3>
        </div>
        <div class="card-body">
            <!-- Checkboxes -->
            <div class="form-check form-check-inline">
                @Html.CheckBoxFor(m => m.VerNoticias, new { @class = "col-1" })
                <label class="form-check-label">Ver noticias en la página principal</label>
            </div>

            <div class="form-check form-check-inline">
                @Html.CheckBoxFor(m => m.VerEquiposPretemporada, new { @class = "col-1" })
                <label class="form-check-label">Ver configuración de equipos en pretemporada en la página principal</label>
            </div>
        </div>
    </div>
    <div class="card d-flex mr-3">
        <div class="card-header">
            <h3>Premios</h3>
        </div>
        <div class="card-body">
            <div class="form-inline">
                <label class="form-check-label">Ver Premios de la temporada</label>
                @Html.DropDownListFor(m => m.TemporadaPremios, temporadas, new { @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="card d-flex mr-3">
        <button class="btn btn-primary" name="submit" type="submit">Guardar cambios</button>
    </div>
</div>
}
<hr />
<div style="background-color:antiquewhite;padding:2em">
    @using (Html.BeginForm("LoadCalendar", "ManagerC", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="d-flex">
            <div class="card d-flex">
                <div class="card-header">
                    <h3>Calendarios</h3>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        @Html.Label("Nombre del calendario")
                        @Html.TextBox("nombre", "", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Nº de equipos")
                        @Html.TextBox("equipos", "", new { @class = "form-control" })
                    </div>
                    <input type="file" id="fUpload" name="files" class="form-control"  style="padding:2px" />
                </div>
                <div class="card-footer">
                    <div class="col-md-8" style="padding-top:10px;">
                        <button class="btn btn-primary" name="submit" type="submit">Guardar calendario</button>
                    </div>
                </div>
            </div>
            <br />
            <div id="dvData"></div>
        </div>
    }
    <hr />
    @using (Html.BeginForm("LoadDocument", "ManagerC", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="d-flex mr-3">
            <div class="card d-flex">
                <div class="card-header">
                    <h3>Reglamentos y Documentos de Ligamanía (para modificar un reglamento, borrarlo e insertar el nuevo)</h3>
                </div>
                <div class="card-body">
                    @(Html
                        .Grid(documentos)
                        .Build(columns =>
                        {
                            columns.Add(model => model.Description).Titled("Documento").Filterable(true).Encoded(false).RenderedAs(model => Html.ActionLink(model.Description, "DownloadFile", "InvitadoR", new { fileId = model.Id }, null));
                            columns.Add(model => $"<button type='button' class='btn btn-primary' title='Borrar' onclick='borrarReglamento(\"{model.Id}\")' id=@model.Id>Borrar</button>").Encoded(false);
                        })
                        .Css("webgrid-noticiaAplicacion") // Overwrites all classes with the new ones
                        .Empty("No hay reglamentos")
                        .Id("ajax-grid-reglamentos")
                    )
                </div>
                <div class="card-footer">
                    <p>Nuevo reglamento/documento</p>
                    <div class="form-group">
                        @Html.Label("Descripción: ")
                        @Html.TextBox("descripcion", "", new { @class = "form-control" })
                    </div>

                    <input type="file" id="nuevoReglamento" name="nuevoReglamento" class="form-control" style="padding:2px" />
                    <div class="col-md-8" style="padding-top:10px;">
                        <button class="btn btn-primary" name="submit" type="submit">Guardar reglamento/documento</button>
                    </div>
                </div>
            </div>
            <br />
            <div id="dvData"></div>
        </div>
    }

</div>

<script>
    $(document).ready(function () {
        $('#btnUpload').on('click', function () {
            var fileExtension = ['xls', 'xlsx'];
            var filename = $('#fUpload').val();
            if (filename.length == 0) {
                alert("Please select a file.");
                return false;
            }
            else {
                var extension = filename.replace(/^.*\./, '');
                if ($.inArray(extension, fileExtension) == -1) {
                    alert("Please select only excel files.");
                    return false;
                }
            }
            var fdata = new FormData();
            var fileUpload = $("#fUpload").get(0);
            var files = fileUpload.files;
            fdata.append(files[0].name, files[0]);
            $.ajax({
                type: "POST",
                url: "/LoadCalendar?handler=Import",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: fdata,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.length == 0)
                        alert('Some error occured while uploading');
                    else {
                        $('#dvData').html(response);
                    }
                },
                error: function (e) {
                    $('#dvData').html(e.responseText);
                }
            });
        })
    });

    function borrarReglamento(id) {
        var r = confirm("¿Está seguro de querer eliminar el documento seleccionado?");
        if (r == true) {
            const reglamento = {
                Id: id
            };
            var urlToCall = '/MANAGERC/BorrarDocumento';
            $.ajax({
                type: "POST",
                data: JSON.stringify(reglamento),
                url: urlToCall,
                contentType: "application/json; charset=utf-8",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert("Error al borrar el documento");
                }
            }).done(function (response) {
                if (response.result) {
                    alert(response.message);
                    location.reload();
                }
                else {
                    alert("Error al borrar el documento");
                }
            });
        }

    };
</script>
