@inject LigamaniaCoreApp.Services.MenuMasterService menus
@{
    ViewData["Title"] = "Index";
    var lista = menus.GetMenuMasterToConfig();
    lista = lista.OrderBy(m=>m.User_Roll).ThenBy(m => m.Parent_MenuID).ThenBy(m => m.Order).ToList();
}
<h2>Configuración del Menú de Opciones de Ligamanía</h2>
<div class="card">
    <div class="card-body">
        <h3>Orden=-1 indica que el menú está desactivado, y no se mostrará</h3>
        <h3>En orden se ponen los valores de 10 en 10 para que quede espacio para añadir posteriores entradas y no modificar el resto</h3>
        <button type="button" class='btn btn-primary btn-lg' data-toggle='modal' data-target='#addMenuModal'>Nueva entrada</button>
    </div>
    <div class="card-body">
        @*@await Html.PartialAsync("_gridConfigMenu", lista)*@
        <div id="grid-menu" class="mvc-grid" data-name="" data-filter-mode="ExcelRow" data-source-url="">
            @{
                @(Html
                    .Grid(lista)
                    .Build(columns =>
                    {
                        columns.Add(model => model.MenuIdentity).Titled("Id");
                        columns.Add(model => model.MenuID).Titled("Menu");
                        columns.Add(model => model.MenuName).Titled("Nombre");
                        columns.Add(model => model.Parent_MenuID).Titled("ID Parent");
                        columns.Add(model => model.User_Roll).Titled("Rol");
                        columns.Add(model => model.MenuFileName).Titled("Menu File Name");
                        columns.Add(model => model.MenuURL).Titled("Url");
                        columns.Add(model => model.Order).Titled("Orden");
                        columns.Add(model => $"<button type='button' class='btn btn-primary' data-menuid=\"{model.MenuID}\" data-name=\"{model.MenuName}\" data-id=\"{model.MenuIdentity}\" data-parentid=\"{model.Parent_MenuID}\" " +
                            $"data-userrol=\"{model.User_Roll}\" data-filename=\"{model.MenuFileName}\" data-url=\"{model.MenuURL}\" data-orden=\"{model.Order}\" " +
                            $"data-toggle='modal' data-target='#editMenuModal'>Editar</button>").Encoded(false);
                        columns.Add(model => $"<button type='button' class='btn btn-secondary' id=\"{model.MenuIdentity}\" onClick=\"buttonBorrar(this.id)\">Borrar</button>").Encoded(false);
                    })
                    .Css("webgrid-noticiaAplicacion") // Overwrites all classes with the new ones
                    .Empty("No hay registros")
                    .Id("ajax-grid-menu")
                    .Pageable(pager =>
                    {
                        //pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 5, "5" }, { 10, "10" } };
                        pager.ShowPageSizes = true;
                        pager.RowsPerPage = 5;
                    })
                    .Filterable()
                    .Sortable()
                )
            }
        </div>
    </div>
</div>

<div class="modal fade" id="addMenuModal" tabindex="-1" role="dialog" aria-labelledby="addMenuModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addMenuModalLabel">Nueva entrada del menú</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="menu-text" class="col-form-label">Menu:</label>
                        <input type="text" class="form-control" id="menu-text">
                    </div>
                    <div class="form-group">
                        <label for="nombre-text" class="col-form-label">Nombre:</label>
                        <input type="text" class="form-control" id="nombre-text">
                    </div>
                    <div class="form-group">
                        <label for="parent-text" class="col-form-label">Parent:</label>
                        <input type="text" class="form-control" id="parent-text">
                    </div>
                    <div class="form-group">
                        <label for="rol-text" class="col-form-label">Rol:</label>
                        <input type="text" class="form-control" id="rol-text">
                    </div>
                    <div class="form-group">
                        <label for="fileName-text" class="col-form-label">Menu File Name:</label>
                        <input type="text" class="form-control" id="fileName-text">
                    </div>
                    <div class="form-group">
                        <label for="url-text" class="col-form-label">Url:</label>
                        <input type="text" class="form-control" id="url-text">
                    </div>
                    <div class="form-group">
                        <label for="orden-text" class="col-form-label">Orden:</label>
                        <input type="text" class="form-control" id="orden-text">
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-save="modal-add">Guardar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editMenuModal" tabindex="-1" role="dialog" aria-labelledby="editMenuModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editMenuModalLabel">Editando... </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" class="form-control" id="edit-id-menu">
                    <div class="form-group">
                        <label for="edit-menu-text" class="col-form-label">Menu:</label>
                        <input type="text" class="form-control" id="edit-menu-text">
                    </div>
                    <div class="form-group">
                        <label for="edit-nombre-text" class="col-form-label">Nombre:</label>
                        <input type="text" class="form-control" id="edit-nombre-text">
                    </div>
                    <div class="form-group">
                        <label for="edit-parent-text" class="col-form-label">Parent:</label>
                        <input type="text" class="form-control" id="edit-parent-text">
                    </div>
                    <div class="form-group">
                        <label for="edit-rol-text" class="col-form-label">Rol:</label>
                        <input type="text" class="form-control" id="edit-rol-text">
                    </div>
                    <div class="form-group">
                        <label for="edit-fileName-text" class="col-form-label">Menu File Name:</label>
                        <input type="text" class="form-control" id="edit-fileName-text">
                    </div>
                    <div class="form-group">
                        <label for="edit-url-text" class="col-form-label">Url:</label>
                        <input type="text" class="form-control" id="edit-url-text">
                    </div>
                    <div class="form-group">
                        <label for="edit-orden-text" class="col-form-label">Orden:</label>
                        <input type="text" class="form-control" id="edit-orden-text">
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-save="modal-edit">Guardar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $('#editMenuModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var id = button.data('id') // Extract info from data-* attributes
        var menuId = button.data('menuid')
        var name = button.data('name')
        var parentid = button.data('parentid')
        var userrol = button.data('userrol')
        var filename = button.data('filename')
        var url = button.data('url')
        var orden = button.data('orden')

        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        modal.find('.modal-title').text('Edición de menú ' + id)
        modal.find('#edit-id-menu').val(id)
        modal.find('#edit-menu-text').val(menuId)
        modal.find('#edit-nombre-text').val(name)
        modal.find('#edit-parent-text').val(parentid)
        modal.find('#edit-rol-text').val(userrol)
        modal.find('#edit-fileName-text').val(filename)
        modal.find('#edit-url-text').val(url)
        modal.find('#edit-orden-text').val(orden)
    })

    $('#addMenuModal').on('click', '[data-save="modal-add"]', function (event) {
        event.preventDefault();
        var menuId = $('#menu-text').val();
        var nombre = $('#nombre-text').val();
        var parent = $('#parent-text').val();
        var rol = $('#rol-text').val();
        var filename = $('#fileName-text').val();
        var url = $('#url-text').val();
        var orden = $('#orden-text').val();

        const menu = {
            MenuID: menuId,
            MenuName: nombre,
            Parent_MenuID: parent,
            User_Roll: rol,
            MenuFileName: filename,
            MenuURL: url,
            Order: orden
        };
        var urlToCall = '/MANAGERC/AgregarMenu';
        $.ajax({
            type: "POST",
            data: JSON.stringify(menu),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function (response) {
                alert("Error al crear un nuevo menu");
            }
        }).done(function (response) {
            alert("Menú añadido");
            $('#addMenuModal').modal('hide');
            location.reload();
        });
    })


    $('#editMenuModal').on('click', '[data-save="modal-edit"]', function (event) {
        event.preventDefault();
        var id = $('#edit-id-menu').val();
        var menuId = $('#edit-menu-text').val();
        var nombre = $('#edit-nombre-text').val();
        var parent = $('#edit-parent-text').val();
        var rol = $('#edit-rol-text').val();
        var filename = $('#edit-fileName-text').val();
        var url = $('#edit-url-text').val();
        var orden = $('#edit-orden-text').val();
        //alert(id); alert(menuId); alert(nombre); alert(parent + rol + filname + url + orden);
        const menu = {
            MenuIdentity: id,
            MenuID: menuId,
            MenuName: nombre,
            Parent_MenuID: parent,
            User_Roll: rol,
            MenuFileName: filename,
            MenuURL: url,
            Order: orden
        };
        var urlToCall = '/MANAGERC/EditarMenu';
        $.ajax({
            type: "POST",
            data: JSON.stringify(menu),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function (response) {
                alert("Error al modificar una entrada del menú");
            }
        }).done(function (response) {
            alert(response.message);
            $('#editMenuModal').modal('hide');
            location.reload();
        });
    });

    function buttonBorrar(elementid) {
        const menu = {
            MenuIdentity: elementid,
        };
        var urlToCall = '/MANAGERC/BorrarMenu';
        $.ajax({
            type: "POST",
            data: JSON.stringify(menu),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function (response) {
                alert("Error al borrar menú");
            }
        }).done(function (response) {
            alert(response.message);
            location.reload();
        });
    }


</script>