@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@using LigamaniaCoreApp.Models.ManagerViewModels
@using LigamaniaCoreApp.Data

@model IEnumerable<TemporadaEquipoViewModel>

@{
    var equiposGrouped = Model.GroupBy(m => m.Categoria).ToDictionary(grp => grp.Key, grp => grp.ToList());
    var equiposGolden = equiposGrouped[LigamaniaConst.Categoria_Golden].Where(e=>!e.Equipo.Contains("BOT")).OrderBy(e=>e.Equipo);
    var equiposSilverA = equiposGrouped[LigamaniaConst.Categoria_SilverA].Where(e=>!e.Equipo.Contains("BOT")).OrderBy(e=>e.Equipo);
    var equiposSilverB = equiposGrouped[LigamaniaConst.Categoria_SilverB].Where(e=>!e.Equipo.Contains("BOT")).OrderBy(e=>e.Equipo);
}
    <div class="flex-container">
        <div id="grid-equipos-golden" class="mvc-grid flex-item-bold-center" data-name="" data-filter-mode="FilterRow" data-source-url="">
            <h3>Golden</h3>
            @(Html
                .Grid(equiposGolden)
                .Build(columns =>
                {
                    int row = 1;
                    columns.Add().Titled("#").RenderedAs(model => row++);
                    columns.Add(model => model.Equipo).Titled("Equipo");
                    columns.Add(model => !model.Confirmada ? LigamaniaConst.NO : LigamaniaConst.SI).Titled("Confirmado").Encoded(false);
                    columns.Add(model => !model.Pagada ? LigamaniaConst.NO : LigamaniaConst.SI).Titled("Temporada Pagada").Encoded(false);
                    //columns.Add(model => !model.Baja ? "Activo" : "Baja").Encoded(false);
                })
                .Empty("No hay equipos")
                .Id("equipos")
                .Css("mvc-grid-medium") // Overwrites all classes with the new ones
            )
        </div>
        <div id="grid-equipos-silvera" class="mvc-grid flex-item-bold-center" data-name="" data-filter-mode="FilterRow" data-source-url="">
            <h3>Silver A</h3>
            @(Html
                .Grid(equiposSilverA)
                .Build(columns =>
                {
                    int row = 1;
                    columns.Add().Titled("#").RenderedAs(model => row++);
                    columns.Add(model => model.Equipo).Titled("Equipo");
                    columns.Add(model => !model.Confirmada ? LigamaniaConst.NO : LigamaniaConst.SI).Titled("Confirmado").Encoded(false);
                    columns.Add(model => !model.Pagada ? LigamaniaConst.NO : LigamaniaConst.SI).Titled("Temporada Pagada").Encoded(false);
                    //columns.Add(model => !model.Baja ? "Activo" : "Baja").Encoded(false);
                })
                .Empty("No hay equipos")
                .Id("equipos")
                .Css("mvc-grid-medium") // Overwrites all classes with the new ones
            )
        </div>
        <div id="grid-equipos-silverb" class="mvc-grid flex-item-bold-center" data-name="" data-filter-mode="FilterRow" data-source-url="">
            <h3>Silver B</h3>
            @(Html
                .Grid(equiposSilverB)
                .Build(columns =>
                {
                    int row = 1;
                    columns.Add().Titled("#").RenderedAs(model => row++);
                    columns.Add(model => model.Equipo).Titled("Equipo");
                    columns.Add(model => !model.Confirmada ? LigamaniaConst.NO : LigamaniaConst.SI).Titled("Confirmado").Encoded(false);
                    columns.Add(model => !model.Pagada ? LigamaniaConst.NO : LigamaniaConst.SI).Titled("Temporada Pagada").Encoded(false);
                    //columns.Add(model => !model.Baja ? "Activo" : "Baja").Encoded(false);
                })
                .Empty("No hay equipos")
                .Id("equipos")
                .Css("mvc-grid-medium") // Overwrites all classes with the new ones
            )
        </div>
    </div>
