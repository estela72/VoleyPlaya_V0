@inject LigamaniaCoreApp.Services.Interfaces.IPanelControlService panelControlService
@using LigamaniaCoreApp.Data;
@model LigamaniaCoreApp.Models.ManagerViewModels.TemporadaCompeticionViewModel

@{
    @*@await panelControlService.CheckResultadoPartidos();*@

ViewData["Title"] = "Panel de Control";
var estado = Model.EstadoCompeticion;

bool abrirAliEnabled = false;
bool cerrarAliEnabled = false;
bool pubCarrAIEnabled = false;

if (estado == "" || estado == null || estado == LigamaniaConst.JI_EstadoInicial || estado == LigamaniaConst.AJ_CambJor && Model.RondaActiva && Model.JornadaIdaActiva) {
    abrirAliEnabled = true;
}
if (estado == LigamaniaConst.CJ_CerrarJornada && Model.RondaFinal && Model.PartidosCopa.Any())
{
    abrirAliEnabled = true;
}
if (estado == LigamaniaConst.JI_AbrirAli) { cerrarAliEnabled = true; }
if (estado == LigamaniaConst.JI_CerrarAli) { pubCarrAIEnabled = true; }

bool resultadosIDAEnabled = false;
bool clasificacionIDAEnabled = false;
bool cambiarJornadaIDAEnabled = false;
bool cerrarJornadaIDAEnabled = false;
bool abrirCambiosEnabled = false;
bool generarNuevaJornadaEnabled = false;

if (estado == LigamaniaConst.JI_PubCarr) { resultadosIDAEnabled = true; }
if (/*estado == LigamaniaConst.CJ_Resultados ||*/ estado == LigamaniaConst.AJ_Resultados && (Model.JornadaIdaActiva || !Model.JornadaIdaActiva&&Model.RondaFinal &&Model.PartidosCopa.Any())) { clasificacionIDAEnabled = true; }
if (estado == LigamaniaConst.CJ_Clasif && (Model.JornadaIdaActiva || !Model.JornadaIdaActiva&&Model.RondaFinal &&Model.PartidosCopa.Any())) { cerrarJornadaIDAEnabled = true; }
if (estado == LigamaniaConst.CJ_CerrarJornada && !Model.RondaFinal && Model.JornadaIdaActiva) { cambiarJornadaIDAEnabled = true; }
if (estado == LigamaniaConst.CJ_CerrarJornada && Model.GenerarJornadaFinal) { generarNuevaJornadaEnabled = true; }
if (estado == LigamaniaConst.AJ_CambJor && !Model.RondaFinal && !Model.JornadaIdaActiva) { abrirCambiosEnabled = true; }

bool cerrarCambiosEnabled = false;
bool guardarAliEnabled = false;
bool pubCarrCCEnabled = false;

if (estado == LigamaniaConst.AJ_AbrirCam) { cerrarCambiosEnabled = true; }
if (estado == LigamaniaConst.CJ_CerrarCam) { guardarAliEnabled = true; }
if (estado == LigamaniaConst.CJ_GuarAli) { pubCarrCCEnabled = true; }
if (estado == LigamaniaConst.CJ_PubCarr && Model.RondaActiva && Model.JornadaIdaActiva) { abrirAliEnabled = true; }

bool resultadosVUELTAEnabled = false;
bool clasificacionVUELTAEnabled = false;
bool cambiarJornadaVUELTAEnabled = false;
bool cerrarJornadaVUELTAEnabled = false;
bool ganadoresEnabled = false;

if (estado == LigamaniaConst.CJ_PubCarr && Model.RondaActiva && !Model.JornadaIdaActiva) { resultadosVUELTAEnabled = true; }
if (estado == LigamaniaConst.AJ_Resultados && !Model.JornadaIdaActiva) { ganadoresEnabled = true; }
if (estado == LigamaniaConst.AJ_EstablecerGanadores && !Model.JornadaIdaActiva) { { clasificacionVUELTAEnabled = true; } }
if (estado == LigamaniaConst.CJ_Clasif && !Model.JornadaIdaActiva) { cerrarJornadaVUELTAEnabled = true; }
if (estado == LigamaniaConst.CJ_CerrarJornada && !Model.JornadaIdaActiva) { cambiarJornadaVUELTAEnabled = true; }


var ronda = "Ronda " + Model.RondaActual.ToString() + " activa";
var partidosRonda = Model.PartidosCopa;
var jornadaPartidos = 0;

if (!Model.RondaActiva) { abrirAliEnabled = false; }
else if (partidosRonda == null || !partidosRonda.Any()) { abrirAliEnabled=false; }

if (Model.RondaActual == 0)
{
    ronda = "Debe activar una ronda";
}
else
{
    if (Model.JornadaIdaActiva)
    {
        ronda += " - Jornada de IDA activa";
        jornadaPartidos = Model.JornadaIda;
    }
    else if (!Model.RondaFinal)
    {
        ronda += " - Jornada de VUELTA activa";
        jornadaPartidos = Model.JornadaVuelta;
    }
    else if (!Model.PartidosCopa.Any())
    {
        ronda += " - Última ronda - No existe jornada de VUELTA. Se pueden añadir más jornadas desde 'Preparar Competición'";
    }
    else
    {
        ronda += " - Última ronda - Partido de desempate";
        jornadaPartidos = Model.PartidosCopa.Last().Jornada;
    }
    if (Model.PartidosCopa != null)
    {
        partidosRonda = Model.PartidosCopa.Where(p => p.Jornada.Equals(jornadaPartidos))
            .OrderBy(p => p.NumeroPartido).ToList();
    }
}
}

<h2>@Model.Competicion - Panel de Control - Copa</h2>
<div class="text-danger"><strong>@ronda</strong></div>
<div class="text-danger">Jornada Carrusel: <strong>@Model.JornadaCarrusel</strong></div>
<div class="text-danger">Jornada Actual  : <strong>@Model.JornadaActual</strong></div>
@*<div class="spinner-border text-success" id="spinner" role="status" hidden>
    <span class="sr-only">Espere por favor...</span>
</div>
<div class="btn-group" role="group" aria-label="Toolbar with button groups">
    <button type="button" class="btn btn-primary mr-3" id="pruebaSpinner">Prueba</button>
</div>*@
<div class="flex-container">
    <div class="flex-item-bold-center col-12">
        <div class="card col-12 border-primary mt-2">
            <div class="card-header">
                <h3>Partidos: @ronda</h3>
            </div>
            <div class="card-body">
                @if (!Model.RondaActiva)
                {
                    <div class="btn-group" role="group" aria-label="Toolbar with button groups">
                        <button type="button" class="btn btn-primary mr-3" id="activarRonda">Activar Ronda Inicial</button>
                    </div>
                }
                else if (partidosRonda != null && partidosRonda.Any())
                {
                    @(Html
                        .Grid(partidosRonda)
                            .Build(columns =>
                            {
                                columns.Add(model => model.NumeroPartido).Titled("Nº partido");
                                columns.Add(model => model.EquipoA).Titled("Equipo A");
                                columns.Add(model => model.EquipoB).Titled("Equipo B");
                            })
                            .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                            .Empty("No hay partidos")
                            .Id("ajax-grid-partidos")
                            .Pageable(pager =>
                            {
                                pager.RowsPerPage = 15;
                            })
                            .Filterable()
                            .Sortable()
                    )
                }
                else
                {
                    <div class="btn-group" role="group" aria-label="Toolbar with button groups">
                        <button type="button" class="btn btn-primary mr-3" id="generarPartidos">Generar partidos</button>
                    </div>
                }
            </div>
        </div>
        <div class="card col-12 border-primary mt-2">
            <div class="card-header">
                <h3>Alineación inicial y poner Jornada de IDA en juego</h3>
            </div>
            <div class="card-body">
                <div class="btn-group" role="group" aria-label="Toolbar with button groups">
                    <button type="button" class="btn btn-primary mr-3" id="abrirAlineaciones" @(abrirAliEnabled ? "active" : "disabled")>Abrir alineaciones</button>
                    <button type="button" class="btn btn-primary mr-3" id="cerrarAlineaciones" @(cerrarAliEnabled ? "active" : "disabled")>Cerrar alineaciones</button>
                    <button type="button" class="btn btn-primary mr-3" id="publicarCarruselAI" @(pubCarrAIEnabled ? "active" : "disabled")>Publicar carrusel</button>
                </div>
            </div>
        </div>
        <div class="card col-12 border-primary mt-2">
            <div class="card-header">
                <h3>Cerrar jornada de IDA - Abrir cambios (si no es ronda final) (Lunes/Martes)</h3>
            </div>
            <div class="card-body">
                <div class="btn-group" role="group" aria-label="Toolbar with button groups">
                    <button type="button" class="btn btn-warning mr-3" id="resultadosIda" @(resultadosIDAEnabled ? "active" : "disabled")>Resultados</button>
                    <button type="button" class="btn btn-warning mr-3" id="clasificacionIda" @(clasificacionIDAEnabled ? "active" : "disabled")>Clasificación</button>
                    <button type="button" class="btn btn-warning mr-3" id="cerrarJornadaIda" @(cerrarJornadaIDAEnabled ? "active" : "disabled")>Cerrar jornada</button>
                    @if (!Model.RondaFinal)
                    {
                        <button type="button" class="btn btn-warning mr-3" id="cambiarJornadaIda" @(cambiarJornadaIDAEnabled ? "active" : "disabled")>Cambiar jornada</button>
                        <button type="button" class="btn btn-warning mr-3" id="abrirCambios" @(abrirCambiosEnabled ? "active" : "disabled")>Abrir cambios</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-warning mr-3" id="generarJornada" @(generarNuevaJornadaEnabled ? "active" : "disabled")>Generar nueva jornada Ronda Final</button>
                        <button type="button" class="btn btn-warning mr-3" id="ganadores" @(generarNuevaJornadaEnabled ? "active" : "disabled")>Establecer Ganador COPA</button>
                        
                    }
                </div>
            </div>
        </div>
        @if (!Model.RondaFinal)
        {
            <div class="card col-12 border-primary mt-2">
                <div class="card-header">
                    <h2>Cerrar cambios - Jornada de VUELTA en juego (Viernes)</h2>
                </div>
                <div class="card-body">
                    <div class="btn-group" role="group" aria-label="Toolbar with button groups">
                        <button type="button" class="btn btn-success mr-3" id="cerrarCambios" @(cerrarCambiosEnabled ? "active" : "disabled")>Cerrar cambios</button>
                        <button type="button" class="btn btn-success mr-3" id="guardarAlineaciones" @(guardarAliEnabled ? "active" : "disabled")>Guardar alineaciones</button>
                        <button type="button" class="btn btn-success mr-3" id="publicarCarruselCC" @(pubCarrCCEnabled ? "active" : "disabled")>Publicar carrusel</button>
                    </div>
                </div>
            </div>
            <div class="card col-12 border-primary mt-2">
                <div class="card-header">
                    <h3>Cerrar jornada de VUELTA (Lunes/Martes)</h3>
                </div>
                <div class="card-body">
                    <div class="btn-group" role="group" aria-label="Toolbar with button groups">
                        <button type="button" class="btn btn-warning mr-3" id="resultadosVuelta" @(resultadosVUELTAEnabled ? "active" : "disabled")>Resultados</button>
                        <button type="button" class="btn btn-warning mr-3" id="ganadores" @(ganadoresEnabled ? "active" : "disabled")>Establecer Ganadores</button>
                        <button type="button" class="btn btn-warning mr-3" id="clasificacionVuelta" @(clasificacionVUELTAEnabled ? "active" : "disabled")>Clasificación</button>
                        <button type="button" class="btn btn-warning mr-3" id="cerrarJornadaVuelta" @(cerrarJornadaVUELTAEnabled ? "active" : "disabled")>Cerrar jornada</button>
                        <button type="button" class="btn btn-warning mr-3" id="cambiarJornadaVuelta" @(cambiarJornadaVUELTAEnabled ? "active" : "disabled")>Cambiar jornada</button>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="flex-item-bold-center col-12 mt-5">
        <div class="card col-12 border-danger">
            <div class="card-header">
                <h3>Forzado de operaciones</h3>
            </div>
            <div class="card-body">
                <div class="btn-group mb-3" role="grid" aria-label="Toolbar with button groups">
                    <div class="input-group mr-3">
                        <span>Introducir jornada para operaciones forzadas: </span>
                        <input type="number" id="jornadaForzado" />
                    </div>
                    <button type="button" class="btn btn-danger mr-3" id="resultadosForzado">Resultados</button>
                    <button type="button" class="btn btn-danger mr-3" id="clasificacionForzado">Clasificación</button>
                </div>
                <div class="btn-group mb-3" role="grid" aria-label="Toolbar with button groups">
                    <button type="button" class="btn btn-danger mr-3" id="abrirCambiosForzado">Abrir cambios</button>
                    <button type="button" class="btn btn-danger mr-3" id="cerrarCambiosForzado">Cerrar cambios</button>
                    <button type="button" class="btn btn-danger mr-3" id="recalcularClasificacion">RECALCULAR RESULTADOS Y CLASIFICACIONES DESDE JORNADA 1</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
$('#pruebaSpinner').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var id = "@Model.Id";
    var r = confirm("¿Está seguro de querer REALIZAR UNA PRUEBA en "+competicion+"?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Id: id,
            Competicion: competicion,
            EstadoCompeticion: "",
            TipoCompeticion: "Copa"
        };
        var urlToCall = '/ADMINT/Prueba';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al abrir alineaciones" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
            hideSpinner();
        });
    }
});

$('#abrirAlineaciones').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var id = "@Model.Id";
    var r = confirm("¿Está seguro de querer ABRIR ALINEACIONES en "+competicion+"?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Id: id,
            Competicion: competicion,
            EstadoCompeticion: "",
            TipoCompeticion: "Copa"
        };
        var urlToCall = '/ADMINT/AbrirAlineaciones';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al abrir alineaciones" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
            hideSpinner();
        });
    }
});
$('#cerrarAlineaciones').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer CERRAR ALINEACIONES?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion
        };
        var urlToCall = '/ADMINT/CerrarAlineaciones';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al cerrar alineaciones" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
            hideSpinner();
        });
    }
});
$('#publicarCarruselAI').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var estadoCompeticion = "@estado";
    var r = confirm("¿Está seguro de querer PUBLICAR EL CARRUSEL?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion
        };
        var urlToCall = '/ADMINT/PublicarCarrusel';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al publicar carrusel" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
});
$('#publicarCarruselCC').on('click', function (event) {
    var estadoCompeticion = "@estado";
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer PUBLICAR CARRUSEL?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion
        };
        var urlToCall = '/ADMINT/PublicarCarrusel';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al public carrusel " + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
});

$('#resultadosIda').on('click', function (event) {
    Resultados();
});

$('#resultadosVuelta').on('click', function (event) {
    Resultados();
});

function Resultados() {
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer calcular los resultados de los partidos la última jornada?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion
        };
        var urlToCall = '/ADMINT/CalcularResultados';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al calcular resultados" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                 hideSpinner();
       });
    }
};

$('#clasificacionIda').on('click', function (event) {
    Clasificacion();
});
$('#clasificacionVuelta').on('click', function (event) {
    Clasificacion();
});

function Clasificacion() {
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer calcular la clasificación?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion
        };
        var urlToCall = '/ADMINT/ActualizarClasificacion';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al calcular clasificación" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
};
$('#cambiarJornadaIda').on('click', function (event) {
    CambiarJornada();
});
$('#cambiarJornadaVuelta').on('click', function (event) {
    CambiarJornada();
});

function CambiarJornada() {
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer CAMBIAR JORNADA?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion
        };
        var urlToCall = '/ADMINT/CambiarJornada';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al cambiar jornada" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
};
$('#cerrarJornadaIda').on('click', function (event) {
    CerrarJornada();
});
$('#cerrarJornadaVuelta').on('click', function (event) {
    CerrarJornada();
});

function CerrarJornada() {
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer CERRAR JORNADA?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion
        };
        var urlToCall = '/ADMINT/CerrarJornada';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al cerrar jornada" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
};
$('#abrirCambios').on('click', function (event) {
    var estadoCompeticion = "@estado";
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer ABRIR CAMBIOS?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion
        };
        var urlToCall = '/ADMINT/AbrirCambios';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al abrir cambios " + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
});
$('#cerrarCambios').on('click', function (event) {
    var estadoCompeticion = "@estado";
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer CERRAR CAMBIOS?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion
        };
        var urlToCall = '/ADMINT/CerrarCambios';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al cerrar cambios " + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
});
$('#guardarAlineaciones').on('click', function (event) {
    var estadoCompeticion = "@estado";
    var competicion = "@Model.Competicion";
    var r = confirm("¿Está seguro de querer GUARDAR ALINEACIONES?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion
        };
        var urlToCall = '/ADMINT/GuardarAlineaciones';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al guardar alineaciones " + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
                hideSpinner();
        });
    }
});

$('#activarRonda').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var categoria = "Sin Categoria";
    var ronda = @Model.RondaActual;
    var r = confirm("¿Está seguro de querer ACTIVAR SIGUIENTE RONDA?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion
        };
        var urlToCall = '/ADMINT/ActivarRondaCopa';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al activar ronda de Copa" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                hideSpinner();
                location.reload();
            }
            else {
                hideSpinner();
                alert(response.message);
            }
        });
    }
});
$('#generarPartidos').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var categoria = "Sin Categoria";
    var ronda = @Model.RondaActual;
    var r = confirm("¿Está seguro de querer GENERAR PARTIDOS para la ronda activa?");
    if (r == true) {
        showSpinner();
        const compCat = {
            CompeticionDestino: competicion,
            Categoria: categoria,
            Ronda: ronda
        };
        var urlToCall = '/ADMINT/AgregarPartidosCopa';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al generar partidos ronda de Copa" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                hideSpinner();
                location.reload();
            }
            else {
                alert(response.message);
                hideSpinner();
            }
        });
    }
});

$('#generarJornada').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var categoria = "Sin Categoria";
    var ronda = @Model.RondaActual;
    var r = confirm("¿Está seguro de querer GENERAR una nueva JORNADA en la RONDA FINAL?");
    if (r == true) {
        showSpinner();
        const compCat = {
            CompeticionDestino: competicion,
            Categoria: categoria,
            Ronda: ronda
        };
        var urlToCall = '/MANAGERC/NuevaJornadaFinalCopa';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al generar una nueva jornada final de Copa" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
                hideSpinner();
            }
        });
    }
});


$('#ganadores').on('click', function (event) {
    var competicion = "@Model.Competicion";
    var categoria = "Sin Categoria";
    var ronda = @Model.RondaActual;
    var r = confirm("¿Está seguro de querer ESTABLECER GANADORES DE LA RONDA?");
    if (r == true) {
        showSpinner();
        const compCat = {
            Competicion: competicion
        };
        var urlToCall = '/ADMINT/EstablecerGanadoresPartidosCopa';
        $.ajax({
            type: "POST",
            data: JSON.stringify(compCat),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al establecer ganadores partidos ronda de Copa" + competicion);
                hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                if (response.status == 2) {
                    urlToCall = '/ADMINT/GanadoresPartidosCopa';
                    window.location.href = urlToCall;
                }
                else {
                    location.reload();
                }
            }
            else {
                alert(response.message);
                hideSpinner();
            }
        });
    }
});
     $('#recalcularClasificacion').on('click', function (event) {
        var estadoCompeticion = "@estado";
        var competicion = "@Model.Competicion";
        var jornada = 1;
        var r = confirm("¿Está seguro de querer RECALCULAR resultados y clasificación desde jornada "+jornada+"?");
        if (r == true) {
            showSpinner();
            const operacionForzada = {
                Competicion: competicion,
                EstadoCompeticion: estadoCompeticion,
                Jornada: jornada
            };
            var urlToCall = '/ADMINT/RecalcularClasificacionForzado';
            $.ajax({
                type: "POST",
                data: JSON.stringify(operacionForzada),
                url: urlToCall,
                contentType: "application/json; charset=utf-8",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert("Error al calcular clasificación" + competicion);
                hideSpinner();
                }
            }).done(function (response) {
                if (response.result) {
                    alert(response.message);
                    location.reload();
                }
                else {
                    alert(response.message);
                }
                hideSpinner();
        });
    }
    });
$('#resultadosForzado').on('click', function (event) {
    var estadoCompeticion = "@estado";
    var competicion = "@Model.Competicion";
    var jornada = $('#jornadaForzado').val();
    var r = confirm("¿Está seguro de querer calcular los resultados de partidos para la jornada "+jornada+"?");
    if (r == true) {
        showSpinner();
        const operacionForzada = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion,
            Jornada: jornada
        };
        var urlToCall = '/ADMINT/CalcularResultadosForzado';
        $.ajax({
            type: "POST",
            data: JSON.stringify(operacionForzada),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al calcular resultados" + competicion);
            hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
                hideSpinner();
            }
    });
}
});
$('#clasificacionForzado').on('click', function (event) {
    var estadoCompeticion = "@estado";
    var competicion = "@Model.Competicion";
    var jornada = $('#jornadaForzado').val();
    var r = confirm("¿Está seguro de querer calcular la clasificación para la jornada "+jornada+"?");
    if (r == true) {
        showSpinner();
        const operacionForzada = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion,
            Jornada: jornada
        };
        var urlToCall = '/ADMINT/ActualizarClasificacionForzado';
        $.ajax({
            type: "POST",
            data: JSON.stringify(operacionForzada),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al calcular clasificación" + competicion);
            hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
            hideSpinner();
    });
}
});
$('#abrirCambiosForzado').on('click', function (event) {
    var estadoCompeticion = "@estado";
    var competicion = "@Model.Competicion";
    var jornada = $('#jornadaForzado').val();
    var r = confirm("¿Está seguro de querer abrir cambios para la jornada "+jornada+" (Se copiarán las alineaciones de la jornada indicada, para hacer los cambios sobre ellos)?");
    if (r == true) {
        showSpinner();
        const operacionForzada = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion,
            Jornada: jornada
        };
        var urlToCall = '/ADMINT/AbrirCambiosForzado';
        $.ajax({
            type: "POST",
            data: JSON.stringify(operacionForzada),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al abrir cambios" + competicion);
            hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
             hideSpinner();
   });
}
});
$('#cerrarCambiosForzado').on('click', function (event) {
     var estadoCompeticion = "@estado";
   var competicion = "@Model.Competicion";
    var jornada = $('#jornadaForzado').val();
    var r = confirm("¿Está seguro de querer cerrar cambios para la jornada "+jornada+"?");
    if (r == true) {
         showSpinner();
       const operacionForzada = {
            Competicion: competicion,
            EstadoCompeticion: estadoCompeticion,
            Jornada: jornada
        };
        var urlToCall = '/ADMINT/CerrarCambiosForzado';
        $.ajax({
            type: "POST",
            data: JSON.stringify(operacionForzada),
            url: urlToCall,
            contentType: "application/json; charset=utf-8",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert("Error al cerrar cambios" + competicion);
            hideSpinner();
            }
        }).done(function (response) {
            if (response.result) {
                alert(response.message);
                location.reload();
            }
            else {
                alert(response.message);
            }
            hideSpinner();
    });
}
});

function showSpinner() {
    document.body.style.cursor = 'wait';
}
function hideSpinner() {
    document.body.style.cursor = 'arrow';
}
</script>
