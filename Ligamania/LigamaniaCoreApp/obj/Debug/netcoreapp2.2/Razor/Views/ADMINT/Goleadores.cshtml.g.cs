#pragma checksum "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "06564c373e9b5397677e580d3875b601d748a24a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ADMINT_Goleadores), @"mvc.1.0.view", @"/Views/ADMINT/Goleadores.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ADMINT/Goleadores.cshtml", typeof(AspNetCore.Views_ADMINT_Goleadores))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 3 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp;

#line default
#line hidden
#line 4 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models;

#line default
#line hidden
#line 5 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.AccountViewModels;

#line default
#line hidden
#line 6 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.ManageViewModels;

#line default
#line hidden
#line 7 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model;

#line default
#line hidden
#line 8 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Services;

#line default
#line hidden
#line 9 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Data;

#line default
#line hidden
#line 11 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using NonFactors.Mvc.Grid;

#line default
#line hidden
#line 2 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
using LigamaniaCoreApp.Models.AdminViewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"06564c373e9b5397677e580d3875b601d748a24a", @"/Views/ADMINT/Goleadores.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1653bea22581b35930f70d9de4acba1f76fe3e61", @"/Views/_ViewImports.cshtml")]
    public class Views_ADMINT_Goleadores : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GoleadoresViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(147, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
  
    ViewData["Title"] = "Goleadores";
    var jugadores = new List<TemporadaJornadaJugadorViewModel>();
    var titulo = "Goleadores";
    var clubs = await ligamaniaService.GetAllClubs(true);
    var competicionesActivas = await ligamaniaService.GetCompeticionesActivasStr();

    if (Model != null)
    {
        var selectedClub = Model.Club;
        clubs = await ligamaniaService.GetAllClubs(true, selectedClub);
        if (Model.Jugadores != null) { jugadores = Model.Jugadores.OrderBy(j => j.OrdenPuesto).ThenBy(j => j.Jugador).ToList(); }
        if (Model.Fecha != DateTime.MinValue)
        {
            titulo = "Goleadores del " + Model.Club + " en la fecha " + Model.Fecha.ToString("dd/MM/yyyy");
        }
        else
        {
            titulo = "Goleadores del " + Model.Club + " para la jornada carrusel de las competiciones activas";
        }
    }

#line default
#line hidden
            BeginContext(1049, 4, true);
            WriteLiteral("<h2>");
            EndContext();
            BeginContext(1054, 6, false);
#line 27 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
Write(titulo);

#line default
#line hidden
            EndContext();
            BeginContext(1060, 444, true);
            WriteLiteral(@"</h2>

<div class=""flex-container"">
    <div class=""card flex-item-fit"">
        <div class=""card-header"">
            <h3>Si no se selecciona una fecha se cargar√°n los jugadores de la jornada carrusel de todas las competiciones activas</h3>
            <div class=""input-group"">
                <div class=""form-group"">
                    <span class=""input-group-text"" id=""basic-addon1"">Seleccionar club:</span>
                    ");
            EndContext();
            BeginContext(1505, 115, false);
#line 36 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
               Write(Html.DropDownList("clubSelected", clubs, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(1620, 205, true);
            WriteLiteral("\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"cargarJugadores\">Cargar jugadores</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n");
            EndContext();
#line 42 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
             if (Model != null && Model.CompeticionJornada.Any())
            {

#line default
#line hidden
            BeginContext(1907, 23, true);
            WriteLiteral("                <div>\r\n");
            EndContext();
#line 45 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
                     foreach (var compJor in Model.CompeticionJornada)
                    {

#line default
#line hidden
            BeginContext(2025, 27, true);
            WriteLiteral("                        <p>");
            EndContext();
            BeginContext(2053, 11, false);
#line 47 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
                      Write(compJor.Key);

#line default
#line hidden
            EndContext();
            BeginContext(2064, 11, true);
            WriteLiteral(" - Jornada ");
            EndContext();
            BeginContext(2076, 13, false);
#line 47 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
                                             Write(compJor.Value);

#line default
#line hidden
            EndContext();
            BeginContext(2089, 6, true);
            WriteLiteral("</p>\r\n");
            EndContext();
#line 48 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
                    }

#line default
#line hidden
            BeginContext(2118, 24, true);
            WriteLiteral("                </div>\r\n");
            EndContext();
            BeginContext(2160, 2956, false);
#line 50 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
            Write(Html
                        .Grid(jugadores)
                        .Build(columns =>
                        {
                            columns.Add(model => model.Puesto).Titled("Puesto");
                            columns.Add(model => model.Jugador).Titled("Jugador");
                            columns.Add(model => $"<button class='goles-favor-menos' data-jugador=\"{model.Jugador}\"> <i class=\"fas fa-minus-circle\"></i><span class=\"sr-only\"></span></button>").Titled("-").Encoded(false);
                            columns.Add(model => model.GolesFavor).Titled("GF");
                            columns.Add(model => $"<button class='goles-favor-mas' data-jugador=\"{model.Jugador}\"> <i class=\"fas fa-plus-circle\"></i><span class=\"sr-only\"></span></button>").Titled("+").Encoded(false);
                            columns.Add(model => $"<button class='goles-contra-menos' data-jugador=\"{model.Jugador}\"> <i class=\"fas fa-minus-circle\"></i><span class=\"sr-only\"></span></button>").Titled("-").Encoded(false);
                            columns.Add(model => model.GolesContra).Titled("GC");
                            columns.Add(model => $"<button class='goles-contra-mas' data-jugador=\"{model.Jugador}\"> <i class=\"fas fa-plus-circle\"></i><span class=\"sr-only\"></span></button>").Titled("+").Encoded(false);
                            columns.Add(model => model.Golden).Titled("Golden");
                            columns.Add(model => model.SilverA).Titled("Silver A");
                            columns.Add(model => model.SilverB).Titled("Silver B");
                            if (competicionesActivas.Contains("Copa"))
                            {
                                columns.Add(model => model.Copa).Titled("Copa");
                            }
                            if (competicionesActivas.Contains("Supercopa"))
                            {
                                columns.Add(model => model.Supercopa).Titled("Supercopa");
                            }
                            if (competicionesActivas.Contains("Promocion"))
                            {
                                columns.Add(model => model.Promocion).Titled("Promocion");
                            }
                        })
                        .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                        .RowAttributed(model => new { style = model.Eliminado == true ? "background-color:red" : "background-color:transparent" })
                        .AppendCss("disabled")
                        .Empty("No hay jugadores")
                        .Id("ajax-grid-jugadores")
                        .Pageable(pager =>
                        {
                            pager.RowsPerPage = 50;
                        })
                        .Filterable()
                        .Sortable()
                    );

#line default
#line hidden
            EndContext();
#line 89 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
                     
            }
            else
            {

#line default
#line hidden
            BeginContext(5167, 92, true);
            WriteLiteral("                <p>No hay competiciones ACTIVAS y EN JUEGO - No se pueden a√±adir goles</p>\r\n");
            EndContext();
#line 94 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
            }

#line default
#line hidden
            BeginContext(5274, 38, true);
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
#line 99 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
 if (Model != null)
{

#line default
#line hidden
            BeginContext(5336, 80, true);
            WriteLiteral("    <script>\r\n        $(document).ready(function () {\r\n            var fecha = \"");
            EndContext();
            BeginContext(5417, 34, false);
#line 103 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
                    Write(Model.Fecha.ToString("yyyy-MM-dd"));

#line default
#line hidden
            EndContext();
            BeginContext(5451, 69, true);
            WriteLiteral("\";\r\n            $(\"#fecha\").val(fecha);\r\n        });\r\n    </script>\r\n");
            EndContext();
#line 107 "D:\srcRepository\Proyectos Estela\Ligamania\LigamaniaCoreApp\Views\ADMINT\Goleadores.cshtml"
}

#line default
#line hidden
            BeginContext(5523, 2897, true);
            WriteLiteral(@"<script type=""text/javascript"">
    $('#cargarJugadores').on('click', function (event) {
        showSpinner();
        var fecha = $('#fecha').val();
        var club = $('#clubSelected').val();
        if (club != '') {
            var r = confirm(""¬øEst√° seguro de querer cargar los jugadores del club ""+club+""?"");
            if (r == true) {
                var urlToCall = '/ADMINT/GoleadoresClubJornada?club='+club+'&fecha='+fecha;
                window.location.href = urlToCall;
            }
        }
        else {
            alert('Debe seleccionar un club');
        }
        hideSpinner();
    });

    $('.goles-favor-mas').on('click', function (event) {
        showSpinner();
        var fecha = $('#fecha').val();
        var jug = this.getAttribute('data-jugador');
        const goles = {
            Jugador: jug,
            Favor: true,
            Mas: true
            , Fecha: fecha
        };
        golesJugador(goles);
    });
    $('.goles-favor-menos').on('cl");
            WriteLiteral(@"ick', function (event) {
        showSpinner();
        var fecha = $('#fecha').val();
        var jug = this.getAttribute('data-jugador');
        const goles = {
            Jugador: jug,
            Favor: true,
            Mas: false
            , Fecha: fecha
        };
        golesJugador(goles);
    });
    $('.goles-contra-mas').on('click', function (event) {
        showSpinner();
        var fecha = $('#fecha').val();
        var jug = this.getAttribute('data-jugador');
        const goles = {
            Jugador: jug,
            Favor: false,
            Mas: true
            , Fecha: fecha
        };
        golesJugador(goles);
    });
    $('.goles-contra-menos').on('click', function (event) {
        showSpinner();
        var fecha = $('#fecha').val();
        var jug = this.getAttribute('data-jugador');
        const goles = {
            Jugador: jug,
            Favor: false,
            Mas: false
            , Fecha: fecha
        };
        golesJugado");
            WriteLiteral(@"r(goles);
    });
    function golesJugador(goles) {
        var urlToCall = '/ADMINT/GolesJugador';
        $.ajax({
            type: ""POST"",
            data: JSON.stringify(goles),
            url: urlToCall,
            contentType: ""application/json; charset=utf-8"",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function () {
                alert(""Error al actualizar el gol"");
                hideSpinner();
            }
        }).done(function (response) {
            alert(response.message);
            location.reload();
            hideSpinner();
        });
    };
    function showSpinner() {
        document.body.style.cursor = 'wait';
    }
    function hideSpinner() {
        document.body.style.cursor = 'arrow';
    }

    </script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public LigamaniaCoreApp.Services.ILigamaniaService ligamaniaService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GoleadoresViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
