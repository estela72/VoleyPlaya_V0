#pragma checksum "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "dc7017cafc28da9d4316972792786e12878deb871c77efbb91b3c19868681d8a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ENTRENADORC__AlineacionCambioEquipo), @"mvc.1.0.view", @"/Views/ENTRENADORC/_AlineacionCambioEquipo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ENTRENADORC/_AlineacionCambioEquipo.cshtml", typeof(AspNetCore.Views_ENTRENADORC__AlineacionCambioEquipo))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp;

#line default
#line hidden
#line 4 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models;

#line default
#line hidden
#line 5 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.AccountViewModels;

#line default
#line hidden
#line 6 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.ManageViewModels;

#line default
#line hidden
#line 7 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model;

#line default
#line hidden
#line 8 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Services;

#line default
#line hidden
#line 11 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using NonFactors.Mvc.Grid;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
using LigamaniaCoreApp.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"dc7017cafc28da9d4316972792786e12878deb871c77efbb91b3c19868681d8a", @"/Views/ENTRENADORC/_AlineacionCambioEquipo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"cc15118ad604b470ae866cea065e5e5dcaf3f56265436adea6abd4962110efbf", @"/Views/_ViewImports.cshtml")]
    public class Views_ENTRENADORC__AlineacionCambioEquipo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LigamaniaCoreApp.Models.ManagerViewModels.TemporadaEquipoViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(175, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
  
    var porteros = await ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Portero);
    var defensas = await ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Defensa);
    var medios = await ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Medio);
    var delanteros = await ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Delantero);

    var porterosToExclude = new List<string> {  };
    var listaPorteros = porteros.Where(j=>!porterosToExclude.Contains(j.Text)).ToList();

    var defensas1ToExclude = new List<string> {
                                               Model.Alineaciones.Defensa2?.JugadorCambio.AliasJugador,  Model.Alineaciones.Defensa2?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Defensa3?.JugadorCambio.AliasJugador,  Model.Alineaciones.Defensa3?.JugadorPrevia.AliasJugador};
    var listaDefensas1 = defensas.Where(j=>!defensas1ToExclude.Contains(j.Text)).ToList();

    var defensas2ToExclude = new List<string> { Model.Alineaciones.Defensa1?.JugadorCambio.AliasJugador, Model.Alineaciones.Defensa1?.JugadorPrevia.AliasJugador,

                                               Model.Alineaciones.Defensa3?.JugadorCambio.AliasJugador,  Model.Alineaciones.Defensa3?.JugadorPrevia.AliasJugador};
    var listaDefensas2 = defensas.Where(j=>!defensas2ToExclude.Contains(j.Text)).ToList();

    var defensas3ToExclude = new List<string> { Model.Alineaciones.Defensa1?.JugadorCambio.AliasJugador, Model.Alineaciones.Defensa1?.JugadorPrevia.AliasJugador,
                                                Model.Alineaciones.Defensa2?.JugadorCambio.AliasJugador, Model.Alineaciones.Defensa2?.JugadorPrevia.AliasJugador
                                                                                                        };
    var listaDefensas3 = defensas.Where(j=>!defensas3ToExclude.Contains(j.Text)).ToList();

    var medios1ToExclude = new List<string> {
                                               Model.Alineaciones.Medio2?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio2?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Medio3?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio3?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Medio4?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio4?.JugadorPrevia.AliasJugador};
    var listaMedios1 = medios.Where(j=>!medios1ToExclude.Contains(j.Text)).ToList();
    var medios2ToExclude = new List<string> {  Model.Alineaciones.Medio1?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio1?.JugadorPrevia.AliasJugador,

                                               Model.Alineaciones.Medio3?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio3?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Medio4?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio4?.JugadorPrevia.AliasJugador};
    var listaMedios2 = medios.Where(j=>!medios2ToExclude.Contains(j.Text)).ToList();
    var medios3ToExclude = new List<string> {  Model.Alineaciones.Medio1?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio1?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Medio2?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio2?.JugadorPrevia.AliasJugador,

                                               Model.Alineaciones.Medio4?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio4?.JugadorPrevia.AliasJugador};
    var listaMedios3 = medios.Where(j=>!medios3ToExclude.Contains(j.Text)).ToList();
    var medios4ToExclude = new List<string> {  Model.Alineaciones.Medio1?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio1?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Medio2?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio2?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Medio3?.JugadorCambio.AliasJugador, Model.Alineaciones.Medio3?.JugadorPrevia.AliasJugador
                                                                                                     };
    var listaMedios4 = medios.Where(j=>!medios4ToExclude.Contains(j.Text)).ToList();

    var delanteros1ToExclude = new List<string> {
                                               Model.Alineaciones.Delantero2?.JugadorCambio.AliasJugador, Model.Alineaciones.Delantero2?.JugadorPrevia.AliasJugador,
                                               Model.Alineaciones.Delantero3?.JugadorCambio.AliasJugador, Model.Alineaciones.Delantero3?.JugadorPrevia.AliasJugador};
    var listaDelanteros1 = delanteros.Where(j=>!delanteros1ToExclude.Contains(j.Text)).ToList();
    var delanteros2ToExclude = new List<string> { Model.Alineaciones.Delantero1?.JugadorCambio.AliasJugador, Model.Alineaciones.Delantero1?.JugadorPrevia.AliasJugador,

                                                  Model.Alineaciones.Delantero3?.JugadorCambio.AliasJugador, Model.Alineaciones.Delantero3?.JugadorPrevia.AliasJugador};
    var listaDelanteros2 = delanteros.Where(j=>!delanteros2ToExclude.Contains(j.Text)).ToList();
    var delanteros3ToExclude = new List<string> { Model.Alineaciones.Delantero1?.JugadorCambio.AliasJugador, Model.Alineaciones.Delantero1?.JugadorPrevia.AliasJugador,
                                                  Model.Alineaciones.Delantero2?.JugadorCambio.AliasJugador, Model.Alineaciones.Delantero2?.JugadorPrevia.AliasJugador
                                                 };
    var listaDelanteros3 = delanteros.Where(j=>!delanteros3ToExclude.Contains(j.Text)).ToList();

    var jornadaActual = await ligamaniaService.GetJornadaActual();
    var jugadoresEliminados = await ligamaniaService.GetJugadoresEliminados();
    var jugadoresEliminadosJornada = jugadoresEliminados.Where(j => j.JornadaEliminado.Equals(jornadaActual)).ToList();

    var listaEliminados = jugadoresEliminados.Select(j => j.Jugador).ToList();
    var listaEliminadosJornada = jugadoresEliminadosJornada.Select(j => j.Jugador).ToList();

    var numJugadoresEliminadosJornada = Model.Alineaciones.Previa==null ? 0 : Model.Alineaciones.Previa.Count(a=>listaEliminadosJornada.Contains(a.Jugador));

    var texto = "Alineación Actual";
    var numJugAlineados = 0;
    if (Model.Alineaciones.AlineacionInicalActivo) { texto = "Alineación Inicial"; numJugAlineados = Model.Alineaciones.Cambios.Count; }
    else if (Model.Alineaciones.CambiosActivo) { texto = "Cambios"; }

    var numCambiosTotales = Model.MaxCambiosFijosPosibles + numJugadoresEliminadosJornada;

#line default
#line hidden
            BeginContext(6964, 143, true);
            WriteLiteral("<div class=\"flex-container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header bg-dark text-white\">\r\n            <h3 class=\"card-title\">");
            EndContext();
            BeginContext(7108, 17, false);
#line 82 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                              Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(7125, 3, true);
            WriteLiteral(" - ");
            EndContext();
            BeginContext(7129, 12, false);
#line 82 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                                                   Write(Model.Equipo);

#line default
#line hidden
            EndContext();
            BeginContext(7141, 3, true);
            WriteLiteral(" - ");
            EndContext();
            BeginContext(7145, 5, false);
#line 82 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                                                                   Write(texto);

#line default
#line hidden
            EndContext();
            BeginContext(7150, 7, true);
            WriteLiteral("</h3>\r\n");
            EndContext();
#line 83 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
             if (Model.Alineaciones.AlineacionInicalActivo && numJugAlineados != 11)
            {

#line default
#line hidden
            BeginContext(7258, 126, true);
            WriteLiteral("                <div class=\"card-title\" style=\"color:red\">Alineación Incompleta. Recuerda seleccionar los 11 jugadores</div>\r\n");
            EndContext();
#line 86 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
            }
            else if (Model.Alineaciones.AlineacionInicalActivo)
            {

#line default
#line hidden
            BeginContext(7479, 85, true);
            WriteLiteral("                <div class=\"card-title\" style=\"color:red\">Alineación Completa</div>\r\n");
            EndContext();
#line 90 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
            }
            else if (Model.Alineaciones.CambiosActivo)
            {

#line default
#line hidden
            BeginContext(7650, 82, true);
            WriteLiteral("                <div class=\"card-title\" style=\"color:yellowgreen\">Puedes realizar ");
            EndContext();
            BeginContext(7733, 17, false);
#line 93 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                                                                             Write(numCambiosTotales);

#line default
#line hidden
            EndContext();
            BeginContext(7750, 18, true);
            WriteLiteral(" cambios: <strong>");
            EndContext();
            BeginContext(7769, 29, false);
#line 93 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                                                                                                                 Write(Model.MaxCambiosFijosPosibles);

#line default
#line hidden
            EndContext();
            BeginContext(7798, 40, true);
            WriteLiteral(" cambios ordinarios </strong> y <strong>");
            EndContext();
            BeginContext(7839, 29, false);
#line 93 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                                                                                                                                                                                       Write(numJugadoresEliminadosJornada);

#line default
#line hidden
            EndContext();
            BeginContext(7868, 202, true);
            WriteLiteral(" extras </strong> por jugadores eliminados en la última jornada  </div>\r\n                <div class=\"card-title\" style=\"color:yellowgreen\">Llevas realizados <strong style=\"color:red;\">Llevas realizados ");
            EndContext();
            BeginContext(8071, 44, false);
#line 94 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                                                                                                                            Write(Model.Alineaciones.NumCambiosFijosRealizados);

#line default
#line hidden
            EndContext();
            BeginContext(8115, 22, true);
            WriteLiteral(" cambios ordinarios y ");
            EndContext();
            BeginContext(8138, 45, false);
#line 94 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                                                                                                                                                                                               Write(Model.Alineaciones.NumCambiosExtrasRealizados);

#line default
#line hidden
            EndContext();
            BeginContext(8183, 33, true);
            WriteLiteral(" cambios extras.</strong></div>\r\n");
            EndContext();
#line 95 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
            }
            else
            {

#line default
#line hidden
            BeginContext(8264, 129, true);
            WriteLiteral("                <div class=\"card-title\" style=\"color:red;font-weight:bold;font-size:3rem\">Alineaciones y cambios cerrados</div>\r\n");
            EndContext();
#line 99 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
            }

#line default
#line hidden
#line 100 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
             if (!Model.RepetirClub)
            {

#line default
#line hidden
            BeginContext(8461, 157, true);
            WriteLiteral("                <div class=\"card-title\" style=\"color:yellow;font-weight:bold;font-size:3rem\">Recuerda que no se debe repetir jugadores del mismo club</div>\r\n");
            EndContext();
#line 103 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
            }

#line default
#line hidden
            BeginContext(8633, 467, true);
            WriteLiteral(@"            </div>
        <div class=""card-body"" style=""background-image: url('/images/campo-de-futbol-784442.jpeg');background-repeat: no-repeat; background-size: 100% 100%"">
            <div>
                <div class=""row"">
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3"">
                        ");
            EndContext();
            BeginContext(9101, 808, false);
#line 111 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Medio1, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Medio1" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaMedios1 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(9909, 323, true);
            WriteLiteral(@"
                    </div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                </div>
                <div class=""row"">
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3"">
                        ");
            EndContext();
            BeginContext(10233, 814, false);
#line 122 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Defensa1, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Defensa1" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaDefensas1 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(11047, 192, true);
            WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\"></div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\">\r\n                        ");
            EndContext();
            BeginContext(11240, 820, false);
#line 130 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Delantero1, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Delantero1" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaDelanteros1 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(12060, 323, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3"">
                        ");
            EndContext();
            BeginContext(12384, 808, false);
#line 141 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Medio2, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Medio2" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaMedios2 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(13192, 251, true);
            WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\"></div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\">\r\n                        ");
            EndContext();
            BeginContext(13444, 811, false);
#line 151 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Portero, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Portero" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaPorteros },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(14255, 120, true);
            WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\">\r\n                        ");
            EndContext();
            BeginContext(14376, 814, false);
#line 158 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Defensa2, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Defensa2" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaDefensas2 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(15190, 192, true);
            WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\"></div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\">\r\n                        ");
            EndContext();
            BeginContext(15383, 820, false);
#line 166 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Delantero2, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Delantero2" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaDelanteros2 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(16203, 323, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3"">
                        ");
            EndContext();
            BeginContext(16527, 808, false);
#line 177 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Medio3, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Medio3" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaMedios3 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(17335, 159, true);
            WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\"></div>\r\n                </div>\r\n                <div class=\"row\" ");
            EndContext();
            BeginContext(17517, 111, true);
            WriteLiteral(">\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col\">\r\n                        ");
            EndContext();
            BeginContext(17629, 814, false);
#line 188 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Defensa3, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Defensa3" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaDefensas3 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(18443, 138, true);
            WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col\">\r\n                        ");
            EndContext();
            BeginContext(18582, 820, false);
#line 196 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Delantero3, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Delantero3" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaDelanteros3 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(19402, 323, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3""></div>
                    <div class=""col col-lg-3 col-md-3 col-sm-3"">
                        ");
            EndContext();
            BeginContext(19726, 808, false);
#line 207 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(await Html.PartialAsync("_jugadorAlineacion", Model.Alineaciones.Medio4, viewData: new ViewDataDictionary(ViewData)
                        {   { "puesto", "Medio4" }, { "aliIni", Model.Alineaciones.AlineacionInicalActivo }, {"cambios",Model.Alineaciones.CambiosActivo }, {"lista",listaMedios4 },
                            { "listaEliminados",listaEliminados }, {"listaEliminadosJornada",listaEliminadosJornada }, {"maxcambiosfijos",Model.MaxCambiosFijosPosibles},
                            { "numCambiosFijosRealizados",Model.Alineaciones.NumCambiosFijosRealizados}, {"numCambiosExtrasRealizados",Model.Alineaciones.NumCambiosExtrasRealizados }, {"equipo", Model.Equipo }, {"competicion",Model.Competicion}, {"numJugadoresEliminadosJornada", numJugadoresEliminadosJornada}
                        }));

#line default
#line hidden
            EndContext();
            BeginContext(20534, 216, true);
            WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col col-lg-3 col-md-3 col-sm-3\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer bg-dark text-white\">\r\n");
            EndContext();
#line 218 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
             if (Model.Alineaciones.AlineacionInicalActivo)
            {

#line default
#line hidden
            BeginContext(20826, 111, true);
            WriteLiteral("                <h3>Guía para hacer una Alineación Inicial</h3>\r\n                <ul>\r\n                    <li>");
            EndContext();
            BeginContext(20938, 130, false);
#line 222 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(Html.Label("labelText", "[Lista de jugadores para seleccionar un jugador]", new { @style = "background-color:white;color:black" }));

#line default
#line hidden
            EndContext();
            BeginContext(21068, 57, true);
            WriteLiteral("</li>\r\n                    <li>\r\n                        ");
            EndContext();
            BeginContext(21126, 143, false);
#line 224 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(Html.Label("labelText", "[Lista de jugadores para seleccionar un jugador ya cambiado]", new { @style = "background-color:yellow;color:black" }));

#line default
#line hidden
            EndContext();
            BeginContext(21269, 79, true);
            WriteLiteral("\r\n                    </li>\r\n                    <li>\r\n                        ");
            EndContext();
            BeginContext(21349, 98, false);
#line 227 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(Html.Label("labelText", "[Jugador Eliminado]", new { @style = "background-color:cyan;color:red" }));

#line default
#line hidden
            EndContext();
            BeginContext(21447, 55, true);
            WriteLiteral("\r\n                    </li>\r\n                    <li>\r\n");
            EndContext();
#line 230 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                         if (!Model.RepetirClub)
                        {

#line default
#line hidden
            BeginContext(21579, 192, true);
            WriteLiteral("                            <h4 style=\"color:red;font-weight:bold;font-size:3rem\">Recuerda que no se debe repetir jugadores del mismo club. ¡¡Modifica los jugadores de clubs REPETIDOS!!</h4>\r\n");
            EndContext();
#line 233 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                        }
                        else
                        {

#line default
#line hidden
            BeginContext(21855, 144, true);
            WriteLiteral("                            <h4 style=\"color:red;font-weight:bold;font-size:3rem\">La alineación inicial de jugadores es TOTALMENTE LIBRE </h4>\r\n");
            EndContext();
#line 237 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                        }

#line default
#line hidden
            BeginContext(22026, 349, true);
            WriteLiteral(@"                    </li>
                    <li>
                        <h4>Si la competición ya comenzó y no hiciste aún tu primera alineación,  ten cuidado con los jugadores ELIMINADOS!</h4>
                    </li>
                    <li> <h4>Los jugadores se van almacenando segun se van seleccionando</h4></li>
                </ul>
");
            EndContext();
#line 244 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
            }
            else if (Model.Alineaciones.CambiosActivo)
            {

#line default
#line hidden
            BeginContext(22461, 96, true);
            WriteLiteral("                <h3>Guía para hacer cambios</h3>\r\n                <ul>\r\n                    <li>");
            EndContext();
            BeginContext(22558, 108, false);
#line 249 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(Html.Label("labelText","[Jugador alineación jornada anterior]", new { @style = "border:none;color:yellow" }));

#line default
#line hidden
            EndContext();
            BeginContext(22666, 31, true);
            WriteLiteral("</li>\r\n                    <li>");
            EndContext();
            BeginContext(22698, 124, false);
#line 250 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(Html.Label("labelText","[Jugador ELIMINADO jornada actual]", new { @style = "border:none;background-color:cyan;color:red" }));

#line default
#line hidden
            EndContext();
            BeginContext(22822, 31, true);
            WriteLiteral("</li>\r\n                    <li>");
            EndContext();
            BeginContext(22854, 127, false);
#line 251 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(Html.Label("labelText","[Jugador ELIMINADO jornadas previas]", new { @style = "border:none;background-color:red;color:white" }));

#line default
#line hidden
            EndContext();
            BeginContext(22981, 7, true);
            WriteLiteral("</li>\r\n");
            EndContext();
            BeginContext(23418, 24, true);
            WriteLiteral("                    <li>");
            EndContext();
            BeginContext(23443, 99, false);
#line 255 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
                   Write(Html.Label("labelText","[Cambio realizado]", new { @style = "background-color:yellow;color:blue" }));

#line default
#line hidden
            EndContext();
            BeginContext(23542, 7, true);
            WriteLiteral("</li>\r\n");
            EndContext();
            BeginContext(23697, 1010, true);
            WriteLiteral(@"                    <li>
                        <a href='#' style=""color:yellow"">
                            [Eliminar un cambio]
                            <i class=""fas fa-trash-alt""></i>
                            <span class=""sr-only""></span>
                        </a> /
                        <a href='#' style=""color:Cyan"">
                            <i class=""fas fa-trash-alt""></i>
                            <span class=""sr-only""></span>
                        </a>
                    </li>
                    <li><h4>Sólo se permite realizar 3 cambios ordinarios por jornada, además de los cambios de todos los jugadores eliminados en la jornada anterior</h4></li>
                    <li><h4>Si no cambias un jugador eliminado, durante las siguientes jornadas sólo lo podrás cambiar contando como uno de los 3 cambios ordinarios!</h4></li>
                    <li><h4>Los cambios se van almacenando automáticamente según se van realizando</h4></li>
                </ul>
");
            EndContext();
#line 272 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_AlineacionCambioEquipo.cshtml"
            }

#line default
#line hidden
            BeginContext(24722, 42, true);
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n<hr />");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public LigamaniaCoreApp.Services.ILigamaniaService ligamaniaService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LigamaniaCoreApp.Models.ManagerViewModels.TemporadaEquipoViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
