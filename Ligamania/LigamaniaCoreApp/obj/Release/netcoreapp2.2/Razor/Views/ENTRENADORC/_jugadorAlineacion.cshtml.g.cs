#pragma checksum "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e288e8221aa42a7d38f2ddd4d6292fd169490399"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ENTRENADORC__jugadorAlineacion), @"mvc.1.0.view", @"/Views/ENTRENADORC/_jugadorAlineacion.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ENTRENADORC/_jugadorAlineacion.cshtml", typeof(AspNetCore.Views_ENTRENADORC__jugadorAlineacion))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp;

#line default
#line hidden
#line 4 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models;

#line default
#line hidden
#line 5 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.AccountViewModels;

#line default
#line hidden
#line 6 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.ManageViewModels;

#line default
#line hidden
#line 7 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model;

#line default
#line hidden
#line 8 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Services;

#line default
#line hidden
#line 11 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using NonFactors.Mvc.Grid;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
using LigamaniaCoreApp.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e288e8221aa42a7d38f2ddd4d6292fd169490399", @"/Views/ENTRENADORC/_jugadorAlineacion.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1653bea22581b35930f70d9de4acba1f76fe3e61", @"/Views/_ViewImports.cshtml")]
    public class Views_ENTRENADORC__jugadorAlineacion : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LigamaniaCoreApp.Models.EntrenadorViewModels.InfoAlineacion>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(168, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
  
    var equipo = ViewData["equipo"].ToString();
    var competicion = ViewData["competicion"].ToString();
    var puesto = ViewData["puesto"].ToString();
    var aliIni = (bool)ViewData["aliIni"];
    var cambios = (bool)ViewData["cambios"];
    var lista = ViewData["lista"] as IEnumerable<SelectListItem>;
    var listaEliminados = ViewData["listaEliminados"] as IEnumerable<string>;
    var listaEliminadosJornada = ViewData["listaEliminadosJornada"] as IEnumerable<string>;
    var maxcambiosfijos = (int)ViewData["maxcambiosfijos"];
    var numCambiosFijosRealizados = (int)ViewData["numCambiosFijosRealizados"];
    var numCambiosExtrasRealizados = (int)ViewData["numCambiosExtrasRealizados"];
    var numJugadoresEliminadosJornada = (int)ViewData["numJugadoresEliminadosJornada"];

    var numeliminados = listaEliminadosJornada.Count();
    bool cambiosFijosRealizados = false;
    bool cambiosExtrasRealizados = false;

    if (numCambiosFijosRealizados >= maxcambiosfijos) { cambiosFijosRealizados = true; }
    if (numCambiosExtrasRealizados >= numJugadoresEliminadosJornada) { cambiosExtrasRealizados = true; }

    //if (numCambiosRealizados >= (maxcambios + numJugadoresEliminadosJornada)) { cambiosRealizados = true; }
    //if (numCambiosRealizados >= maxcambios) { cambiosRealizados = true; }

    // establecer el estilo de cada jugador
    var styleCambio = "background-color:white;color:black";
    var styleEliminado = "background-color:red;color:white";
    var styleEliminadoJornada = "background-color:cyan;color:red";
    var styleCambiado = "background-color:yellow;color:black";
    var colorJugador = "color:yellow;";

    bool esCambioNormal = true;
    if (Model != null && listaEliminadosJornada.Contains(Model.JugadorPrevia.Jugador)) { esCambioNormal = false; }


    bool activado = (esCambioNormal && !cambiosFijosRealizados) || (!esCambioNormal && !cambiosExtrasRealizados);
    bool eliminar = false;
    if (!aliIni && !cambios) { activado = false; }
    else if (aliIni) { activado = true; styleCambio = styleCambiado; eliminar = true; }
    else if (Model != null && Model.JugadorCambio.Jugador != Model.JugadorPrevia.Jugador && cambios) { activado = true; styleCambio = styleCambiado; eliminar = true; }
    else if (Model != null && Model.JugadorCambio.Jugador != Model.JugadorPrevia.Jugador && aliIni) { activado = true; styleCambio = styleCambiado; eliminar = false; }

    if (Model != null && listaEliminados.Contains(Model.JugadorPrevia.Jugador)) { colorJugador = "color:white;";  }
    if (Model != null && listaEliminadosJornada.Contains(Model.JugadorPrevia.Jugador)) { colorJugador = "color:cyan;";  }

    if (Model != null && listaEliminados.Contains(Model.JugadorCambio.Jugador)) { styleCambio = styleEliminado; }
    if (Model != null && listaEliminadosJornada.Contains(Model.JugadorCambio.Jugador)) { styleCambio = styleEliminadoJornada; }

    var jugadorYaCambiado = (Model!=null) ? Model.JugadorCambio.AliasJugador : string.Empty;

    //ViewBag.equipo = equipo;

#line default
#line hidden
#line 57 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
 if (Model != null)
{

#line default
#line hidden
            BeginContext(3271, 8, true);
            WriteLiteral("    <div");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 3279, "\"", 3300, 1);
#line 59 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
WriteAttributeValue("", 3287, colorJugador, 3287, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3301, 11, true);
            WriteLiteral(">\r\n        ");
            EndContext();
            BeginContext(3313, 87, false);
#line 60 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
   Write(Html.DisplayFor(m => Model.JugadorPrevia.AliasJugador, new { @class = "form-control" }));

#line default
#line hidden
            EndContext();
            BeginContext(3400, 14, true);
            WriteLiteral("\r\n    </div>\r\n");
            EndContext();
#line 62 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
    if (activado)
    {
        

#line default
#line hidden
            BeginContext(3449, 320, false);
#line 64 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
   Write(Html.DropDownListFor(m => Model.JugadorCambio.AliasJugador, lista, "Seleccionar un jugador", new { @id = @Model.JugadorPrevia.AliasJugador, @competicion=competicion, @previousValue = jugadorYaCambiado, @equipo=equipo, @class = "form-control", @onchange = "JugadorChange(this.value,this.id, this)", @style = styleCambio}));

#line default
#line hidden
            EndContext();
#line 64 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
                                                                                                                                                                                                                                                                                                                                         
    }
    else
    {
        

#line default
#line hidden
            BeginContext(3804, 342, false);
#line 68 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
   Write(Html.DropDownListFor(m => Model.JugadorCambio.AliasJugador, lista, "Seleccionar un jugador", new { @id = @Model.JugadorPrevia.AliasJugador, @competicion=competicion, @previousValue = jugadorYaCambiado, @equipo=equipo, @class = "form-control", @onchange = "JugadorChange(this.value,this.id, this)", @style = styleCambio,@disabled="disabled" }));

#line default
#line hidden
            EndContext();
#line 68 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
                                                                                                                                                                                                                                                                                                                                                               
    }
    

#line default
#line hidden
#line 70 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
     if (eliminar)
    {

#line default
#line hidden
            BeginContext(4182, 10, true);
            WriteLiteral("        <a");
            EndContext();
            BeginWriteAttribute("href", " href=\'", 4192, "\'", 4383, 1);
#line 72 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
WriteAttributeValue("", 4199, Url.Action("CancelChange", "EntrenadorC", new { equipo=@equipo, competicion=@competicion, jugador = Model.JugadorCambio.AliasJugador, jugadorCambio=Model.JugadorPrevia.AliasJugador }), 4199, 184, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4384, 127, true);
            WriteLiteral(" style=\"color:yellow\">\r\n            <i class=\"fas fa-trash-alt\"></i>\r\n            <span class=\"sr-only\"></span>\r\n        </a>\r\n");
            EndContext();
#line 76 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
    }

#line default
#line hidden
#line 76 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ENTRENADORC\_jugadorAlineacion.cshtml"
     
}

#line default
#line hidden
            BeginContext(4521, 1804, true);
            WriteLiteral(@"<script type=""text/javascript"" charset=""utf-8"">
    function JugadorChange(jugadorCambio, jugador, selectCtrl) {
        showSpinner();
        var prevVal = $(selectCtrl).attr('previousValue');
        if (prevVal !== 'undefined') { jugador = prevVal; }
        var equipo = $(selectCtrl).attr('equipo');
        var competicion = $(selectCtrl).attr('competicion');

        //alert(competicion);
        var r = true; // confirm(""¿Está seguro de cambiar ""+jugador+"" por ""+jugadorCambio+""?"");
        if (r == true) {
            
            const infoCambioJugador = {
                Equipo: equipo,
                Competicion: competicion,
                Jugador: jugador,
                JugadorCambio: jugadorCambio
            };
            var urlToCall = '/ENTRENADORC/CambioJugador';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(infoCambioJugador),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",");
            WriteLiteral(@"
                processData: true,
                cache: false,
                dataType:'json',
                error: function () {
                    alert(""Error al realizar el cambio de jugador"");
                    hideSpinner();
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
                }
                if (!response.result) {
                    $(selectCtrl).val(jugador);
                }
                hideSpinner();
            });
        }
    }
function showSpinner() {
    document.body.style.cursor = 'wait';
}
function hideSpinner() {
    document.body.style.cursor = 'arrow';
}
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public LigamaniaCoreApp.Services.ILigamaniaService ligamaniaService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LigamaniaCoreApp.Models.EntrenadorViewModels.InfoAlineacion> Html { get; private set; }
    }
}
#pragma warning restore 1591
