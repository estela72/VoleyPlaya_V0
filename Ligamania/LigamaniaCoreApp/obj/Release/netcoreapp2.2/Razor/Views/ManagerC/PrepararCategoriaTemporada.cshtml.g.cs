#pragma checksum "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2b7e2b51d62e422d1c25986368c67c5e1cb79b86"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ManagerC_PrepararCategoriaTemporada), @"mvc.1.0.view", @"/Views/ManagerC/PrepararCategoriaTemporada.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ManagerC/PrepararCategoriaTemporada.cshtml", typeof(AspNetCore.Views_ManagerC_PrepararCategoriaTemporada))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp;

#line default
#line hidden
#line 4 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models;

#line default
#line hidden
#line 5 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.AccountViewModels;

#line default
#line hidden
#line 6 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.ManageViewModels;

#line default
#line hidden
#line 7 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model;

#line default
#line hidden
#line 8 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Services;

#line default
#line hidden
#line 11 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using NonFactors.Mvc.Grid;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
using LigamaniaCoreApp.Models.ManagerViewModels;

#line default
#line hidden
#line 4 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
using LigamaniaCoreApp.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2b7e2b51d62e422d1c25986368c67c5e1cb79b86", @"/Views/ManagerC/PrepararCategoriaTemporada.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1653bea22581b35930f70d9de4acba1f76fe3e61", @"/Views/_ViewImports.cshtml")]
    public class Views_ManagerC_PrepararCategoriaTemporada : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<TemporadaCompeticionCategoriaViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("flex-container"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:1025px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(70, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 6 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
  
    ViewData["Title"] = "Preparar categoría";
    var competiciones = await ligamaniaService.GetAllCompeticiones();
    var equiposSinCategoria = await ligamaniaService.GetEquiposSinCategoria(Model.Competicion);
    var calendarios = await ligamaniaService.GetCalendarios();
    var equipos = await ligamaniaService.GetEquiposTemporadaActual(Model.Competicion);

#line default
#line hidden
            BeginContext(573, 143, true);
            WriteLiteral("    <div class=\"flex-container\">\r\n        <div class=\"card flex-item-bold-center\">\r\n            <div class=\"card-header\">\r\n                <h3>");
            EndContext();
            BeginContext(717, 17, false);
#line 16 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
               Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(734, 3, true);
            WriteLiteral(" - ");
            EndContext();
            BeginContext(738, 15, false);
#line 16 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(753, 419, true);
            WriteLiteral(@"</h3>
            </div>
            <div class=""card-body"">
                <div class=""input-group mb-3"">
                    <div class=""input-group-prepend"">
                        <span class=""input-group-text"" id=""basic-addon1"">Se permite repetir club en alineación:</span>
                    </div>
                    <span class=""input-group-text text-lg-center text-danger"" style=""font-weight:bold;"">");
            EndContext();
            BeginContext(1173, 13, false);
#line 23 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                   Write(Model.Repetir);

#line default
#line hidden
            EndContext();
            BeginContext(1186, 33, true);
            WriteLiteral("</span>\r\n                </div>\r\n");
            EndContext();
#line 25 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                  
                    if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Copa)
                    {

#line default
#line hidden
            BeginContext(1360, 384, true);
            WriteLiteral(@"                        <div class=""input-group mb-3"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Copiar alineación inicial: </span>
                            </div>
                            <span class=""input-group-text text-lg-center text-danger"" style=""font-weight:bold;"">");
            EndContext();
            BeginContext(1745, 18, false);
#line 32 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                           Write(Model.CopiarAliIni);

#line default
#line hidden
            EndContext();
            BeginContext(1763, 424, true);
            WriteLiteral(@"</span>
                        </div>
                        <div class=""input-group mb-3"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Copiar de la competición: </span>
                            </div>
                            <span class=""input-group-text text-lg-center text-danger"" style=""font-weight:bold;"">");
            EndContext();
            BeginContext(2188, 29, false);
#line 38 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                           Write(Model.CompeticionCopiarAliIni);

#line default
#line hidden
            EndContext();
            BeginContext(2217, 453, true);
            WriteLiteral(@"</span>
                        </div>
                        <div class=""input-group mb-3"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Jornada de la Liga para establecer equipos del cuadro: </span>
                            </div>
                            <span class=""input-group-text text-lg-center text-danger"" style=""font-weight:bold;"">");
            EndContext();
            BeginContext(2671, 19, false);
#line 44 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                           Write(Model.JornadaCuadro);

#line default
#line hidden
            EndContext();
            BeginContext(2690, 41, true);
            WriteLiteral("</span>\r\n                        </div>\r\n");
            EndContext();
#line 46 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    }
                    else if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Liga)
                    {

#line default
#line hidden
            BeginContext(2880, 377, true);
            WriteLiteral(@"                        <div class=""input-group mb-3"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Nº de cambios fijos:</span>
                            </div>
                            <span class=""input-group-text text-lg-center text-danger"" style=""font-weight:bold;"">");
            EndContext();
            BeginContext(3258, 18, false);
#line 53 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                           Write(Model.CambiosFijos);

#line default
#line hidden
            EndContext();
            BeginContext(3276, 424, true);
            WriteLiteral(@"</span>
                        </div>
                        <div class=""input-group mb-3"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Pichichi en clasificación:</span>
                            </div>
                            <span class=""input-group-text text-lg-center text-danger"" style=""font-weight:bold;"">");
            EndContext();
            BeginContext(3701, 14, false);
#line 59 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                           Write(Model.Pichichi);

#line default
#line hidden
            EndContext();
            BeginContext(3715, 453, true);
            WriteLiteral(@"</span>
                        </div>
                        <div class=""input-group mb-3"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Nº máximo veces alineado un jugador para ser eliminado:</span>
                            </div>
                            <span class=""input-group-text text-lg-center text-danger"" style=""font-weight:bold;"">");
            EndContext();
            BeginContext(4169, 23, false);
#line 65 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                           Write(Model.NumMaxJugEliminar);

#line default
#line hidden
            EndContext();
            BeginContext(4192, 41, true);
            WriteLiteral("</span>\r\n                        </div>\r\n");
            EndContext();
#line 67 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    }
                

#line default
#line hidden
            BeginContext(4275, 38, true);
            WriteLiteral("            </div>\r\n        </div>\r\n\r\n");
            EndContext();
#line 72 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
         if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Copa)
        {

#line default
#line hidden
            BeginContext(4411, 329, true);
            WriteLiteral(@"            <div class=""card flex-item-bold-center"">
                <div class=""card-header"">
                    <h3>Cuadro de Copa</h3>
                </div>
                <div class=""card-body"">
                    <div id=""grid-cuadro"" class=""mvc-grid"" data-name="""" data-filter-mode=""FilterRow"" data-source-url="""">
");
            EndContext();
            BeginContext(4798, 1407, false);
#line 81 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Html
                                .Grid(Model.Cuadro.OrderBy(e => e.Ronda).ThenBy(e => e.NumPartido).ToList())
                                .Build(columns =>
                                {
                                    columns.Add(model => model.Ronda).Titled("Ronda");
                                    columns.Add(model => model.NumPartido).Titled("NumPartido");
                                    columns.Add(model => model.EquipoA).Titled("EquipoA");
                                    columns.Add(model => model.EquipoB).Titled("EquipoB");
//                                    columns.Add(model => $"<button type='button' class='btn btn-primary' onclick='bajaEquipo(\"{model.Equipo}\")' id='bajaEquipoButton'>Borrar</button>").Encoded(false);
                                })
                                .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                                .WithFilterMode(GridFilterMode.FilterRow)
                                .Empty("No hay cuadro")
                                .Id("ajax-grid-cuadro")
                                .Pageable(pager =>
                                {
                                    pager.RowsPerPage = 10;
                                })
                                .Filterable()
                                .Sortable()
                            );

#line default
#line hidden
            EndContext();
            BeginContext(6235, 72, true);
            WriteLiteral("                    </div>\r\n                </div>\r\n            </div>\r\n");
            EndContext();
#line 106 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
        }

#line default
#line hidden
            BeginContext(6318, 120, true);
            WriteLiteral("\r\n        <div class=\"card flex-item-bold-center\">\r\n            <div class=\"card-header\">\r\n                <h3>Equipos (");
            EndContext();
            BeginContext(6439, 19, false);
#line 110 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Model.Equipos.Count);

#line default
#line hidden
            EndContext();
            BeginContext(6458, 184, true);
            WriteLiteral(")</h3>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div id=\"grid-equipos\" class=\"mvc-grid\" data-name=\"\" data-filter-mode=\"FilterRow\" data-source-url=\"\">\r\n");
            EndContext();
            BeginContext(6692, 1034, false);
#line 115 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Html
                            .Grid(Model.Equipos.OrderBy(e => e.Equipo).ToList())
                            .Build(columns =>
                            {
                                columns.Add(model => model.Equipo).Titled("Equipo");
                                columns.Add(model => $"<button type='button' class='btn btn-primary' onclick='bajaEquipo(\"{model.Equipo}\")' id='bajaEquipoButton'>Borrar</button>").Encoded(false);
                            })
                            .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                            .WithFilterMode(GridFilterMode.FilterRow)
                            .Empty("No hay equipos")
                            .Id("ajax-grid-equipos")
                            .Pageable(pager =>
                            {
                                pager.RowsPerPage = 5;
                            })
                            .Filterable()
                            .Sortable()
                        );

#line default
#line hidden
            EndContext();
            BeginContext(7752, 83, true);
            WriteLiteral("                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n");
            EndContext();
#line 137 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                 if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Liga)
                {

#line default
#line hidden
            BeginContext(7949, 393, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Copiar equipos de:</span>
                            </div>
                            ");
            EndContext();
            BeginContext(8343, 135, false);
#line 144 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                       Write(Html.DropDownList("competicionCopiarEquipos", competiciones, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(8478, 427, true);
            WriteLiteral(@"
                            <button type=""button"" class=""btn btn-primary"" id=""copiarEquipos"">Copiar</button>
                        </div>
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Agregar equipo:</span>
                            </div>
                            ");
            EndContext();
            BeginContext(8906, 131, false);
#line 151 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                       Write(Html.DropDownList("equipoSelected", equiposSinCategoria, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(9037, 173, true);
            WriteLiteral("\r\n                            <button type=\"button\" class=\"btn btn-primary\" id=\"agregarEquipo\">Agregar</button>\r\n                        </div>\r\n                    </div>\r\n");
            EndContext();
#line 155 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }
                else if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Copa)
                {

#line default
#line hidden
            BeginContext(9347, 333, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Equipos según cuadro y jornada ");
            EndContext();
            BeginContext(9681, 19, false);
#line 161 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                                                                                           Write(Model.JornadaCuadro);

#line default
#line hidden
            EndContext();
            BeginContext(9700, 235, true);
            WriteLiteral(" de Liga</span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-primary\" id=\"establecerEquiposCopa\">Establecer</button>\r\n                        </div>\r\n                    </div>\r\n");
            EndContext();
#line 166 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }
                else if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Supercopa)
                {

#line default
#line hidden
            BeginContext(10077, 519, true);
            WriteLiteral(@"                    <button type=""button"" class=""btn btn-primary"" id=""agregarEquiposSupercopa"">Agregar automáticamente</button>
                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Agregar equipo:</span>
                            </div>
                            ");
            EndContext();
            BeginContext(10597, 131, false);
#line 175 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                       Write(Html.DropDownList("equipoSelected", equiposSinCategoria, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(10728, 173, true);
            WriteLiteral("\r\n                            <button type=\"button\" class=\"btn btn-primary\" id=\"agregarEquipo\">Agregar</button>\r\n                        </div>\r\n                    </div>\r\n");
            EndContext();
#line 179 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }
                else
                {

#line default
#line hidden
            BeginContext(10961, 390, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Agregar equipo:</span>
                            </div>
                            ");
            EndContext();
            BeginContext(11352, 131, false);
#line 187 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                       Write(Html.DropDownList("equipoSelected", equiposSinCategoria, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(11483, 173, true);
            WriteLiteral("\r\n                            <button type=\"button\" class=\"btn btn-primary\" id=\"agregarEquipo\">Agregar</button>\r\n                        </div>\r\n                    </div>\r\n");
            EndContext();
#line 191 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }

#line default
#line hidden
            BeginContext(11675, 36, true);
            WriteLiteral("            </div>\r\n        </div>\r\n");
            EndContext();
#line 194 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
         if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Copa)
        {

#line default
#line hidden
            BeginContext(11809, 361, true);
            WriteLiteral(@"            <div class=""card flex-item-bold-center"">
                <div class=""card-header"">
                    <h3>Cuadro de Copa con los equipos de la temporada</h3>
                </div>
                <div class=""card-body"">
                    <div id=""grid-cuadro"" class=""mvc-grid"" data-name="""" data-filter-mode=""FilterRow"" data-source-url="""">
");
            EndContext();
            BeginContext(12228, 1417, false);
#line 203 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Html
                                .Grid(Model.CuadroConEquipos.OrderBy(e => e.Ronda).ThenBy(e => e.NumPartido).ToList())
                                .Build(columns =>
                                {
                                    columns.Add(model => model.Ronda).Titled("Ronda");
                                    columns.Add(model => model.NumPartido).Titled("NumPartido");
                                    columns.Add(model => model.EquipoA).Titled("EquipoA");
                                    columns.Add(model => model.EquipoB).Titled("EquipoB");
//                                    columns.Add(model => $"<button type='button' class='btn btn-primary' onclick='bajaEquipo(\"{model.Equipo}\")' id='bajaEquipoButton'>Borrar</button>").Encoded(false);
                                })
                                .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                                .WithFilterMode(GridFilterMode.FilterRow)
                                .Empty("No hay cuadro")
                                .Id("ajax-grid-cuadro")
                                .Pageable(pager =>
                                {
                                    pager.RowsPerPage = 10;
                                })
                                .Filterable()
                                .Sortable()
                            );

#line default
#line hidden
            EndContext();
            BeginContext(13675, 72, true);
            WriteLiteral("                    </div>\r\n                </div>\r\n            </div>\r\n");
            EndContext();
#line 228 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
        }

#line default
#line hidden
#line 229 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
         if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Copa)
        {

#line default
#line hidden
            BeginContext(13856, 321, true);
            WriteLiteral(@"            <div class=""card flex-item-bold-center"">
                <div class=""card-header"">
                    <h3>Rondas</h3>
                </div>
                <div class=""card-body"">
                    <div id=""grid-rondas"" class=""mvc-grid"" data-name="""" data-filter-mode=""FilterRow"" data-source-url="""">
");
            EndContext();
            BeginContext(14235, 1240, false);
#line 238 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Html
                                .Grid(Model.Rondas.OrderBy(r => r.Ronda).ToList())
                                .Build(columns =>
                                {
                                    columns.Add(model => model.Ronda).Titled("Ronda");
                                    columns.Add(model => model.Final ? LigamaniaConst.SI : LigamaniaConst.NO).Titled("Ronda final");
                                    columns.Add(model => model.JornadaIda).Titled("Jornada Ida");
                                    columns.Add(model => model.JornadaVuelta).Titled("Jornada Vuelta");
                                })
                                .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                                .WithFilterMode(GridFilterMode.FilterRow)
                                .Empty("No hay rondas creadas")
                                .Id("ajax-grid-rondas")
                                .Pageable(pager =>
                                {
                                    pager.RowsPerPage = 10;
                                })
                                .Filterable()
                                .Sortable()
                            );

#line default
#line hidden
            EndContext();
            BeginContext(15505, 987, true);
            WriteLiteral(@"                    </div>
                </div>
                <div class=""card-footer"">
                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""form-group"">
                            <span class=""input-group-text"">Fecha de la primera jornada:</span>
                            <input type=""date"" class=""form-control datepicker"" id=""fechaRonda"">
                        </div>
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Agregar rondas y jornadas según cuadro</span>
                            </div>
                            <button type=""button"" class=""btn btn-primary"" id=""establecerRondasCopa"">Rondas y jornadas</button>
                        </div>
                    </div>
                </div>
            </div>
");
            EndContext();
#line 276 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
        }

#line default
#line hidden
            BeginContext(16503, 128, true);
            WriteLiteral("\r\n\r\n        <div class=\"card flex-item-bold-center\">\r\n            <div class=\"card-header\">\r\n                <h3>Jornadas</h3>\r\n");
            EndContext();
#line 282 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                 if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Liga)
                {

#line default
#line hidden
            BeginContext(16745, 124, true);
            WriteLiteral("                    <h4>Al menos añadir la primera jornada. Al agregar los partidos, se añadirán el resto de jornadas</h4>\r\n");
            EndContext();
#line 285 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }

#line default
#line hidden
            BeginContext(16888, 177, true);
            WriteLiteral("            </div>\r\n            <div class=\"card-body\">\r\n                <div id=\"grid-jornadas\" class=\"mvc-grid\" data-name=\"\" data-filter-mode=\"FilterRow\" data-source-url=\"\">\r\n");
            EndContext();
            BeginContext(17115, 2816, false);
#line 290 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Html
                            .Grid(Model.Jornadas.OrderBy(j => j.NumeroJornada).ToList())
                            .Build(columns =>
                            {
                                columns.Add(model => model.NumeroJornada).Titled("Nº Jornada");
                                columns.Add(model => model.Fecha).Titled("Fecha").Formatted("{0:d}");
                                columns.Add(model => $"<button type='button' class='btn btn-primary' " +
                                $"data-competicion=\"{model.Competicion}\" data-jornada=\"{model.NumeroJornada}\" data-fecha=\"{model.Fecha}\" " +
                                $"data-toggle='modal' data-target='#editJornadaModal'>Editar</button>").Encoded(false);
                                columns.Add(model => $"<button type='button' class='btn btn-primary' onclick='borraJornada(\"{model.NumeroJornada}\")' id='borraJornadaButton'>Borrar</button>").Encoded(false);
                                columns.Add(model => $"<button type='button' class='btn btn-primary' onclick='jornadaActual(\"{model.NumeroJornada}\")' id='jornadaActualButton'>Establecer como ACTUAL</button>").Encoded(false);
                                columns.Add(model => model.NumeroJornada > 1 ? $"<button type='button' class='btn btn-secondary' onclick='addDiasFecha(3, \"{model.NumeroJornada}\")' id='add3DiasButton'>Fecha anterior +3 días</button>" : null).Encoded(false);
                                columns.Add(model => model.NumeroJornada > 1 ? $"<button type='button' class='btn btn-secondary' onclick='addDiasFecha(4, \"{model.NumeroJornada}\")' id='add4DiasButton'>Fecha anterior +4 días</button>" : null).Encoded(false);
                                columns.Add(model => model.NumeroJornada > 1 ? $"<button type='button' class='btn btn-secondary' onclick='addDiasFecha(7, \"{model.NumeroJornada}\")' id='add7DiasButton'>Fecha anterior +7 días</button>" : null).Encoded(false);
                                columns.Add(model => model.NumeroJornada > 1 ? $"<button type='button' class='btn btn-secondary' onclick='addDiasFecha(14, \"{model.NumeroJornada}\")' id='add14DiasButton'>Fecha anterior +14 días</button>" : null).Encoded(false);
                            })
                            .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                            .WithFilterMode(GridFilterMode.FilterRow)
                            .Empty("No hay jornadas")
                            .Id("ajax-grid-jornadas")
                            .Pageable(pager =>
                            {
                                pager.RowsPerPage = 10;
                            })
                            .Filterable()
                            .Sortable()
                        );

#line default
#line hidden
            EndContext();
            BeginContext(19957, 83, true);
            WriteLiteral("                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n");
            EndContext();
#line 321 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                 if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Copa)
                {

#line default
#line hidden
            BeginContext(20154, 750, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""form-group"">
                            <span class=""input-group-text"">Agregar nueva jornada en la última ronda (con los mismos equipos de la última ronda)</span>
                            <span class=""input-group-text"">Fecha:</span>
                            <input type=""date"" class=""form-control datepicker"" id=""fechaNuevaJornada"">
                        </div>
                        <div class=""input-group"">
                            <button type=""button"" class=""btn btn-primary"" id=""nuevaJornadaCopa"">Nueva jornada</button>
                        </div>
                    </div>
");
            EndContext();
#line 333 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }
                else
                {

#line default
#line hidden
            BeginContext(20964, 772, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""form-group"">
                            <span class=""input-group-text"">Fecha:</span>
                            <input type=""date"" class=""form-control datepicker"" id=""fecha"">
                        </div>

                        <div class=""input-group-mb3"">
                            <span class=""input-group-text"" id=""basic-addon1"">Jornada nº:</span>
                            <input type=""number"" class=""form-control"" id=""numerojornada"">
                        </div>
                        <button type=""button"" class=""btn btn-primary"" id=""addJornada"">Agregar jornada</button>
                    </div>
");
            EndContext();
#line 348 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }

#line default
#line hidden
            BeginContext(21755, 601, true);
            WriteLiteral(@"                <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                    <button type=""button"" class=""btn btn-primary"" id=""removeJornadas"">Eliminar todas las jornadas</button>
                </div>
            </div>
        </div>
        <div class=""card flex-item-bold-center"">
            <div class=""card-header"">
                <h3>Calendario y Partidos</h3>
            </div>
            <div class=""card-body"">
                <div id=""grid-partidos"" class=""mvc-grid"" data-name="""" data-filter-mode=""FilterRow"" data-source-url="""">
");
            EndContext();
            BeginContext(22406, 1326, false);
#line 361 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Html
                            .Grid(Model.Partidos.OrderBy(p=>p.Jornada).ThenBy(p => p.NumeroPartido).ToList())
                                .Build(columns =>
                                 {
                                     columns.Add(model => model.Jornada).Titled("Nº Jornada");
                                     columns.Add(model => model.NumeroPartido).Titled("Nº Partido");
                                     columns.Add(model => model.Fecha).Titled("Fecha").Formatted("{0:d}");
                                     columns.Add(model => model.EquipoA).Titled("Local");
                                     columns.Add(model => model.EquipoB).Titled("Visitante");
                                 })
                                .Css("mvc-grid-medium") // Overwrites all classes with the new ones
                                .Empty("No hay jornadas")
                                .Id("ajax-grid-jornadas")
                                .Pageable(pager =>
                                {
                                    pager.RowsPerPage = 9;
                                })
                                .WithFilterMode(GridFilterMode.FilterRow)
                                .Filterable()
                                .Sortable()
                        );

#line default
#line hidden
            EndContext();
            BeginContext(23758, 83, true);
            WriteLiteral("                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n");
            EndContext();
#line 386 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                 if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Supercopa)
                {

#line default
#line hidden
            BeginContext(23960, 813, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""form-group"">
                            <span class=""input-group-text"">Una vez agregada la jornada en el paso anterior, seleccionar la jornada para la que se quiere agregar el partido</span>
                            <span class=""input-group-text"" id=""basic-addon1"">Jornada nº:</span>
                            <input type=""number"" class=""form-control"" id=""numerojornadaPartidoSupercopa"">
                        </div>
                        <div class=""input-group"">
                            <button type=""button"" class=""btn btn-primary"" id=""agregarPartidoSupercopa"">Agregar partido</button>
                        </div>
                    </div>
");
            EndContext();
#line 398 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }
                else if (Model.Tipo == LigamaniaCoreApp.Data.LigamaniaEnum.eTipoCompeticion.Liga)
                {

#line default
#line hidden
            BeginContext(24910, 406, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Seleccionar tipo de calendario:</span>
                            </div>
                            ");
            EndContext();
            BeginContext(25317, 127, false);
#line 406 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                       Write(Html.DropDownList("calendarioSelected", calendarios, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(25444, 184, true);
            WriteLiteral("\r\n                            <button type=\"button\" class=\"btn btn-primary\" id=\"generarPartidos\">Generar partidos</button>\r\n                        </div>\r\n                    </div>\r\n");
            EndContext();
#line 410 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }
                else if (Model.Tipo == LigamaniaEnum.eTipoCompeticion.Copa)
                {

#line default
#line hidden
            BeginContext(25743, 732, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""form-group"">
                            <span class=""input-group-text"">Seleccionar ronda para generar los partidos (jornadas de Ida y Vuelta)</span>
                            <span class=""input-group-text"">Ronda nº:</span>
                            <input type=""number"" class=""form-control"" id=""rondaPartidos"">
                        </div>
                        <div class=""input-group"">
                            <button type=""button"" class=""btn btn-primary"" id=""agregarPartidosCopa"">Agregar partidos</button>
                        </div>
                    </div>
");
            EndContext();
#line 423 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }
                else
                {

#line default
#line hidden
            BeginContext(26535, 413, true);
            WriteLiteral(@"                    <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <span class=""input-group-text"" id=""basic-addon1"">Seleccionar equipos local y visitante:</span>
                            </div>
                            ");
            EndContext();
            BeginContext(26949, 118, false);
#line 431 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                       Write(Html.DropDownList("localSelected", equipos, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(27067, 30, true);
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(27098, 122, false);
#line 432 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                       Write(Html.DropDownList("visitanteSelected", equipos, "Seleccionar...", new { @class = "custom-select", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(27220, 355, true);
            WriteLiteral(@"
                            <span class=""input-group-text"">Jornada nº:</span>
                            <input type=""number"" class=""form-control"" id=""jornadaPartido"">
                            <button type=""button"" class=""btn btn-primary"" id=""btGenerarPartido"">Generar partido</button>
                        </div>
                    </div>
");
            EndContext();
#line 438 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                }

#line default
#line hidden
            BeginContext(27594, 955, true);
            WriteLiteral(@"                <div class=""btn-toolbar mb-3"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                    <button type=""button"" class=""btn btn-primary"" id=""removePartidos"">Eliminar todos los partidos</button>
                </div>
            </div>
        </div>
    </div>

<div class=""modal fade"" id=""editJornadaModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""editJornadaModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"" style=""width:1025px;"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""editJornadaModalLabel"">Editando...</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(28549, 822, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2b7e2b51d62e422d1c25986368c67c5e1cb79b8649868", async() => {
                BeginContext(28600, 764, true);
                WriteLiteral(@"
                    <div class=""form-group"">
                        <span class=""input-group-text"">Competición:</span>
                        <input type=""text"" class=""form-control"" id=""competicionModal"" readonly>
                    </div>
                    <div class=""form-group"">
                        <span class=""input-group-text"" id=""basic-addon1"">Jornada nº:</span>
                        <input type=""number"" class=""form-control"" id=""jornadaModal"" readonly>
                    </div>
                    <div class=""form-group"">
                        <span class=""input-group-text"">Fecha:</span>
                        <input type=""date"" class=""form-control datepicker"" id=""fechaModal"">
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(29371, 754, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-save=""modal-edit"">Guardar</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script type=""text/javascript"">
    $(function () {
        $("".datepicker"").datepicker({
            dateFormat: ""dd/mm/yy""
        });
        $.datepicker.setDefaults($.datepicker.regional[""es""]);
    });
</script>

<script type=""text/javascript"">
    $('#addJornada').on('click', function (event) {
        var fecha = $('#fecha').val();
        var jornada = $('#numerojornada').val();
        var categoria = """);
            EndContext();
            BeginContext(30126, 15, false);
#line 492 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(30141, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(30180, 17, false);
#line 493 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(30197, 1375, true);
            WriteLiteral(@""";
        var r = confirm(""¿Está seguro de agregar la jornada: "" + jornada + "". Fecha "" + fecha+ ""?"");
        if (r == true) {
            const jornadaInfo = {
                Fecha: fecha,
                Jornada: jornada,
                CompeticionDestino: competicionDestino,
                Categoria: categoria
            };
            var urlToCall = '/MANAGERC/AgregarJornada';
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify(jornadaInfo),
                    url: urlToCall,
                    contentType: ""application/json; charset=utf-8"",
                    processData: true,
                    cache: false,
                    dataType: 'json',
                    error: function () {
                        alert(""Error al agregar jornada"" + categoria);
                    }
                }).done(function (response) {
                    if (response.result) {
                        alert(response.message);
        ");
            WriteLiteral(@"                location.reload();
                    }
                    else {
                        alert(response.message);
                    }
                });
            }
    });
    $('#copiarEquipos').on('click', function (event) {
        var competicion = $('#competicionCopiarEquipos').val();
        var categoria = """);
            EndContext();
            BeginContext(31573, 15, false);
#line 527 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(31588, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(31627, 17, false);
#line 528 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(31644, 1496, true);
            WriteLiteral(@""";

        if (competicion != '') {
            var r = confirm(""¿Está seguro de querer COPIAR LOS EQUIPOS de: "" + competicion + ""-"" + categoria + "" a "" + competicionDestino + ""?"");
            if (r == true) {
                const compCat = {
                    CompeticionOrigen: competicion,
                    CompeticionDestino: competicionDestino,
                    Categoria: categoria
                };
                var urlToCall = '/MANAGERC/CopiarEquipos';
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify(compCat),
                    url: urlToCall,
                    contentType: ""application/json; charset=utf-8"",
                    processData: true,
                    cache: false,
                    dataType: 'json',
                    error: function () {
                        alert(""Error al copiar equipos"" + categoria);
                    }
                }).done(function (response) {
                    ");
            WriteLiteral(@"if (response.result) {
                        alert(response.message);
                        location.reload();
                    }
                    else {
                        alert(response.message);
                    }
                });
            }
        }
        else {
            alert('Debe seleccionar una competición');
        }
    });

    $('#establecerEquiposCopa').on('click', function (event) {
        var categoria = """);
            EndContext();
            BeginContext(33141, 15, false);
#line 567 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(33156, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(33195, 17, false);
#line 568 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(33212, 33, true);
            WriteLiteral("\";\r\n        var jornadaCuadro = \"");
            EndContext();
            BeginContext(33246, 19, false);
#line 569 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Model.JornadaCuadro);

#line default
#line hidden
            EndContext();
            BeginContext(33265, 1244, true);
            WriteLiteral(@""";

        var r = confirm(""¿Está seguro de querer ESTABLECER LOS EQUIPOS de COPA según la jornada "" + jornadaCuadro + ""?"");
        if (r == true) {
            const compCat = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria
            };
            var urlToCall = '/MANAGERC/EstablecerEquiposCopa';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(compCat),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert(""Error al establecer equipos de Copa"" + categoria);
                }
            }).done(function (response) {
                if (response.result) {
                    alert(response.message);
                    location.reload();
                }
                else {
              ");
            WriteLiteral("      alert(response.message);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    $(\'#establecerRondasCopa\').on(\'click\', function(event) {\r\n        var fecha = $(\'#fechaRonda\').val();\r\n        var categoria = \"");
            EndContext();
            BeginContext(34510, 15, false);
#line 602 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(34525, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(34564, 17, false);
#line 603 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(34581, 1551, true);
            WriteLiteral(@""";
        //alert(equipo);
        if (fecha != '') {
            var r = confirm(""¿Está seguro de querer las rondas y jornadas según el cuadro de Copa?"");
            if (r == true) {
                const compCat = {
                    Fecha: fecha,
                    CompeticionDestino: competicionDestino,
                    Categoria: categoria
                };
                var urlToCall = '/MANAGERC/EstablecerRondasJornadasCopa';
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify(compCat),
                    url: urlToCall,
                    contentType: ""application/json; charset=utf-8"",
                    processData: true,
                    cache: false,
                    dataType: 'json',
                    error: function () {
                        alert(""Error al establecer rondas y jornadas de Copa"" + categoria);
                    }
                }).done(function (response) {
                    if (res");
            WriteLiteral(@"ponse.result) {
                        alert(response.message);
                        location.reload();
                    }
                    else {
                        alert(response.message);
                    }
                });
            }
        }
        else {
            alert('Debe poner la fecha de la primera jornada de Copa');
        }
    });
    $('#nuevaJornadaCopa').on('click', function (event) {
        var fecha = $('#fechaNuevaJornada').val();
        var categoria = """);
            EndContext();
            BeginContext(36133, 15, false);
#line 642 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(36148, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(36187, 17, false);
#line 643 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(36204, 1559, true);
            WriteLiteral(@""";

        if (fecha != ' ') {
            var r = confirm(""¿Está seguro de agregar una nueva jornada a la última ronda en la fecha seleccionada?"");
            if (r == true) {
                const jornadaInfo = {
                    Fecha: fecha,
                    CompeticionDestino: competicionDestino,
                    Categoria: categoria
                };
                var urlToCall = '/MANAGERC/NuevaJornadaFinalCopa';
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify(jornadaInfo),
                    url: urlToCall,
                    contentType: ""application/json; charset=utf-8"",
                    processData: true,
                    cache: false,
                    dataType: 'json',
                    error: function () {
                        alert(""Error al agregar nueva jornada en la última ronda de copa"" + categoria);
                    }
                }).done(function (response) {
                    i");
            WriteLiteral(@"f (response.result) {
                        alert(response.message);
                        location.reload();
                    }
                    else {
                        alert(response.message);
                    }
                });
            }
        }
        else {
            alert(""Debe seleccionar una fecha para agregar una nueva jornada"");
        }
    });
    $('#agregarEquipo').on('click', function(event) {
        var equipo = $('#equipoSelected').val();
        var categoria = """);
            EndContext();
            BeginContext(37764, 15, false);
#line 682 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(37779, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(37818, 17, false);
#line 683 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(37835, 1487, true);
            WriteLiteral(@""";
        //alert(equipo);
        if (equipo != '') {
            var r = confirm(""¿Está seguro de querer AGREGAR el equipo "" + equipo + ""?"");
            if (r == true) {
                const compCat = {
                    Equipo: equipo,
                    CompeticionDestino: competicionDestino,
                    Categoria: categoria
                };
                var urlToCall = '/MANAGERC/AgregarEquipo';
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify(compCat),
                    url: urlToCall,
                    contentType: ""application/json; charset=utf-8"",
                    processData: true,
                    cache: false,
                    dataType: 'json',
                    error: function () {
                        alert(""Error al agregar equipos"" + categoria);
                    }
                }).done(function (response) {
                    if (response.result) {
                        alert");
            WriteLiteral(@"(response.message);
                        location.reload();
                    }
                    else {
                        alert(response.message);
                    }
                });
            }
        }
        else {
            alert('Debe seleccionar un equipo');
        }
    });
    $('#generarPartidos').on('click', function (event) {
        var calendario = $('#calendarioSelected').val();
        var categoria = """);
            EndContext();
            BeginContext(39323, 15, false);
#line 722 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(39338, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(39377, 17, false);
#line 723 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(39394, 1504, true);
            WriteLiteral(@""";

        if (calendario != '') {
            var r = confirm(""¿Está seguro de querer GENERAR LOS PARTIDOS a partir del calendario ""+calendario+""?"");
            if (r == true) {
                const partidos = {
                    CompeticionDestino: competicionDestino,
                    Categoria: categoria,
                    Calendario: calendario
                };
                var urlToCall = '/MANAGERC/GenerarPartidos';
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify(partidos),
                    url: urlToCall,
                    contentType: ""application/json; charset=utf-8"",
                    processData: true,
                    cache: false,
                    dataType: 'json',
                    error: function () {
                        alert(""Error al generar partidos"" + categoria);
                    }
                }).done(function (response) {
                    alert(response.message);
       ");
            WriteLiteral(@"             if (response.result) {
                        location.reload();
                    }
                });
            }
        }
        else {
            alert('Debe seleccionar un calendario');
        }
    });
    $('#btGenerarPartido').on('click', function (event) {
        var local = $('#localSelected').val();
        var visitante = $('#visitanteSelected').val();
        var jornada = $('#jornadaPartido').val();
        var categoria = """);
            EndContext();
            BeginContext(40899, 15, false);
#line 761 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(40914, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(40953, 17, false);
#line 762 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(40970, 1515, true);
            WriteLiteral(@""";

        if (local != '' && visitante != '' && jornada != '') {
            var r = confirm(""¿Está seguro de querer GENERAR EL PARTIDO entre los equipos ""+local+"" y "" + visitante+"" para la jornada ""+jornada+""?"");
            if (r == true) {
                const partidos = {
                    CompeticionDestino: competicionDestino,
                    Categoria: categoria,
                    Local: local,
                    Visitante: visitante,
                    Jornada: jornada
                };
                var urlToCall = '/MANAGERC/GenerarPartidoLibre';
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify(partidos),
                    url: urlToCall,
                    contentType: ""application/json; charset=utf-8"",
                    processData: true,
                    cache: false,
                    dataType: 'json',
                    error: function () {
                        alert(""Error al generar partido""");
            WriteLiteral(@" + categoria);
                    }
                }).done(function (response) {
                    alert(response.message);
                    if (response.result) {
                        location.reload();
                    }
                });
            }
        }
        else {
            alert('Debe seleccionar equipo local, equipo visitante y jornada');
        }
    });

    $('#removeJornadas').on('click', function (event) {
        var categoria = """);
            EndContext();
            BeginContext(42486, 15, false);
#line 800 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(42501, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(42540, 17, false);
#line 801 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(42557, 1065, true);
            WriteLiteral(@""";

        var r = confirm(""¿Está seguro de querer ELIMINAR TODAS LAS JORNADAS?"");
        if (r == true) {
            const compCat = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria
            };
            var urlToCall = '/MANAGERC/RemoveAllJornadas';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(compCat),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert(""Error al eliminar todas las jornadas"" + categoria);
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
                }
            });
        }
    });
    $('#agregarEquiposSupercopa').on('click', func");
            WriteLiteral("tion (event) {\r\n        var categoria = \"");
            EndContext();
            BeginContext(43623, 15, false);
#line 830 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(43638, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(43677, 17, false);
#line 831 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(43694, 1132, true);
            WriteLiteral(@""";

        var r = confirm(""Se agregarán los equipos ganadores de Liga y Copa de la temporada anterior. Se podrán modificar a posteriori. ¿Está seguro?"");
        if (r == true) {
            const compCat = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria
            };
            var urlToCall = '/MANAGERC/AgregarEquiposSupercopa';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(compCat),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert(""Error al agregar equipos de Supercopa"");
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
                }
            });
   ");
            WriteLiteral("     }\r\n    });\r\n    $(\'#agregarPartidoSupercopa\').on(\'click\', function (event) {\r\n        var categoria = \"");
            EndContext();
            BeginContext(44827, 15, false);
#line 860 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(44842, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(44881, 17, false);
#line 861 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(44898, 1167, true);
            WriteLiteral(@""";
        var jornada = $('#numerojornadaPartidoSupercopa').val();
        var r = confirm(""Se agregará un partido en la jornada ""+jornada+"". ¿Está seguro?"");
        if (r == true) {
            const compCat = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria,
                Jornada: jornada
            };
            var urlToCall = '/MANAGERC/AgregarPartidoSupercopa';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(compCat),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert(""Error al agregar partido de Supercopa"");
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
");
            WriteLiteral("                }\r\n            });\r\n        }\r\n    });\r\n    $(\'#agregarPartidosCopa\').on(\'click\', function (event) {\r\n        var categoria = \"");
            EndContext();
            BeginContext(46066, 15, false);
#line 891 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(46081, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(46120, 17, false);
#line 892 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(46137, 1157, true);
            WriteLiteral(@""";
        var ronda = $('#rondaPartidos').val();
        var r = confirm(""Se agregarán los partidos correspondientes a la ronda ""+ronda+"" de Copa. ¿Está seguro?"");
        if (r == true) {
            const compCat = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria,
                Ronda: ronda
            };
            var urlToCall = '/MANAGERC/AgregarPartidosCopa';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(compCat),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert(""Error al agregar partidos de Copa"");
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
       ");
            WriteLiteral("         }\r\n            });\r\n        }\r\n    });\r\n\r\n    $(\'#removePartidos\').on(\'click\', function (event) {\r\n        var categoria = \"");
            EndContext();
            BeginContext(47295, 15, false);
#line 923 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(47310, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(47349, 17, false);
#line 924 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(47366, 3165, true);
            WriteLiteral(@""";

        var r = confirm(""¿Está seguro de querer ELIMINAR TODOS LOS PARTIDOS?"");
        if (r == true) {
            const compCat = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria
            };
            var urlToCall = '/MANAGERC/RemoveAllPartidos';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(compCat),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType: 'json',
                error: function () {
                    alert(""Error al eliminar todos los partidos"" + categoria);
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
                }
            });
        }
    });
    $('#editJornadaModal').on('show.bs.modal', fun");
            WriteLiteral(@"ction (event) {

        var button = $(event.relatedTarget) // Button that triggered the modal
        //alert(button);
        var competicion = button.data('competicion')
        var jornada = button.data('jornada')
        var fecha = button.data('fecha')
        //alert(competicion + jornada + fecha);
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        modal.find('.modal-title').text('Edición de jornada ' + jornada)
        modal.find('#competicionModal').val(competicion)
        modal.find('#jornadaModal').val(jornada)
        modal.find('#fechaModal').val(fecha);
    });
    $('#editJornadaModal').on('click', '[data-save=""modal-edit""]', function (event) {
        event.preventDefault();
        var competicion = $('#competicionModal').val();
        var jornada = $('#");
            WriteLiteral(@"jornadaModal').val();
        var fecha = $('#fechaModal').val();
        alert(competicion + jornada + fecha);
        var jornadaEditar = {
            CompeticionDestino: competicion,
            Jornada: jornada,
            Fecha: fecha
        };
        var urlToCall = '/MANAGERC/EditarJornada';
        $.ajax({
            type: ""POST"",
            data: JSON.stringify(jornadaEditar),
            url: urlToCall,
            contentType: ""application/json; charset=utf-8"",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function (response) {
                alert(""Error al guardar los datos"");
            }
        }).done(function (response) {
            alert(response.message);
            if (response.result) {
                $('#editJornadaModal').modal('hide');
                location.reload();
            }
        });
    });

    function bajaEquipo(elementid) {
        var r = confirm(""¿Está seguro de dar");
            WriteLiteral(" de baja el equipo \"+elementid+\"?\");\r\n        if (r == true) {\r\n            var categoria = \"");
            EndContext();
            BeginContext(50532, 15, false);
#line 1003 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(50547, 42, true);
            WriteLiteral("\";\r\n            var competicionDestino = \"");
            EndContext();
            BeginContext(50590, 17, false);
#line 1004 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                 Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(50607, 1044, true);
            WriteLiteral(@""";
            const equipo = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria,
                Equipo: elementid
            };
            var urlToCall = '/MANAGERC/BajaEquipo';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(equipo),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType:'json',
                error: function () {
                    alert(""Error al dar de baja un equipo"");
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
                }
            });
        }
    }
    function borraJornada(elementid) {
        var r = confirm(""¿Está seguro de borrar la jornada ""+elementid+""?"");
        if (r == true) {
         ");
            WriteLiteral("   var categoria = \"");
            EndContext();
            BeginContext(51652, 15, false);
#line 1033 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(51667, 42, true);
            WriteLiteral("\";\r\n            var competicionDestino = \"");
            EndContext();
            BeginContext(51710, 17, false);
#line 1034 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                 Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(51727, 1066, true);
            WriteLiteral(@""";

            const equipo = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria,
                Jornada: elementid
            };
            var urlToCall = '/MANAGERC/BorrarJornada';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(equipo),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType:'json',
                error: function () {
                    alert(""Error al dar de baja un equipo"");
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
                }
            });
        }
    }
    function jornadaActual(elementid) {
        var r = confirm(""¿Está seguro de querer hacer 'ACTUAL' la jornada ""+elementid+""?"");
        if (r");
            WriteLiteral(" == true) {\r\n            var categoria = \"");
            EndContext();
            BeginContext(52794, 15, false);
#line 1064 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                        Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(52809, 42, true);
            WriteLiteral("\";\r\n            var competicionDestino = \"");
            EndContext();
            BeginContext(52852, 17, false);
#line 1065 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                                 Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(52869, 960, true);
            WriteLiteral(@""";

            const equipo = {
                CompeticionDestino: competicionDestino,
                Categoria: categoria,
                Jornada: elementid
            };
            var urlToCall = '/MANAGERC/SetJornadaActual';
            $.ajax({
                type: ""POST"",
                data: JSON.stringify(equipo),
                url: urlToCall,
                contentType: ""application/json; charset=utf-8"",
                processData: true,
                cache: false,
                dataType:'json',
                error: function () {
                    alert(""Error al hacer una jornada actual"");
                }
            }).done(function (response) {
                alert(response.message);
                if (response.result) {
                    location.reload();
                }
            });
        }
    }
    function addDiasFecha(dias, jornadaAnterior) {
        var categoria = """);
            EndContext();
            BeginContext(53830, 15, false);
#line 1093 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                    Write(Model.Categoria);

#line default
#line hidden
            EndContext();
            BeginContext(53845, 38, true);
            WriteLiteral("\";\r\n        var competicionDestino = \"");
            EndContext();
            BeginContext(53884, 17, false);
#line 1094 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\ManagerC\PrepararCategoriaTemporada.cshtml"
                             Write(Model.Competicion);

#line default
#line hidden
            EndContext();
            BeginContext(53901, 874, true);
            WriteLiteral(@""";
        const jornadaAccion = {
            CompeticionDestino: competicionDestino,
            Categoria: categoria,
            Jornada: jornadaAnterior,
            Dias: dias
        };
        var urlToCall = '/MANAGERC/AddDiasJornada';
        $.ajax({
            type: ""POST"",
            data: JSON.stringify(jornadaAccion),
            url: urlToCall,
            contentType: ""application/json; charset=utf-8"",
            processData: true,
            cache: false,
            dataType:'json',
            error: function () {
                alert(""Error al establecer ""+dias+"" días más sobre la jornada ""+(jornadaAnterior-1));
            }
        }).done(function (response) {
            alert(response.message);
            if (response.result) {
                location.reload();
            }
        });

    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public LigamaniaCoreApp.Services.ILigamaniaService ligamaniaService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TemporadaCompeticionCategoriaViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
