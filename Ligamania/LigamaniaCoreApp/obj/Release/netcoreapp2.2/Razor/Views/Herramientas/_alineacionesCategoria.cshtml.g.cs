#pragma checksum "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cd7a7414463a01cbac044dacbdd51387e4c973b2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Herramientas__alineacionesCategoria), @"mvc.1.0.view", @"/Views/Herramientas/_alineacionesCategoria.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Herramientas/_alineacionesCategoria.cshtml", typeof(AspNetCore.Views_Herramientas__alineacionesCategoria))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp;

#line default
#line hidden
#line 4 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models;

#line default
#line hidden
#line 5 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.AccountViewModels;

#line default
#line hidden
#line 6 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Models.ManageViewModels;

#line default
#line hidden
#line 7 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Data.DataModels.Base.Ligamania.Model;

#line default
#line hidden
#line 8 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using LigamaniaCoreApp.Services;

#line default
#line hidden
#line 11 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\_ViewImports.cshtml"
using NonFactors.Mvc.Grid;

#line default
#line hidden
#line 2 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
using LigamaniaCoreApp.Models.HerramientasViewModels;

#line default
#line hidden
#line 3 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
using LigamaniaCoreApp.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cd7a7414463a01cbac044dacbdd51387e4c973b2", @"/Views/Herramientas/_alineacionesCategoria.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1653bea22581b35930f70d9de4acba1f76fe3e61", @"/Views/_ViewImports.cshtml")]
    public class Views_Herramientas__alineacionesCategoria : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(130, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
  
    var porteros = await _ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Portero);
    var defensas = await _ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Defensa);
    var medios = await _ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Medio);
    var delanteros = await _ligamaniaService.GetJugadoresPorPuestoTemporada(LigamaniaConst.Puesto_Delantero);

    var aliPreviasPorcategoria = ViewData["previas"] as List<AlineacionCompeticionJornadaViewModel>;
    var aliCambiosPorcategoria = ViewData["cambios"] as List<AlineacionCompeticionJornadaViewModel>;
    var aliActualPorcategoria = ViewData["actual"] as List<AlineacionCompeticionJornadaViewModel>;
    var categoria = ViewData["categoria"].ToString();
    var competicion = ViewData["competicion"].ToString();

    var categ = categoria.Split("-")[1].Trim();

    var selectListEquipos = await _ligamaniaService.GetEquiposTemporadaActual(competicion, categ);
    var listaEquipos = selectListEquipos.Select(l => l.Text).OrderBy(e => e).ToList();
    var aliPreviasPorequipo = new Dictionary<string, List<AlineacionCompeticionJornadaViewModel>>();
    var aliCambiosPorequipo = new Dictionary<string, List<AlineacionCompeticionJornadaViewModel>>();
    var aliActualPorequipo = new Dictionary<string, List<AlineacionCompeticionJornadaViewModel>>();
    if (Model != null)
    {
        if (aliPreviasPorcategoria != null)
        {
            aliPreviasPorequipo = aliPreviasPorcategoria.GroupBy(ap => ap.Equipo).ToDictionary(grp => grp.Key, grp => grp.ToList());
        }

        aliCambiosPorequipo = aliCambiosPorcategoria.GroupBy(ap => ap.Equipo).ToDictionary(grp => grp.Key, grp => grp.ToList());

        if (aliActualPorcategoria != null)
        {
            aliActualPorequipo = aliActualPorcategoria.GroupBy(ap => ap.Equipo).ToDictionary(grp => grp.Key, grp => grp.ToList());
        }
    }

#line default
#line hidden
            BeginContext(2104, 83, true);
            WriteLiteral("<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <div class=\"card-title\">");
            EndContext();
            BeginContext(2188, 9, false);
#line 41 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                           Write(categoria);

#line default
#line hidden
            EndContext();
            BeginContext(2197, 49, true);
            WriteLiteral("</div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n");
            EndContext();
#line 44 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
          var ind = 1; 

#line default
#line hidden
#line 45 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
         foreach (var equipo in listaEquipos)
        {
            var titlePrevia = equipo;
            var titleCambios = equipo;
            var titleActual = equipo;
            var previas = new List<AlineacionCompeticionJornadaViewModel>();
            var cambios = new List<AlineacionCompeticionJornadaViewModel>();
            var actual = new List<AlineacionCompeticionJornadaViewModel>();
            var stylePrevia = "color:green";
            var styleCambios = "color:green";
            var styleActual = "color:green";

            if (aliPreviasPorequipo.ContainsKey(equipo))
            {
                previas = aliPreviasPorequipo[equipo];
                titlePrevia = previas.Count + " jugadores en jornada anterior";
                if (previas.Count != 11) { stylePrevia = "color:red;font-weight:bold"; }
            }
            else
            {
                titlePrevia = "0 jugadores en jornada anterior";
                stylePrevia = "color:red;font-weight:bold";
            }
            if (aliCambiosPorequipo.ContainsKey(equipo))
            {
                cambios = aliCambiosPorequipo[equipo];
                titleCambios = cambios.Count + " jugadores en cambios";
                if (cambios.Count != 11) { styleCambios = "color:red;font-weight:bold"; }
            }
            else
            {
                titleCambios = "0 jugadores en cambios";
                styleCambios = "color:red;font-weight:bold";
            }
            if (aliActualPorequipo.ContainsKey(equipo))
            {
                actual = aliActualPorequipo[equipo];
                titleActual = actual.Count + " jugadores en jornada actual";
                if (actual.Count != 11) { styleActual = "color:red;font-weight:bold"; }
            }
            else
            {
                titleActual = "0 jugadores en jornada actual";
                styleActual = "color:red;font-weight:bold";
            }
            var diferenciasActual = actual.Select(a=>a.Jugador).Except(cambios.Select(c=>c.Jugador)).ToList();
            var diferenciasCambios = cambios.Select(a=>a.Jugador).Except(actual.Select(c=>c.Jugador)).ToList();
            if (diferenciasActual.Any())
            {
                titleActual += " - Existen " + diferenciasActual.Count + " diferencias entre cambios y alineación actual";
                styleActual = "color:red;font-weight:bold";
            }
            var styleEquipo = "color:blue;font-weight:bold";
            var collapse = "#collapse" + ind;
            var collapseControl = "collapse" + ind;

#line default
#line hidden
            BeginContext(4913, 215, true);
            WriteLiteral("            <div class=\"mvc-grid\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <span class=\"mvc-grid-larger\"");
            EndContext();
            BeginWriteAttribute("style", " style=", 5128, "", 5147, 1);
#line 105 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
WriteAttributeValue("", 5135, styleEquipo, 5135, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5147, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(5149, 3, false);
#line 105 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                            Write(ind);

#line default
#line hidden
            EndContext();
            BeginContext(5152, 139, true);
            WriteLiteral("</span>\r\n                            </th>\r\n                            <th>\r\n                                <span class=\"mvc-grid-larger\"");
            EndContext();
            BeginWriteAttribute("style", " style=", 5291, "", 5310, 1);
#line 108 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
WriteAttributeValue("", 5298, styleEquipo, 5298, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5310, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(5312, 6, false);
#line 108 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                            Write(equipo);

#line default
#line hidden
            EndContext();
            BeginContext(5318, 139, true);
            WriteLiteral("</span>\r\n                            </th>\r\n                            <th>\r\n                                <span class=\"mvc-grid-larger\"");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 5457, "\"", 5477, 1);
#line 111 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
WriteAttributeValue("", 5465, stylePrevia, 5465, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5478, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(5480, 11, false);
#line 111 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                              Write(titlePrevia);

#line default
#line hidden
            EndContext();
            BeginContext(5491, 139, true);
            WriteLiteral("</span>\r\n                            </th>\r\n                            <th>\r\n                                <span class=\"mvc-grid-larger\"");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 5630, "\"", 5651, 1);
#line 114 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
WriteAttributeValue("", 5638, styleCambios, 5638, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5652, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(5654, 12, false);
#line 114 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                               Write(titleCambios);

#line default
#line hidden
            EndContext();
            BeginContext(5666, 139, true);
            WriteLiteral("</span>\r\n                            </th>\r\n                            <th>\r\n                                <span class=\"mvc-grid-larger\"");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 5805, "\"", 5825, 1);
#line 117 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
WriteAttributeValue("", 5813, styleActual, 5813, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5826, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(5828, 11, false);
#line 117 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                              Write(titleActual);

#line default
#line hidden
            EndContext();
            BeginContext(5839, 200, true);
            WriteLiteral("</span>\r\n                            </th>\r\n                            <th>\r\n                                <button class=\"btn btn-outline-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"");
            EndContext();
            BeginContext(6040, 8, false);
#line 120 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                                                                     Write(collapse);

#line default
#line hidden
            EndContext();
            BeginContext(6048, 23, true);
            WriteLiteral("\" aria-expanded=\"false\"");
            EndContext();
            BeginWriteAttribute("aria-controls", " aria-controls=\"", 6071, "\"", 6103, 1);
#line 120 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
WriteAttributeValue("", 6087, collapseControl, 6087, 16, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(6104, 199, true);
            WriteLiteral(">Alineaciones</button>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n            <div class=\"collapse\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 6303, "\"", 6324, 1);
#line 126 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
WriteAttributeValue("", 6308, collapseControl, 6308, 16, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(6325, 388, true);
            WriteLiteral(@">
                <div class=""card card-body"">
                    <div class=""row"">
                        <div class=""col"">
                            Jornada previa (si están los cambios abiertos, coincide con la alineación de la jornada carrusel)
                            <div id=""grid-previa"" class=""mvc-grid"" data-name="""" data-filter-mode=""FilterRow"" data-source-url="""">
");
            EndContext();
#line 132 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                  
                                    previas = previas.OrderBy(p => p.OrdenPuesto).ToList();
                                    

#line default
#line hidden
            BeginContext(6880, 749, false);
#line 134 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                Write(Html.Grid(previas)
                                        .Build(columns =>
                                        {
                                            columns.Add(model => model.Puesto).Titled("Puesto");
                                            columns.Add(model => model.Jugador).Titled("Jugador");
                                            columns.Add(model => model.Club).Titled("Club");
                                        })
                                        .Css("webgrid-noticiaAplicacion") // Overwrites all classes with the new ones
                                        .Empty("No hay alineaciones")
                                        .Id("ajax-grid-previa")
                                    );

#line default
#line hidden
            EndContext();
            BeginContext(7667, 220, true);
            WriteLiteral("                            </div>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            Cambios (sólo tiene sentido modificar esta tabla si están los cambios abiertos)\r\n");
            EndContext();
#line 150 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                              
                                cambios = cambios.OrderBy(p => p.OrdenPuesto).ToList();
                                

#line default
#line hidden
            BeginContext(8042, 1786, false);
#line 152 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                            Write(Html.Grid(cambios)
                                    .Build(columns =>
                                    {
                                        columns.Add(model => model.Puesto).Titled("Puesto");
                                        columns.Add(model => model.Jugador).Titled("Jugador");
                                        columns.Add(model => model.Club).Titled("Club");
                                        columns.Add(model => $"<button type='button' class='btn btn-primary' data-tipo='aliCambios' data-id=\"{model.IdAlineacion}\" " +
                                            $" data-puesto=\"{model.Puesto}\" data-jugador=\"{model.Jugador}\" data-club=\"{model.Club}\" " +
                                            $"data-toggle='modal' data-target='#editAlineacionModal'>Editar</button>").Encoded(false);

                                        columns.Add(model => $"<button type='button' class='btn btn-primary' data-tipo='aliCambios' data-id=\"{model.IdAlineacion}\" " +
                                            $" data-puesto=\"{model.Puesto}\" data-jugador=\"{model.Jugador}\" data-club=\"{model.Club}\" " +
                                            $"data-toggle='modal' data-target='#deleteAlineacionModal'>Borrar</button>").Encoded(false);
                                    })
                                    .RowAttributed(model => new { style= diferenciasCambios.Contains(model.Jugador) ? "background-color:red":"background-color:transparent"})
                                    .Css("webgrid-noticiaAplicacion") // Overwrites all classes with the new ones
                                    .Empty("No hay alineaciones")
                                    .Id("ajax-grid-previa")
                                );

#line default
#line hidden
            EndContext();
            BeginContext(9862, 142, true);
            WriteLiteral("                            <button type=\"button\" class=\'btn btn-primary btn-lg\' data-toggle=\'modal\' data-name=\"aliCambios\" data-competicion=\"");
            EndContext();
            BeginContext(10005, 11, false);
#line 172 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                                                                                         Write(competicion);

#line default
#line hidden
            EndContext();
            BeginContext(10016, 18, true);
            WriteLiteral("\" data-categoria=\"");
            EndContext();
            BeginContext(10035, 9, false);
#line 172 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                                                                                                                       Write(categoria);

#line default
#line hidden
            EndContext();
            BeginContext(10044, 15, true);
            WriteLiteral("\" data-equipo=\"");
            EndContext();
            BeginContext(10060, 6, false);
#line 172 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                                                                                                                                                Write(equipo);

#line default
#line hidden
            EndContext();
            BeginContext(10066, 183, true);
            WriteLiteral("\" data-target=\'#addAlineacionModal\'>Agregar jugador</button>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            Jornada carrusel\r\n");
            EndContext();
#line 176 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                              
                                actual = actual.OrderBy(p => p.OrdenPuesto).ToList();
                                

#line default
#line hidden
            BeginContext(10402, 1782, false);
#line 178 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                            Write(Html.Grid(actual)
                                    .Build(columns =>
                                    {
                                        columns.Add(model => model.Puesto).Titled("Puesto");
                                        columns.Add(model => model.Jugador).Titled("Jugador");
                                        columns.Add(model => model.Club).Titled("Club");
                                        columns.Add(model => $"<button type='button' class='btn btn-primary' data-tipo='aliActual' data-id=\"{model.IdAlineacion}\" " +
                                            $" data-puesto=\"{model.Puesto}\" data-jugador=\"{model.Jugador}\" data-club=\"{model.Club}\" " +
                                            $"data-toggle='modal' data-target='#editAlineacionModal'>Editar</button>").Encoded(false);

                                        columns.Add(model => $"<button type='button' class='btn btn-primary' data-tipo='aliActual' data-id=\"{model.IdAlineacion}\" " +
                                            $" data-puesto=\"{model.Puesto}\" data-jugador=\"{model.Jugador}\" data-club=\"{model.Club}\" " +
                                            $"data-toggle='modal' data-target='#deleteAlineacionModal'>Borrar</button>").Encoded(false);
                                    })
                                    .RowAttributed(model => new { style= diferenciasActual.Contains(model.Jugador) ? "background-color:red":"background-color:transparent"})
                                    .Css("webgrid-noticiaAplicacion") // Overwrites all classes with the new ones
                                    .Empty("No hay alineaciones")
                                    .Id("ajax-grid-previa")
                                );

#line default
#line hidden
            EndContext();
            BeginContext(12218, 141, true);
            WriteLiteral("                            <button type=\"button\" class=\'btn btn-primary btn-lg\' data-toggle=\'modal\' data-name=\"aliActual\" data-competicion=\"");
            EndContext();
            BeginContext(12360, 11, false);
#line 198 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                                                                                        Write(competicion);

#line default
#line hidden
            EndContext();
            BeginContext(12371, 18, true);
            WriteLiteral("\" data-categoria=\"");
            EndContext();
            BeginContext(12390, 9, false);
#line 198 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                                                                                                                      Write(categoria);

#line default
#line hidden
            EndContext();
            BeginContext(12399, 15, true);
            WriteLiteral("\" data-equipo=\"");
            EndContext();
            BeginContext(12415, 6, false);
#line 198 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                                                                                                                                                                                               Write(equipo);

#line default
#line hidden
            EndContext();
            BeginContext(12421, 166, true);
            WriteLiteral("\" data-target=\'#addAlineacionModal\'>Agregar jugador</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n");
            EndContext();
#line 203 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"

            ind++;
        }

#line default
#line hidden
            BeginContext(12620, 673, true);
            WriteLiteral(@"    </div>
</div>

<div class=""modal fade"" id=""addAlineacionModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addAlineacionModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""addAlineacionModalLabel"">Nuevo jugador (seleccionar un único jugador y guardar) </h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(13293, 1654, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cd7a7414463a01cbac044dacbdd51387e4c973b229469", async() => {
                BeginContext(13299, 614, true);
                WriteLiteral(@"
                    <div class=""form-group"">
                        <input type=""text"" class=""form-control"" id=""add-competicion"" disabled>
                        <input type=""text"" class=""form-control"" id=""add-categoria"" disabled>
                        <input type=""text"" class=""form-control"" id=""add-equipo"" disabled>
                        <input type=""text"" class=""form-control"" id=""add-tipo"" disabled hidden>
                    </div>
                    <div class=""form-group"">
                        <label for=""portero-text"" class=""col-form-label"">Porteros</label>
                        ");
                EndContext();
                BeginContext(13914, 100, false);
#line 228 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                   Write(Html.DropDownList("add-portero", porteros, "Seleccionar un portero", new { @class = "form-control"}));

#line default
#line hidden
                EndContext();
                BeginContext(14014, 192, true);
                WriteLiteral("\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"defensa-text\" class=\"col-form-label\">Defensas:</label>\r\n                        ");
                EndContext();
                BeginContext(14207, 101, false);
#line 232 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                   Write(Html.DropDownList("add-defensa", defensas, "Seleccionar un defensa", new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(14308, 187, true);
                WriteLiteral("\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"medio-text\" class=\"col-form-label\">Medios</label>\r\n                        ");
                EndContext();
                BeginContext(14496, 95, false);
#line 236 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                   Write(Html.DropDownList("add-medio", medios, "Seleccionar un medio", new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(14591, 195, true);
                WriteLiteral("\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"delantero-text\" class=\"col-form-label\">Delanteros</label>\r\n                        ");
                EndContext();
                BeginContext(14787, 107, false);
#line 240 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                   Write(Html.DropDownList("add-delantero", delanteros, "Seleccionar un delantero", new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(14894, 46, true);
                WriteLiteral("\r\n                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14947, 935, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-save=""modal-add"">Guardar</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""editAlineacionModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""editAlineacionModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""editAlineacionModalLabel"">Editando... </h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(15882, 1937, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cd7a7414463a01cbac044dacbdd51387e4c973b235131", async() => {
                BeginContext(15888, 1340, true);
                WriteLiteral(@"
                    <div class=""row"">
                        <input type=""hidden"" class=""form-control"" id=""edit-id-alineacion"">
                        <input type=""hidden"" class=""form-control"" id=""edit-tipo"" />
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <label for=""puesto-text"" class=""col-form-label"">Puesto:</label>
                                <input type=""text"" class=""form-control"" id=""edit-puesto-text"" disabled>
                            </div>
                            <div class=""form-group"">
                                <label for=""jugador-text"" class=""col-form-label"">Jugador:</label>
                                <input type=""text"" class=""form-control"" id=""edit-jugador-text"" disabled>
                            </div>
                            <div class=""form-group"">
                                <label for=""club-text"" class=""col-form-label"">Club:</label>
                           ");
                WriteLiteral(@"     <input type=""text"" class=""form-control"" id=""edit-club-text"" disabled>
                            </div>
                        </div>
                        <div class=""col-6"">
                            <label for=""jugador-text"" class=""col-form-label"">Cambiar por:</label>
                            ");
                EndContext();
                BeginContext(17229, 103, false);
#line 282 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                       Write(Html.DropDownList("listaPorteros", porteros, "Seleccionar un portero", new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(17332, 30, true);
                WriteLiteral("\r\n                            ");
                EndContext();
                BeginContext(17363, 103, false);
#line 283 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                       Write(Html.DropDownList("listaDefensas", defensas, "Seleccionar un defensa", new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(17466, 30, true);
                WriteLiteral("\r\n                            ");
                EndContext();
                BeginContext(17497, 97, false);
#line 284 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                       Write(Html.DropDownList("listaMedios", medios, "Seleccionar un medio", new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(17594, 30, true);
                WriteLiteral("\r\n                            ");
                EndContext();
                BeginContext(17625, 109, false);
#line 285 "D:\srcRepository\ProyectosEstela\Ligamania\LigamaniaCoreApp\Views\Herramientas\_alineacionesCategoria.cshtml"
                       Write(Html.DropDownList("listaDelanteros", delanteros, "Seleccionar un delantero", new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(17734, 78, true);
                WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17819, 948, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-save=""modal-edit"">Guardar</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""deleteAlineacionModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""deleteAlineacionModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""deleteAlineacionModalLabel"">Confirmar borrado </h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(18767, 960, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cd7a7414463a01cbac044dacbdd51387e4c973b241130", async() => {
                BeginContext(18773, 947, true);
                WriteLiteral(@"
                    <input type=""hidden"" class=""form-control"" id=""delete-id-alineacion"">
                    <input type=""hidden"" class=""form-control"" id=""delete-tipo"" />
                    <div class=""form-group"">
                        <label for=""puesto-text"" class=""col-form-label"">Puesto:</label>
                        <input type=""text"" class=""form-control"" id=""delete-puesto-text"">
                    </div>
                    <div class=""form-group"">
                        <label for=""jugador-text"" class=""col-form-label"">Jugador:</label>
                        <input type=""text"" class=""form-control"" id=""delete-jugador-text"">
                    </div>
                    <div class=""form-group"">
                        <label for=""club-text"" class=""col-form-label"">Club:</label>
                        <input type=""text"" class=""form-control"" id=""delete-club-text"">
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(19727, 8968, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-save=""modal-edit"">Eliminar</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script type=""text/javascript"">
    $('#editAlineacionModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var id = button.data('id') // Extract info from data-* attributes
        var puesto = button.data('puesto')
        var jugador = button.data('jugador')
        var club = button.data('club')
        var tipo = button.data('tipo')

        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
 ");
            WriteLiteral(@"       modal.find('.modal-title').text('Edición de jugador ' + jugador)
        modal.find('#edit-id-alineacion').val(id)
        modal.find('#edit-puesto-text').val(puesto)
        modal.find('#edit-jugador-text').val(jugador)
        modal.find('#edit-club-text').val(club)
        modal.find('#edit-tipo').val(tipo)

        if (puesto === ""Portero"") {
            $(""#listaPorteros"").show();
            $(""#listaDefensas"").hide();
            $(""#listaMedios"").hide();
            $(""#listaDelanteros"").hide();
        }
        if (puesto === ""Defensa"") {
            $(""#listaPorteros"").hide();
            $(""#listaDefensas"").show();
            $(""#listaMedios"").hide();
            $(""#listaDelanteros"").hide();
        }
        if (puesto === ""Medio"") {
            $(""#listaPorteros"").hide();
            $(""#listaDefensas"").hide();
            $(""#listaMedios"").show();
            $(""#listaDelanteros"").hide();
        }
        if (puesto === ""Delantero"") {
            $(""#listaPor");
            WriteLiteral(@"teros"").hide();
            $(""#listaDefensas"").hide();
            $(""#listaMedios"").hide();
            $(""#listaDelanteros"").show();
        }
    });
    $('#deleteAlineacionModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var id = button.data('id') // Extract info from data-* attributes
        var puesto = button.data('puesto')
        var jugador = button.data('jugador')
        var club = button.data('club')
        var tipo = button.data('tipo')

        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        modal.find('.modal-title').text('Borrado del jugador ' + jugador)
        modal.find('#delete-id-alineacion').val(id)
        modal.find('#delete-puesto-text').val(puesto)
        modal.f");
            WriteLiteral(@"ind('#delete-jugador-text').val(jugador)
        modal.find('#delete-club-text').val(club)
        modal.find('#delete-tipo').val(tipo)
    });
    $('#addAlineacionModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var tipo = button.data('name') // Extract info from data-* attributes
        var competicion = button.data('competicion')
        var categoria = button.data('categoria')
        var equipo = button.data('equipo')

        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        if (tipo === ""aliActual"") {
            modal.find('.modal-title').text('Agregar un jugador en la jornada carrusel')
        }
        else {
            modal.find('.modal-title').text('Agregar un jugador en la tabla C");
            WriteLiteral(@"ambios')
        }

        modal.find('#add-competicion').val(competicion)
        modal.find('#add-categoria').val(categoria)
        modal.find('#add-equipo').val(equipo)
        modal.find('#add-tipo').val(tipo)
    });

    $('#addAlineacionModal').on('click', '[data-save=""modal-add""]', function (event) {
        event.preventDefault();
        var portero = $('#add-portero').val();
        var defensa = $('#add-defensa').val();
        var medio = $('#add-medio').val();
        var delantero = $('#add-delantero').val();

        var competicion = $('#add-competicion').val();
        var categoria = $('#add-categoria').val();
        var equipo = $('#add-equipo').val();
        var tipo = $('#add-tipo').val();

        jugador = portero;
        if (defensa !== """") { jugador = defensa;}
        if (medio !== """") { jugador = medio;}
        if (delantero !== """") { jugador = delantero;}
        const alineacion = {
            Jugador: jugador,
            Competicion: competicio");
            WriteLiteral(@"n,
            Categoria: categoria,
            Equipo: equipo,
            Tipo: tipo
        };
        var urlToCall = '/Herramientas/AgregarJugador';
        $.ajax({
            type: ""POST"",
            data: JSON.stringify(alineacion),
            url: urlToCall,
            contentType: ""application/json; charset=utf-8"",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function (response) {
                alert(""Error al agregar una alineación"");
            }
        }).done(function (response) {
            alert(response.message);
            if (response.result) {
                $('#addAlineacionModal').modal('hide');
                //location.reload();
            }
        });
    });

    $('#editAlineacionModal').on('click', '[data-save=""modal-edit""]', function (event) {
        event.preventDefault();
        var id = $('#edit-id-alineacion').val();
        var puesto = $('#edit-puesto-text').val();
   ");
            WriteLiteral(@"     var jugador = $('#edit-jugador-text').val();
        var club = $('#edit-club-text').val();
        var tipo = $('#edit-tipo').val();

        var jugadorCambio = """";
        if (puesto === ""Portero"") {
            jugadorCambio = $('#listaPorteros').val();
        }
        if (puesto === ""Defensa"") {
            jugadorCambio = $('#listaDefensas').val();
        }
        if (puesto === ""Medio"") {
            jugadorCambio = $('#listaMedios').val();
        }
        if (puesto === ""Delantero"") {
            jugadorCambio = $('#listaDelanteros').val();
        }
        //alert(jugadorCambio);
        const alineacion = {
            IdAlineacion: id,
            Puesto: puesto,
            Jugador: jugador,
            Club: club,
            JugadorCambio: jugadorCambio,
            Tipo: tipo
        };
        var urlToCall = '/Herramientas/EditarJugador';
        $.ajax({
            type: ""POST"",
            data: JSON.stringify(alineacion),
            url: urlToCal");
            WriteLiteral(@"l,
            contentType: ""application/json; charset=utf-8"",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function (response) {
                alert(""Error al editar una alineación"");
            }
        }).done(function (response) {
            alert(response.message);
            if (response.result) {
                $('#editAlineacionModal').modal('hide');
                //location.reload();
            }
        });
    });

    $('#deleteAlineacionModal').on('click', '[data-save=""modal-edit""]', function (event) {
        event.preventDefault();
        alert('onclick delete');
        var id = $('#delete-id-alineacion').val();
        var puesto = $('#delete-puesto-text').val();
        var jugador = $('#delete-jugador-text').val();
        var club = $('#delete-club-text').val();
        var tipo = $('#edit-tipo').val();

        const alineacion = {
            IdAlineacion: id,
            Puesto: puesto,
");
            WriteLiteral(@"            Jugador: jugador,
            Club: club,
            Tipo: tipo
        };
        var urlToCall = '/Herramientas/BorrarJugador';
        $.ajax({
            type: ""POST"",
            data: JSON.stringify(alineacion),
            url: urlToCall,
            contentType: ""application/json; charset=utf-8"",
            processData: true,
            cache: false,
            dataType: 'json',
            error: function (response) {
                alert(response.message);
            }
        }).done(function (response) {
            alert(response.message);
            if (response.result) {
                $('#deleteAlineacionModal').modal('hide');
                //location.reload();
            }
        });
    });
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ILigamaniaService _ligamaniaService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
